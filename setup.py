#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
üìÇ –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É—á–µ—Ç–∞ –°–ò–ó
"""

import os
import argparse
from datetime import datetime


def create_directory(path):
    """
    –°–æ–∑–¥–∞–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

    Args:
        path (str): –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    """
    if not os.path.exists(path):
        os.makedirs(path)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {path}")
    else:
        print(f"üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {path}")


def create_empty_file(path):
    """
    –°–æ–∑–¥–∞–µ—Ç –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

    Args:
        path (str): –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
    """
    if not os.path.exists(path):
        with open(path, 'w', encoding='utf-8') as f:
            pass
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª: {path}")
    else:
        print(f"üìÑ –§–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {path}")


def create_init_file(directory_path):
    """
    –°–æ–∑–¥–∞–µ—Ç __init__.py —Ñ–∞–π–ª –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏

    Args:
        directory_path (str): –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    """
    init_path = os.path.join(directory_path, '__init__.py')
    if not os.path.exists(init_path):
        with open(init_path, 'w', encoding='utf-8') as f:
            pass
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª __init__.py –≤ {directory_path}")
    else:
        print(f"üìÑ –§–∞–π–ª __init__.py —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ {directory_path}")


def setup_directory_structure(base_dir):
    """
    –°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É—á–µ—Ç–∞ –°–ò–ó

    Args:
        base_dir (str): –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞
    """
    directory_app = os.path.join(base_dir, 'directory')

    # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    directories = [
        os.path.join(directory_app, 'models'),
        os.path.join(directory_app, 'views'),
        os.path.join(directory_app, 'forms'),
        os.path.join(directory_app, 'templates', 'directory', 'siz_issued'),
        os.path.join(directory_app, 'admin'),
        os.path.join(directory_app, 'migrations'),
    ]

    for directory in directories:
        create_directory(directory)
        create_init_file(directory)

    # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –º–æ–¥–µ–ª–µ–π
    model_files = [
        os.path.join(directory_app, 'models', 'siz_issued.py'),
    ]

    for file_path in model_files:
        create_empty_file(file_path)

    # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è —Ñ–æ—Ä–º
    form_files = [
        os.path.join(directory_app, 'forms', 'siz_issued.py'),
    ]

    for file_path in form_files:
        create_empty_file(file_path)

    # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π
    view_files = [
        os.path.join(directory_app, 'views', 'siz_issued.py'),
    ]

    for file_path in view_files:
        create_empty_file(file_path)

    # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤
    template_files = [
        os.path.join(directory_app, 'templates', 'directory', 'siz_issued', 'issue_form.html'),
        os.path.join(directory_app, 'templates', 'directory', 'siz_issued', 'personal_card.html'),
        os.path.join(directory_app, 'templates', 'directory', 'siz_issued', 'return_form.html'),
    ]

    for file_path in template_files:
        create_empty_file(file_path)

    # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª –¥–ª—è –∞–¥–º–∏–Ω–∫–∏
    admin_files = [
        os.path.join(directory_app, 'admin', 'siz_issued.py'),
    ]

    for file_path in admin_files:
        create_empty_file(file_path)

    # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏
    current_time = datetime.now().strftime('%Y%m%d_%H%M')
    migration_file = os.path.join(directory_app, 'migrations', f'{current_time}_siz_issued.py')
    create_empty_file(migration_file)


def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
    """
    parser = argparse.ArgumentParser(description='–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è —É—á–µ—Ç–∞ –°–ò–ó')
    parser.add_argument('--base-dir', type=str, default='.',
                        help='–ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: —Ç–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è)')

    args = parser.parse_args()

    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É—á–µ—Ç–∞ –°–ò–ó...")
    setup_directory_structure(args.base_dir)
    print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–∞–π–ª—ã –∫–æ–¥–æ–º.")


if __name__ == "__main__":
    main()