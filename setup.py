#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤ —Å–∏—Å—Ç–µ–º—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.

–ó–∞–ø—É—Å–∫–∞–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ Django.
"""
import os
import sys
import shutil

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if not os.path.exists('manage.py'):
    print("–û—à–∏–±–∫–∞: –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ Django.")
    sys.exit(1)

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–∞–ø–æ–∫ –∏ —Ñ–∞–π–ª–æ–≤
directories = [
    # –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    "directory/models",
    "directory/views",
    "directory/forms",
    "directory/utils",
    "directory/urls",
    "directory/admin",
    "directory/management/commands",
    "directory/data/templates",

    # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤
    "directory/templates/directory/documents",
    "directory/templates/admin/directory",  # –î–æ–±–∞–≤–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤

    # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    "static/directory/js",
    "static/directory/css",
]

files = [
    # –ú–æ–¥–µ–ª–∏
    {
        "path": "directory/models/document_template.py",
        "description": "–ú–æ–¥–µ–ª–∏ –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
    },

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥–µ–ª–µ–π
    {
        "path": "directory/models/__init__.py",
        "description": "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π —Å –∏–º–ø–æ—Ä—Ç–æ–º –Ω–æ–≤–æ–π –º–æ–¥–µ–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
        "content": """from directory.models.employee import Employee
from directory.models.organization import Organization
from directory.models.position import Position
from directory.models.department import Department
from directory.models.subdivision import Subdivision
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
from directory.models.document_template import DocumentTemplate, GeneratedDocument
"""
    },

    # –£—Ç–∏–ª–∏—Ç—ã
    {
        "path": "directory/utils/declension.py",
        "description": "–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Å–∫–ª–æ–Ω–µ–Ω–∏—è —Å–ª–æ–≤ —Å –ø–æ–º–æ—â—å—é pymorphy2"
    },
    {
        "path": "directory/utils/docx_generator.py",
        "description": "–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ —à–∞–±–ª–æ–Ω–æ–≤"
    },

    # –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è
    {
        "path": "directory/views/documents.py",
        "description": "–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏"
    },

    # –§–æ—Ä–º—ã
    {
        "path": "directory/forms/document_forms.py",
        "description": "–§–æ—Ä–º—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏"
    },

    # URL-–º–∞—Ä—à—Ä—É—Ç—ã
    {
        "path": "directory/urls/documents.py",
        "description": "URL-–º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏"
    },

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ URL-–º–∞—Ä—à—Ä—É—Ç–æ–≤
    {
        "path": "directory/urls/__init__.py",
        "description": "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è URL-–º–∞—Ä—à—Ä—É—Ç–æ–≤ —Å –∏–º–ø–æ—Ä—Ç–æ–º –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
    },

    # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    {
        "path": "directory/admin/document_admin.py",
        "description": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –º–æ–¥–µ–ª–µ–π –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
    },

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∫–∏
    {
        "path": "directory/admin/__init__.py",
        "description": "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∫–∏ —Å –∏–º–ø–æ—Ä—Ç–æ–º –∞–¥–º–∏–Ω–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
        "content": """from directory.admin.employee_admin import EmployeeAdmin
from directory.admin.organization_admin import OrganizationAdmin
from directory.admin.position_admin import PositionAdmin
from directory.admin.department_admin import DepartmentAdmin
from directory.admin.subdivision_admin import SubdivisionAdmin
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω–∫—É –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
from directory.admin.document_admin import DocumentTemplateAdmin, GeneratedDocumentAdmin
"""
    },

    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤
    {
        "path": "directory/management/commands/init_document_templates.py",
        "description": "–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
    },

    # –®–∞–±–ª–æ–Ω—ã HTML
    {
        "path": "directory/templates/directory/documents/document_selection.html",
        "description": "–®–∞–±–ª–æ–Ω –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞"
    },
    {
        "path": "directory/templates/directory/documents/internship_order_form.html",
        "description": "–®–∞–±–ª–æ–Ω –¥–ª—è —Ñ–æ—Ä–º—ã —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è –æ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–µ"
    },
    {
        "path": "directory/templates/directory/documents/admission_order_form.html",
        "description": "–®–∞–±–ª–æ–Ω –¥–ª—è —Ñ–æ—Ä–º—ã —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è –æ –¥–æ–ø—É—Å–∫–µ –∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ"
    },
    {
        "path": "directory/templates/directory/documents/document_preview.html",
        "description": "–®–∞–±–ª–æ–Ω –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞"
    },
    {
        "path": "directory/templates/directory/documents/document_detail.html",
        "description": "–®–∞–±–ª–æ–Ω –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞"
    },
    {
        "path": "directory/templates/directory/documents/document_list.html",
        "description": "–®–∞–±–ª–æ–Ω –¥–ª—è —Å–ø–∏—Å–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
    },

    # JavaScript
    {
        "path": "static/directory/js/employee_tree_documents.js",
        "description": "JavaScript –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –∑–∞–ø—É—Å–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
    },

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –¥–µ—Ä–µ–≤–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞)
    {
        "path": "directory/templates/admin/directory/employee_tree_list.html",
        "description": "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –¥–µ—Ä–µ–≤–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∫–Ω–æ–ø–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
        "check_exist": True,  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        "content": """{% extends "admin/base_site.html" %}
{% load i18n static %}

{% block extrahead %}
    {{ block.super }}
    <script src="{% static 'directory/js/employee_tree_documents.js' %}"></script>
{% endblock %}

{% block object-tools %}
  <!-- –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ -->
  <div class="object-tools">
    <ul class="object-tools">
      <li>
        <a href="{% url 'admin:directory_employee_add' %}" class="addlink">‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</a>
      </li>
      <li>
        <a href="#" id="generate-documents-btn" class="btn" style="display: none;">üìÑ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã</a>
      </li>
    </ul>
  </div>
{% endblock %}

{% block content %}
  <h1>üë• –î–µ—Ä–µ–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</h1>
  <ul>
    {% for organization, org_group in employee_tree.items %}
      <li>
        <strong>üè¢ {{ organization.full_name_ru }}</strong>
        <ul>
          {% for subdivision, sub_group in org_group.items %}
            <li>
              {% if subdivision == "–ë–µ–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è" %}
                <em>–ë–µ–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è</em>
              {% else %}
                üè≠ {{ subdivision.name }}
              {% endif %}
              <ul>
                {% for department, employees in sub_group.items %}
                  <li>
                    {% if department == "–ë–µ–∑ –æ—Ç–¥–µ–ª–∞" %}
                      <em>–ë–µ–∑ –æ—Ç–¥–µ–ª–∞</em>
                    {% else %}
                      üìÇ {{ department.name }}
                    {% endif %}
                    <ul>
                      {% for employee in employees %}
                        <li>
                          <input type="checkbox" class="action-select" value="{{ employee.id }}">
                          üë§ {{ employee.full_name_nominative }} ‚Äì {{ employee.position.position_name }}
                        </li>
                      {% endfor %}
                    </ul>
                  </li>
                {% endfor %}
              </ul>
            </li>
          {% endfor %}
        </ul>
      </li>
    {% endfor %}
  </ul>
{% endblock %}"""
    },

    # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
    {
        "path": "directory/data/document_templates_instructions.md",
        "description": "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —à–∞–±–ª–æ–Ω–æ–≤ DOCX"
    },
    {
        "path": "directory/data/documents_user_guide.md",
        "description": "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
    },
]


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
def create_directories():
    print("–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...")
    for directory in directories:
        path = os.path.join(os.getcwd(), directory)
        if not os.path.exists(path):
            os.makedirs(path)
            print(f"–°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {path}")
        else:
            print(f"–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {path}")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
def create_files():
    print("\n–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...")
    for file_info in files:
        path = os.path.join(os.getcwd(), file_info["path"])

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        directory = os.path.dirname(path)
        if not os.path.exists(directory):
            os.makedirs(directory)
            print(f"–°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {directory}")

        # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        if file_info.get("check_exist", False) and not os.path.exists(path):
            print(f"–§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å –≤—Ä—É—á–Ω—É—é: {path}")
            # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º, –µ—Å–ª–∏ –æ–Ω–æ —É–∫–∞–∑–∞–Ω–æ
            if "content" in file_info:
                with open(path, 'w', encoding='utf-8') as f:
                    f.write(file_info["content"])
                print(f"–°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω —Ñ–∞–π–ª–∞ —Å –±–∞–∑–æ–≤—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º: {path}")
            continue

        # –ï—Å–ª–∏ —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
        if os.path.exists(path):
            backup_path = path + ".bak"
            if not os.path.exists(backup_path):
                shutil.copy2(path, backup_path)
                print(f"–°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")

        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª
        with open(path, 'w', encoding='utf-8') as f:
            # –ï—Å–ª–∏ –µ—Å—Ç—å —É–∫–∞–∑–∞–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
            if "content" in file_info:
                f.write(file_info["content"])
            else:
                # –ò–Ω–∞—á–µ –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫—É —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
                f.write(f'"""\n{file_info["description"]}\n"""\n\n# –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –∫–æ–¥–æ–º\n')

        print(f"–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: {path}")


# –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç—ã—Ö —Ñ–∞–π–ª–æ–≤ __init__.py
def create_init_files():
    print("\n–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...")
    for directory in directories:
        if directory.startswith('directory') and not directory.endswith('templates') and not directory.endswith(
                'directory'):
            init_path = os.path.join(os.getcwd(), directory, "__init__.py")
            if not os.path.exists(init_path):
                with open(init_path, 'w', encoding='utf-8') as f:
                    f.write('"""\n–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è.\n"""\n')
                print(f"–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {init_path}")


# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    print("–ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...")

    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    create_directories()

    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã
    create_files()

    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    create_init_files()

    print("\n–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
    print("\n–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
    print("pip install pymorphy2 docxtpl\n")


if __name__ == "__main__":
    main()