#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—É—Å—Ç—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ –º–Ω–æ–≥–æ—à–∞–≥–æ–≤–æ–π —Ñ–æ—Ä–º—ã
"""
import os
import sys


def create_directory(path):
    """–°–æ–∑–¥–∞–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"""
    if not os.path.exists(path):
        os.makedirs(path)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {path}")
    else:
        print(f"‚ÑπÔ∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {path}")


def create_file(path, content=""):
    """–°–æ–∑–¥–∞–µ—Ç –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª —Å –±–∞–∑–æ–≤—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª —É–∂–µ
    if os.path.exists(path):
        print(f"‚ö†Ô∏è –§–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º: {path}")
        return False

    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    directory = os.path.dirname(path)
    if directory and not os.path.exists(directory):
        os.makedirs(directory)

    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª
    with open(path, 'w', encoding='utf-8') as f:
        f.write(content)

    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: {path}")
    return True


def main():
    # –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞ (–∏–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ—é)
    base_dir = os.path.abspath(os.getcwd())

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏ –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º
    dirs = {
        'forms': os.path.join(base_dir, 'directory', 'forms'),
        'views': os.path.join(base_dir, 'directory', 'views'),
        'templates': os.path.join(base_dir, 'templates', 'directory', 'hiring'),
        'api': os.path.join(base_dir, 'directory', 'api'),
    }

    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    for dir_path in dirs.values():
        create_directory(dir_path)

    # –§–∞–π–ª—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
    files = [
        # –§–æ—Ä–º—ã
        {
            'path': os.path.join(dirs['forms'], 'hiring_wizard.py'),
            'content': '''# -*- coding: utf-8 -*-
"""
üìù –§–æ—Ä–º—ã –¥–ª—è –º–Ω–æ–≥–æ—à–∞–≥–æ–≤–æ–π —Ñ–æ—Ä–º—ã –ø—Ä–∏–µ–º–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É
–°–æ–¥–µ—Ä–∂–∏—Ç —Ñ–æ—Ä–º—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞ –≤–∏–∑–∞—Ä–¥–∞
"""
from django import forms
from django.utils import timezone
from django.utils.translation import gettext_lazy as _
from crispy_forms.helper import FormHelper
from crispy_forms.layout import Layout, Fieldset, Submit, HTML, Button
from dal import autocomplete

from directory.models import Employee, Position, EmployeeHiring

# –§–æ—Ä–º–∞ –¥–ª—è —à–∞–≥–∞ 1 - –±–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
class Step1BasicInfoForm(forms.Form):
    """–ë–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–µ –∏ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏"""
    # –í–∞—à –∫–æ–¥ –¥–ª—è —Ñ–æ—Ä–º—ã...
    pass

# –§–æ—Ä–º–∞ –¥–ª—è —à–∞–≥–∞ 2 - –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
class Step2MedicalInfoForm(forms.Form):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –º–µ–¥–æ—Å–º–æ—Ç—Ä–∞"""
    # –í–∞—à –∫–æ–¥ –¥–ª—è —Ñ–æ—Ä–º—ã...
    pass

# –§–æ—Ä–º–∞ –¥–ª—è —à–∞–≥–∞ 3 - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –°–ò–ó
class Step3SIZInfoForm(forms.Form):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –°–ò–ó"""
    # –í–∞—à –∫–æ–¥ –¥–ª—è —Ñ–æ—Ä–º—ã...
    pass
'''
        },
        # –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è
        {
            'path': os.path.join(dirs['views'], 'hiring_wizard.py'),
            'content': '''# -*- coding: utf-8 -*-
"""
üë®‚Äçüíº –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –º–Ω–æ–≥–æ—à–∞–≥–æ–≤–æ–π —Ñ–æ—Ä–º—ã –ø—Ä–∏–µ–º–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç FormWizard –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —à–∞–≥–æ–≤
"""
from django.contrib.auth.mixins import LoginRequiredMixin
from django.urls import reverse_lazy
from django.shortcuts import redirect
from django.contrib import messages
from django.utils.translation import gettext_lazy as _
from django.db import transaction
from formtools.wizard.views import SessionWizardView

from directory.forms.hiring_wizard import Step1BasicInfoForm, Step2MedicalInfoForm, Step3SIZInfoForm
from directory.models import Employee, EmployeeHiring, Position

class HiringWizardView(LoginRequiredMixin, SessionWizardView):
    """–ú–∞—Å—Ç–µ—Ä —Ñ–æ—Ä–º—ã –¥–ª—è –ø–æ—à–∞–≥–æ–≤–æ–≥–æ –ø—Ä–∏–µ–º–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É"""
    # –í–∞—à –∫–æ–¥ –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è...
    pass
'''
        },
        # API
        {
            'path': os.path.join(dirs['views'], 'api.py'),
            'content': '''# -*- coding: utf-8 -*-
"""
üîå API –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —Ñ–æ—Ä–º–æ–π
"""
from django.http import JsonResponse
from django.shortcuts import get_object_or_404
from django.contrib.auth.decorators import login_required

from directory.models import Position, MedicalExaminationNorm

@login_required
def position_needs_step_info(request, position_id):
    """
    API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–º, –Ω—É–∂–Ω—ã –ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —à–∞–≥–∏
    –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
    """
    # –í–∞—à –∫–æ–¥ –¥–ª—è API...
    pass
'''
        },
        # –®–∞–±–ª–æ–Ω
        {
            'path': os.path.join(dirs['templates'], 'wizard_form.html'),
            'content': '''{% extends 'base.html' %}
{% load static %}
{% load crispy_forms_tags %}

{% block title %}{{ title }}{% endblock %}

{% block extra_css %}
<style>
    /* –°—Ç–∏–ª–∏ –¥–ª—è –º–Ω–æ–≥–æ—à–∞–≥–æ–≤–æ–π —Ñ–æ—Ä–º—ã */
</style>
{% endblock %}

{% block content %}
<div class="container">
    <h1 class="mt-4 mb-4">{{ title }}</h1>

    <!-- –®–∞–≥–∏ –≤–∏–∑–∞—Ä–¥–∞ -->
    <div class="wizard-steps">
        <!-- –í–∞—à HTML-–∫–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —à–∞–≥–æ–≤ -->
    </div>

    <!-- –§–æ—Ä–º–∞ —à–∞–≥–∞ -->
    <div class="card">
        <!-- –í–∞—à HTML-–∫–æ–¥ –¥–ª—è —Ñ–æ—Ä–º—ã -->
    </div>
</div>
{% endblock %}

{% block extra_js %}
<script>
    // –í–∞—à JavaScript –¥–ª—è —Ñ–æ—Ä–º—ã
</script>
{% endblock %}
'''
        },
        # URL –º–∞—Ä—à—Ä—É—Ç—ã (–æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è)
        {
            'path': os.path.join(base_dir, 'directory', 'urls_hiring_wizard.py'),
            'content': '''# -*- coding: utf-8 -*-
"""
üîó URL-–º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –º–Ω–æ–≥–æ—à–∞–≥–æ–≤–æ–π —Ñ–æ—Ä–º—ã –ø—Ä–∏–µ–º–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É
–î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π urls.py
"""
from django.urls import path
from directory.views.hiring_wizard import HiringWizardView
from directory.views.api import position_needs_step_info

# URL-–º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –º–Ω–æ–≥–æ—à–∞–≥–æ–≤–æ–π —Ñ–æ—Ä–º—ã
urlpatterns = [
    # –ú–Ω–æ–≥–æ—à–∞–≥–æ–≤–∞—è —Ñ–æ—Ä–º–∞ –ø—Ä–∏–µ–º–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É
    path('hiring/wizard/', HiringWizardView.as_view(), name='hiring_wizard'),

    # API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç—Ä–µ–±—É–µ–º—ã—Ö —à–∞–≥–æ–≤
    path('api/position/<int:position_id>/needs_step_info/', 
         position_needs_step_info, 
         name='position_needs_step_info'),
]
'''
        },
    ]

    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã
    created_count = 0
    for file_info in files:
        if create_file(file_info['path'], file_info['content']):
            created_count += 1

    print(f"\nüìã –ò—Ç–æ–≥–æ: –°–æ–∑–¥–∞–Ω–æ {created_count} —Ñ–∞–π–ª–æ–≤ –∏–∑ {len(files)}")
    print("""
‚ú® –î–∞–ª—å–Ω–µ–π—à–∏–µ —à–∞–≥–∏:
1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
   pip install django-formtools

2. –ù–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–∞–π–ª—ã –∫–æ–¥–æ–º –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞

3. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ URL-–º–∞—Ä—à—Ä—É—Ç—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–π urls.py:
   from directory.urls_hiring_wizard import urlpatterns as hiring_wizard_urls
   urlpatterns += hiring_wizard_urls

4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:
   python manage.py makemigrations
   python manage.py migrate
    """)


if __name__ == "__main__":
    main()