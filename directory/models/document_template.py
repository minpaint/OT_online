from django.db import models
from django.core.files.storage import FileSystemStorage
from django.utils.translation import gettext_lazy as _

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
document_storage = FileSystemStorage(location='media/document_templates/')

class DocumentTemplate(models.Model):
    """
    üìÉ –ú–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (DOCX —Ñ–∞–π–ª—ã)
    
    –•—Ä–∞–Ω–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —à–∞–±–ª–æ–Ω–∞—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è 
    –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.
    """
    
    # –¢–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    DOCUMENT_TYPES = (
        ('internship_order', 'üîñ –†–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–µ –æ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–µ'),
        ('admission_order', 'üîñ –†–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–µ –æ –¥–æ–ø—É—Å–∫–µ –∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ'),
        ('knowledge_protocol', 'üìã –ü—Ä–æ—Ç–æ–∫–æ–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞'),
        ('doc_familiarization', 'üìù –õ–∏—Å—Ç –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏'),
    )
    
    name = models.CharField(_("–ù–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞"), max_length=255)
    description = models.TextField(_("–û–ø–∏—Å–∞–Ω–∏–µ"), blank=True)
    document_type = models.CharField(
        _("–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞"), 
        max_length=50, 
        choices=DOCUMENT_TYPES
    )
    template_file = models.FileField(
        _("–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞"), 
        upload_to='document_templates/', 
        storage=document_storage
    )
    is_active = models.BooleanField(_("–ê–∫—Ç–∏–≤–µ–Ω"), default=True)
    created_at = models.DateTimeField(_("–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è"), auto_now_add=True)
    updated_at = models.DateTimeField(_("–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"), auto_now=True)
    
    class Meta:
        verbose_name = _("–®–∞–±–ª–æ–Ω –¥–æ–∫—É–º–µ–Ω—Ç–∞")
        verbose_name_plural = _("–®–∞–±–ª–æ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
        ordering = ['-updated_at']
    
    def __str__(self):
        return f"{self.name} ({self.get_document_type_display()})"


class GeneratedDocument(models.Model):
    """
    üìÑ –ú–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    
    –•—Ä–∞–Ω–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ —à–∞–±–ª–æ–Ω–æ–≤.
    """
    template = models.ForeignKey(
        DocumentTemplate, 
        verbose_name=_("–®–∞–±–ª–æ–Ω"), 
        on_delete=models.SET_NULL,
        null=True
    )
    document_file = models.FileField(
        _("–§–∞–π–ª –¥–æ–∫—É–º–µ–Ω—Ç–∞"), 
        upload_to='generated_documents/%Y/%m/%d/'
    )
    employee = models.ForeignKey(
        'directory.Employee',
        verbose_name=_("–°–æ—Ç—Ä—É–¥–Ω–∏–∫"),
        on_delete=models.CASCADE,
        related_name="documents"
    )
    created_by = models.ForeignKey(
        'auth.User',
        verbose_name=_("–°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"),
        on_delete=models.SET_NULL,
        null=True,
        blank=True
    )
    created_at = models.DateTimeField(_("–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è"), auto_now_add=True)
    document_data = models.JSONField(
        _("–î–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞"), 
        default=dict, 
        blank=True,
        help_text=_("–î–∞–Ω–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞")
    )
    
    class Meta:
        verbose_name = _("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç")
        verbose_name_plural = _("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã")
        ordering = ['-created_at']
    
    def __str__(self):
        return f"–î–æ–∫—É–º–µ–Ω—Ç –¥–ª—è {self.employee} ({self.created_at.strftime('%d.%m.%Y')})"