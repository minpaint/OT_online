# üìÅ directory/models/department.py
from django.db import models
from django.core.exceptions import ValidationError


class Department(models.Model):
    """–û—Ç–¥–µ–ª ‚Äì –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ—Ç–∏–π —É—Ä–æ–≤–µ–Ω—å –∏–µ—Ä–∞—Ä—Ö–∏–∏."""
    name = models.CharField("–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", max_length=255)
    short_name = models.CharField("–°–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", max_length=255, blank=True)

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –∏–º–µ–Ω–∞ –¥–ª—è ForeignKey
    organization = models.ForeignKey(
        'directory.Organization',  # –ò–∑–º–µ–Ω–µ–Ω–æ –∑–¥–µ—Å—å
        on_delete=models.PROTECT,
        related_name="departments",
        verbose_name="–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è"
    )

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –∏–º–µ–Ω–∞ –¥–ª—è ChainedForeignKey
    subdivision = models.ForeignKey(
        'directory.StructuralSubdivision',  # –ò–∑–º–µ–Ω–µ–Ω–æ –∑–¥–µ—Å—å
        on_delete=models.PROTECT,
        verbose_name="–°—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ",
        related_name="departments"
    )

    def clean(self):
        if self.subdivision and self.subdivision.organization != self.organization:
            raise ValidationError({
                'subdivision': '–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏'
            })

    def save(self, *args, **kwargs):
        self.clean()
        super().save(*args, **kwargs)

    def __str__(self):
        return f"{self.name} ({self.subdivision})"

    class Meta:
        verbose_name = "–û—Ç–¥–µ–ª"
        verbose_name_plural = "–û—Ç–¥–µ–ª—ã"
        ordering = ['name']