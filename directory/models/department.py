from django.db import models
from django.core.exceptions import ValidationError

class Department(models.Model):
    """
    üìÇ –ú–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–¥–µ–ª–æ–≤.
    """
    name = models.CharField("–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", max_length=255)
    short_name = models.CharField("–°–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", max_length=255, blank=True)
    organization = models.ForeignKey(
        'directory.Organization',
        on_delete=models.PROTECT,
        related_name="departments",
        verbose_name="–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è"
    )
    subdivision = models.ForeignKey(
        'directory.StructuralSubdivision',
        on_delete=models.PROTECT,
        related_name="departments",
        verbose_name="–°—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ",
        null=True,
        blank=True
    )

    class Meta:
        verbose_name = "–û—Ç–¥–µ–ª"
        verbose_name_plural = "–û—Ç–¥–µ–ª—ã"
        ordering = ['name']
        unique_together = [
            ['name', 'organization', 'subdivision']
        ]

    def clean(self):
        if self.subdivision and self.subdivision.organization != self.organization:
            raise ValidationError({
                'subdivision': '–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏'
            })

    def save(self, *args, **kwargs):
        self.clean()
        super().save(*args, **kwargs)

    def __str__(self):
        if self.subdivision:
            return f"{self.name} ({self.subdivision.name})"
        return f"{self.name} ({self.organization.short_name_ru})"