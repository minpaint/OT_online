from django.db import models
from django.core.exceptions import ValidationError

class Commission(models.Model):
    """
    –ú–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–º–∏—Å—Å–∏–π –ø–æ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–Ω–∞–Ω–∏–π –û–¢.
    –ö–æ–º–∏—Å—Å–∏—è –º–æ–∂–µ—Ç —Ä–∞—Å–ø–æ–ª–∞–≥–∞—Ç—å—Å—è:
      - –ù–∞ —É—Ä–æ–≤–Ω–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ organization),
      - –ù–∞ —É—Ä–æ–≤–Ω–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è (organization + subdivision),
      - –ù–∞ —É—Ä–æ–≤–Ω–µ –æ—Ç–¥–µ–ª–∞ (organization + subdivision + department).
    """
    COMMISSION_TYPES = [
        ('ot', 'üõ°Ô∏è –û—Ö—Ä–∞–Ω–∞ —Ç—Ä—É–¥–∞'),
        ('eb', '‚ö° –≠–ª–µ–∫—Ç—Ä–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å'),
        ('pb', 'üî• –ü–æ–∂–∞—Ä–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å'),
        ('other', 'üìã –ò–Ω–∞—è'),
    ]

    name = models.CharField('–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–∏', max_length=255)
    commission_type = models.CharField(
        '–¢–∏–ø –∫–æ–º–∏—Å—Å–∏–∏',
        max_length=10,
        choices=COMMISSION_TYPES,
        default='ot'
    )
    organization = models.ForeignKey(
        'directory.Organization',
        on_delete=models.CASCADE,
        related_name='commissions',
        verbose_name='–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è',
        blank=True,
        null=True
    )
    subdivision = models.ForeignKey(
        'directory.StructuralSubdivision',
        on_delete=models.CASCADE,
        related_name='commissions',
        verbose_name='–°—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ',
        blank=True,
        null=True
    )
    department = models.ForeignKey(
        'directory.Department',
        on_delete=models.CASCADE,
        related_name='commissions',
        verbose_name='–û—Ç–¥–µ–ª',
        blank=True,
        null=True
    )
    is_active = models.BooleanField('–ê–∫—Ç–∏–≤–Ω–∞', default=True)
    created_at = models.DateTimeField('–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è', auto_now_add=True)
    updated_at = models.DateTimeField('–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è', auto_now=True)

    class Meta:
        verbose_name = '–ö–æ–º–∏—Å—Å–∏—è –ø–æ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–Ω–∞–Ω–∏–π'
        verbose_name_plural = '–ö–æ–º–∏—Å—Å–∏–∏ –ø–æ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–Ω–∞–Ω–∏–π'
        ordering = ['-is_active', 'name']

    def __str__(self):
        return self.name

    def clean(self):
        """
        –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:
          - –î–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã–±—Ä–∞–Ω–∞ —Ö–æ—Ç—è –±—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è.
          - –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ subdivision –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —Ç–æ–π –∂–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏.
          - –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –æ—Ç–¥–µ–ª ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ department –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç subdivision, –∞ subdivision ‚Äî organization.
        """
        # 1) –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
        if not self.organization:
            raise ValidationError("–ù–µ –≤—ã–±—Ä–∞–Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –¥–ª—è –∫–æ–º–∏—Å—Å–∏–∏.")

        # 2) –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ:
        if self.subdivision:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É —ç—Ç–æ–≥–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Å–æ–≤–ø–∞–¥–∞–µ—Ç organization_id
            if self.subdivision.organization_id != self.organization.id:
                raise ValidationError(
                    "–í—ã–±—Ä–∞–Ω–Ω–æ–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏."
                )

        # 3) –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –æ—Ç–¥–µ–ª:
        if self.department:
            # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–æ subdivision
            if not self.subdivision:
                raise ValidationError("–ß—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å –æ—Ç–¥–µ–ª, –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ.")
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–¥–µ–ª –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —ç—Ç–æ–º—É –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é
            if self.department.subdivision_id != self.subdivision.id:
                raise ValidationError(
                    "–í—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–¥–µ–ª –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é."
                )

    def get_level_display(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–µ–ª–æ–≤–µ–∫–æ–ø–æ–Ω—è—Ç–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–≤–Ω—è –∫–æ–º–∏—Å—Å–∏–∏"""
        if self.department:
            return f"–£—Ä–æ–≤–µ–Ω—å –æ—Ç–¥–µ–ª–∞: {self.department.name}"
        elif self.subdivision:
            return f"–£—Ä–æ–≤–µ–Ω—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è: {self.subdivision.name}"
        elif self.organization:
            return f"–£—Ä–æ–≤–µ–Ω—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: {self.organization.short_name_ru}"
        return "–£—Ä–æ–≤–µ–Ω—å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω (–æ—à–∏–±–∫–∞)"

class CommissionMember(models.Model):
    """
    –ú–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–º–∏—Å—Å–∏–∏ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ä–æ–ª–∏.
    """
    ROLE_CHOICES = [
        ('chairman', 'üëë –ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å –∫–æ–º–∏—Å—Å–∏–∏'),
        ('member', 'üë§ –ß–ª–µ–Ω –∫–æ–º–∏—Å—Å–∏–∏'),
        ('secretary', 'üìù –°–µ–∫—Ä–µ—Ç–∞—Ä—å –∫–æ–º–∏—Å—Å–∏–∏'),
    ]

    commission = models.ForeignKey(
        Commission,
        on_delete=models.CASCADE,
        related_name='members',
        verbose_name='–ö–æ–º–∏—Å—Å–∏—è'
    )
    employee = models.ForeignKey(
        'directory.Employee',
        on_delete=models.CASCADE,
        related_name='commission_roles',
        verbose_name='–°–æ—Ç—Ä—É–¥–Ω–∏–∫'
    )
    role = models.CharField(
        '–†–æ–ª—å –≤ –∫–æ–º–∏—Å—Å–∏–∏',
        max_length=10,
        choices=ROLE_CHOICES,
        default='member'
    )
    is_active = models.BooleanField('–ê–∫—Ç–∏–≤–µ–Ω', default=True)

    class Meta:
        verbose_name = '–£—á–∞—Å—Ç–Ω–∏–∫ –∫–æ–º–∏—Å—Å–∏–∏'
        verbose_name_plural = '–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–º–∏—Å—Å–∏–∏'
        ordering = ['role', 'employee__full_name_nominative']
        unique_together = ['commission', 'employee', 'role']

    def __str__(self):
        return f"{self.get_role_display()}: {self.employee.full_name_nominative}"

    def clean(self):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ:
          - –î–ª—è —Ä–æ–ª–µ–π 'chairman' –∏ 'secretary' –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∞–∫—Ç–∏–≤–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –≤ –∫–æ–º–∏—Å—Å–∏–∏.
        """
        if not self.commission_id:
            return  # –ö–æ–º–∏—Å—Å–∏—è –µ—â—ë –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º

        if self.is_active and self.role in ['chairman', 'secretary']:
            existing = CommissionMember.objects.filter(
                commission=self.commission,
                role=self.role,
                is_active=True
            ).exclude(id=self.id)
            if existing.exists():
                role_display = dict(self.ROLE_CHOICES)[self.role]
                raise ValidationError(
                    f'–í –∫–æ–º–∏—Å—Å–∏–∏ —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π {role_display.lower()}. '
                    '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –µ–≥–æ –ø–µ—Ä–µ–¥ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ.'
                )
