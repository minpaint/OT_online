# üìÅ directory/models/siz_issued.py
from django.db import models
from django.utils import timezone
from django.core.exceptions import ValidationError
from datetime import timedelta


class SIZIssued(models.Model):
    """
    üõ°Ô∏è –ú–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—ã–¥–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –°–ò–ó

    –•—Ä–∞–Ω–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–π –≤—ã–¥–∞—á–µ –°–ò–ó —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É, –≤–∫–ª—é—á–∞—è:
    - –ö–æ–º—É –≤—ã–¥–∞–Ω–æ
    - –ö–∞–∫–æ–µ –°–ò–ó –≤—ã–¥–∞–Ω–æ
    - –ö–æ–≥–¥–∞ –≤—ã–¥–∞–Ω–æ
    - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ
    - –ü—Ä–æ—Ü–µ–Ω—Ç –∏–∑–Ω–æ—Å–∞
    - –°—Ä–æ–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ —Ç.–¥.
    """
    employee = models.ForeignKey(
        'directory.Employee',
        on_delete=models.CASCADE,
        related_name='issued_siz',
        verbose_name="–°–æ—Ç—Ä—É–¥–Ω–∏–∫"
    )
    siz = models.ForeignKey(
        'directory.SIZ',
        on_delete=models.CASCADE,
        related_name='issues',
        verbose_name="–°–ò–ó"
    )
    issue_date = models.DateField(
        verbose_name="–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏",
        default=timezone.now
    )
    quantity = models.PositiveIntegerField(
        verbose_name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ",
        default=1
    )
    wear_percentage = models.PositiveIntegerField(
        verbose_name="–ü—Ä–æ—Ü–µ–Ω—Ç –∏–∑–Ω–æ—Å–∞",
        default=0,
        help_text="–£–∫–∞–∂–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç –∏–∑–Ω–æ—Å–∞ –æ—Ç 0 –¥–æ 100"
    )
    cost = models.DecimalField(
        verbose_name="–°—Ç–æ–∏–º–æ—Å—Ç—å",
        max_digits=10,
        decimal_places=2,
        null=True,
        blank=True
    )
    replacement_date = models.DateField(
        verbose_name="–î–∞—Ç–∞ –∑–∞–º–µ–Ω—ã/—Å–ø–∏—Å–∞–Ω–∏—è",
        null=True,
        blank=True
    )
    is_returned = models.BooleanField(
        verbose_name="–í–æ–∑–≤—Ä–∞—â–µ–Ω–æ",
        default=False
    )
    return_date = models.DateField(
        verbose_name="–î–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞",
        null=True,
        blank=True
    )
    notes = models.TextField(
        verbose_name="–ü—Ä–∏–º–µ—á–∞–Ω–∏—è",
        blank=True
    )

    # –î–ª—è —É—á–µ—Ç–∞ —É—Å–ª–æ–≤–∏–π –≤—ã–¥–∞—á–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ü—Ä–∏ —Ä–∞–±–æ—Ç–µ –Ω–∞ –≤—ã—Å–æ—Ç–µ")
    condition = models.CharField(
        verbose_name="–£—Å–ª–æ–≤–∏–µ –≤—ã–¥–∞—á–∏",
        max_length=255,
        blank=True,
        help_text="–£—Å–ª–æ–≤–∏–µ, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –≤—ã–¥–∞–Ω–æ –°–ò–ó"
    )

    # –î–ª—è –ø–æ–¥–ø–∏—Å–∏ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏
    received_signature = models.BooleanField(
        verbose_name="–ü–æ–¥–ø–∏—Å—å –æ –ø–æ–ª—É—á–µ–Ω–∏–∏",
        default=False
    )

    class Meta:
        verbose_name = "–í—ã–¥–∞–Ω–Ω–æ–µ –°–ò–ó"
        verbose_name_plural = "–í—ã–¥–∞–Ω–Ω—ã–µ –°–ò–ó"
        ordering = ['-issue_date', 'employee__full_name_nominative']

    def __str__(self):
        return f"{self.siz} - {self.employee} ({self.issue_date})"

    def clean(self):
        """
        üß™ –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º

        –ü—Ä–æ–≤–µ—Ä–∫–∏:
        - –ï—Å–ª–∏ –°–ò–ó –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ, –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —É–∫–∞–∑–∞–Ω–∞ –¥–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
        - –î–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–Ω—å—à–µ –¥–∞—Ç—ã –≤—ã–¥–∞—á–∏
        - –ü—Ä–æ—Ü–µ–Ω—Ç –∏–∑–Ω–æ—Å–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 100
        """
        if self.is_returned and not self.return_date:
            raise ValidationError({
                'return_date': '–ï—Å–ª–∏ –°–ò–ó –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –¥–∞—Ç—É –≤–æ–∑–≤—Ä–∞—Ç–∞'
            })

        if self.return_date and self.issue_date and self.return_date < self.issue_date:
            raise ValidationError({
                'return_date': '–î–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–Ω—å—à–µ –¥–∞—Ç—ã –≤—ã–¥–∞—á–∏'
            })

        if self.wear_percentage > 100:
            raise ValidationError({
                'wear_percentage': '–ü—Ä–æ—Ü–µ–Ω—Ç –∏–∑–Ω–æ—Å–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 100'
            })

    def save(self, *args, **kwargs):
        """
        üíæ –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è

        - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã—á–∏—Å–ª—è–µ—Ç –¥–∞—Ç—É –∑–∞–º–µ–Ω—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ä–æ–∫–∞ –Ω–æ—Å–∫–∏ –°–ò–ó
        - –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
        """
        # –ï—Å–ª–∏ –¥–∞—Ç–∞ –∑–∞–º–µ–Ω—ã –Ω–µ —É–∫–∞–∑–∞–Ω–∞, –≤—ã—á–∏—Å–ª—è–µ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ä–æ–∫–∞ –Ω–æ—Å–∫–∏
        if not self.replacement_date and self.siz and self.siz.wear_period > 0 and self.issue_date:
            wear_period_days = self.siz.wear_period * 30  # –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π
            self.replacement_date = self.issue_date + timedelta(days=wear_period_days)

        # –í—ã–ø–æ–ª–Ω—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
        self.clean()

        super().save(*args, **kwargs)

    @property
    def days_until_replacement(self):
        """
        üìÖ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ –∑–∞–º–µ–Ω—ã –°–ò–ó

        Returns:
            int –∏–ª–∏ None: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ –∑–∞–º–µ–Ω—ã –∏–ª–∏ None, –µ—Å–ª–∏ "–î–æ –∏–∑–Ω–æ—Å–∞"
        """
        if self.is_returned or not self.replacement_date:
            return None

        today = timezone.now().date()
        return (self.replacement_date - today).days if self.replacement_date > today else 0

    @property
    def status(self):
        """
        üîÑ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –≤—ã–¥–∞–Ω–Ω–æ–≥–æ –°–ò–ó

        Returns:
            str: –°—Ç–∞—Ç—É—Å –°–ò–ó (–í –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏, –í–æ–∑–≤—Ä–∞—â–µ–Ω–æ, –¢—Ä–µ–±—É–µ—Ç –∑–∞–º–µ–Ω—ã, –∏ —Ç.–¥.)
        """
        if self.is_returned:
            return "–í–æ–∑–≤—Ä–∞—â–µ–Ω–æ"

        days = self.days_until_replacement
        if days is not None and days <= 0:
            return "–¢—Ä–µ–±—É–µ—Ç –∑–∞–º–µ–Ω—ã"

        if self.wear_percentage >= 80:
            return "–°–∏–ª—å–Ω—ã–π –∏–∑–Ω–æ—Å"
        elif self.wear_percentage >= 50:
            return "–°—Ä–µ–¥–Ω–∏–π –∏–∑–Ω–æ—Å"

        return "–í –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏"