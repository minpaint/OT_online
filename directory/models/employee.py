# üìÅ directory/models/employee.py
from django.db import models
from django.core.exceptions import ValidationError

class Employee(models.Model):
    HEIGHT_CHOICES = [
        ("158-164 —Å–º", "158-164 —Å–º"),
        ("170-176 —Å–º", "170-176 —Å–º"),
        ("182-188 —Å–º", "182-188 —Å–º"),
        ("194-200 —Å–º", "194-200 —Å–º"),
    ]
    CLOTHING_SIZE_CHOICES = [
        ("44-46", "44-46"),
        ("48-50", "48-50"),
        ("52-54", "52-54"),
        ("56-58", "56-58"),
        ("60-62", "60-62"),
        ("64-66", "64-66"),
    ]
    SHOE_SIZE_CHOICES = [(str(i), str(i)) for i in range(36, 49)]

    full_name_nominative = models.CharField(max_length=255, verbose_name="–§–ò–û (–∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–π)")
    full_name_dative = models.CharField(max_length=255, verbose_name="–§–ò–û (–¥–∞—Ç–µ–ª—å–Ω—ã–π)")
    date_of_birth = models.DateField(verbose_name="–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è")
    place_of_residence = models.TextField(verbose_name="–ú–µ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è")

    organization = models.ForeignKey(
        'directory.Organization',
        on_delete=models.PROTECT,
        verbose_name="–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è",
        related_name='employees'
    )
    subdivision = models.ForeignKey(
        'directory.StructuralSubdivision',
        on_delete=models.PROTECT,
        verbose_name="–°—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ",
        null=True,
        blank=True
    )
    department = models.ForeignKey(
        'directory.Department',
        on_delete=models.PROTECT,
        null=True,
        blank=True,
        verbose_name="–û—Ç–¥–µ–ª"
    )
    position = models.ForeignKey(
        'directory.Position',
        on_delete=models.PROTECT,
        verbose_name="–î–æ–ª–∂–Ω–æ—Å—Ç—å"
    )

    height = models.CharField(max_length=15, choices=HEIGHT_CHOICES, blank=True, verbose_name="–†–æ—Å—Ç")
    clothing_size = models.CharField(max_length=5, choices=CLOTHING_SIZE_CHOICES, blank=True, verbose_name="–†–∞–∑–º–µ—Ä –æ–¥–µ–∂–¥—ã")
    shoe_size = models.CharField(max_length=2, choices=SHOE_SIZE_CHOICES, blank=True, verbose_name="–†–∞–∑–º–µ—Ä –æ–±—É–≤–∏")
    is_contractor = models.BooleanField(default=False, verbose_name="–î–æ–≥–æ–≤–æ—Ä –ø–æ–¥—Ä—è–¥–∞")

    def clean(self):
        if self.department and not self.subdivision:
            raise ValidationError({'department': '–ù–µ–ª—å–∑—è —É–∫–∞–∑–∞—Ç—å –æ—Ç–¥–µ–ª –±–µ–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–≥–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è'})
        if self.position:
            if self.department:
                if self.position.department and self.position.department != self.department:
                    raise ValidationError({'position': '–í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –æ—Ç–¥–µ–ª—É'})
            elif self.subdivision:
                if self.position.subdivision and self.position.subdivision != self.subdivision:
                    raise ValidationError({'position': '–í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é'})
            if self.position.organization != self.organization:
                raise ValidationError({'position': '–í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏'})
        if self.subdivision and self.subdivision.organization != self.organization:
            raise ValidationError({'subdivision': '–í—ã–±—Ä–∞–Ω–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏'})
        if self.department and self.department.subdivision != self.subdivision:
            raise ValidationError({'department': '–í—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–¥–µ–ª –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é'})

    def save(self, *args, **kwargs):
        self.clean()
        super().save(*args, **kwargs)

    def __str__(self):
        parts = [self.full_name_nominative]
        if self.position:
            parts.append(f"- {self.position}")
        return " ".join(parts)

    class Meta:
        verbose_name = "–°–æ—Ç—Ä—É–¥–Ω–∏–∫"
        verbose_name_plural = "–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏"
        ordering = ['full_name_nominative']
