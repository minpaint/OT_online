from django.db import models
from mptt.models import MPTTModel, TreeForeignKey

class StructuralSubdivision(MPTTModel):
    """
    üè≠ –ú–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã—Ö –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç MPTT –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.
    """
    name = models.CharField(
        "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ",
        max_length=255
    )
    short_name = models.CharField(
        "–°–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ",
        max_length=255,
        blank=True
    )
    organization = models.ForeignKey(
        'directory.Organization',
        on_delete=models.PROTECT,
        related_name="subdivisions",
        verbose_name="–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è"
    )
    parent = TreeForeignKey(
        'self',
        on_delete=models.CASCADE,
        null=True,
        blank=True,
        related_name='children',
        verbose_name="–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ"
    )

    class MPTTMeta:
        order_insertion_by = ['name']

    class Meta:
        verbose_name = "–°—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ"
        verbose_name_plural = "–°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"
        ordering = ['name']
        unique_together = ['name', 'organization']

    def __str__(self):
        return f"{self.name} ({self.organization.short_name_ru})"

    def get_ancestors_list(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–µ–¥–∫–æ–≤"""
        return [ancestor.name for ancestor in self.get_ancestors(include_self=False)]

    def get_full_path(self):
        """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"""
        ancestors = self.get_ancestors_list()
        ancestors.append(self.name)
        return ' ‚Üí '.join(ancestors)