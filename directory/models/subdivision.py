"""
üè≠ –ú–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã—Ö –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π.
–£–±—Ä–∞–ª–∏ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ—Ç MPTTModel, —Ç–µ–ø–µ—Ä—å —ç—Ç–æ –æ–±—ã—á–Ω–∞—è Model
(–±–µ–∑ –ø–æ–ª—è parent). –¢.–æ. —É –Ω–∞—Å –æ–¥–Ω–æ—É—Ä–æ–≤–Ω–µ–≤–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ,
–ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–µ –Ω–∞–ø—Ä—è–º—É—é –∫ Organization.
"""
from django.db import models
from django.core.exceptions import ValidationError

class StructuralSubdivision(models.Model):
    name = models.CharField(
        "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ",
        max_length=255
    )
    short_name = models.CharField(
        "–°–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ",
        max_length=255,
        blank=True
    )
    organization = models.ForeignKey(
        'directory.Organization',
        on_delete=models.PROTECT,
        related_name="subdivisions",
        verbose_name="–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è"
    )

    class Meta:
        verbose_name = "–°—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ"
        verbose_name_plural = "–°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"
        ordering = ['name']
        unique_together = ['name', 'organization']

    def clean(self):
        # –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ª–æ–≥–∏–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏, –Ω–∞–ø–∏—à–∏—Ç–µ –∑–¥–µ—Å—å üëá
        pass

    def save(self, *args, **kwargs):
        self.clean()
        super().save(*args, **kwargs)

    def __str__(self):
        # üë∑ –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ + –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é
        return f"{self.name} ({self.organization.short_name_ru})"
