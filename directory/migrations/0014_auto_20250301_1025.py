# Generated manually for SIZNorm model refactoring

from django.db import migrations, models


def migrate_groups_to_conditions(apps, schema_editor):
    """
    üîÑ –ü–µ—Ä–µ–Ω–æ—Å –¥–∞–Ω–Ω—ã—Ö –∏–∑ SIZNormGroup –≤ –ø–æ–ª–µ condition –º–æ–¥–µ–ª–∏ SIZNorm
    """
    SIZNorm = apps.get_model('directory', 'SIZNorm')
    SIZNormGroup = apps.get_model('directory', 'SIZNormGroup')

    print("–ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ–Ω–æ—Å –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≥—Ä—É–ø–ø –≤ —É—Å–ª–æ–≤–∏—è...")

    # –î–ª—è –∫–∞–∂–¥–æ–π –Ω–æ—Ä–º—ã, —É –∫–æ—Ç–æ—Ä–æ–π –µ—Å—Ç—å –≥—Ä—É–ø–ø–∞, –∫–æ–ø–∏—Ä—É–µ–º –∏–º—è –≥—Ä—É–ø–ø—ã –≤ –ø–æ–ª–µ condition
    migrated_count = 0
    error_count = 0

    # –°–Ω–∞—á–∞–ª–∞ —É–±–µ–¥–∏–º—Å—è, —á—Ç–æ –º—ã –º–æ–∂–µ–º –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ –≥—Ä—É–ø–ø—ã
    groups = list(SIZNormGroup.objects.all())
    print(f"–ù–∞–π–¥–µ–Ω–æ {len(groups)} –≥—Ä—É–ø–ø –°–ò–ó")

    for norm in SIZNorm.objects.filter(group__isnull=False):
        try:
            group_name = norm.group.name
            norm.condition = group_name
            norm.save(update_fields=['condition'])
            migrated_count += 1
            if migrated_count % 50 == 0:
                print(f"–ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ {migrated_count} –∑–∞–ø–∏—Å–µ–π...")
        except Exception as e:
            error_count += 1
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–æ—Ä–º—ã {norm.id}: {e}")

    print(f"–ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ {migrated_count} –∑–∞–ø–∏—Å–µ–π. –û—à–∏–±–æ–∫: {error_count}")


def reverse_migration(apps, schema_editor):
    """
    ‚Ü©Ô∏è –û–±—Ä–∞—Ç–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è (–¥–ª—è –æ—Ç–∫–∞—Ç–∞)
    """
    print("–û–±—Ä–∞—Ç–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –î–∞–Ω–Ω—ã–µ –Ω–µ –±—É–¥—É—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")


class Migration(migrations.Migration):
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –º–∏–≥—Ä–∞—Ü–∏—é
    dependencies = [
        ('directory', '0012_siz_remove_positionppe_position_and_more'),
    ]

    operations = [
        # 1. –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ condition, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
        migrations.AddField(
            model_name='siznorm',
            name='condition',
            field=models.CharField(
                blank=True,
                default='',
                help_text="–ù–∞–ø—Ä–∏–º–µ—Ä: '–ü—Ä–∏ –≤–ª–∞–∂–Ω–æ–π —É–±–æ—Ä–∫–µ –ø–æ–º–µ—â–µ–Ω–∏–π', '–ü—Ä–∏ —Ä–∞–±–æ—Ç–µ –Ω–∞ –≤—ã—Å–æ—Ç–µ' –∏ —Ç.–¥.",
                max_length=255,
                verbose_name='–£—Å–ª–æ–≤–∏–µ –≤—ã–¥–∞—á–∏'
            ),
            preserve_default=False,
        ),

        # 2. –ü–µ—Ä–µ–Ω–æ—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –≥—Ä—É–ø–ø –≤ —É—Å–ª–æ–≤–∏—è
        migrations.RunPython(
            migrate_groups_to_conditions,
            reverse_code=reverse_migration
        ),

        # 3. –ú–µ–Ω—è–µ–º –æ–ø—Ü–∏–∏ –º–æ–¥–µ–ª–∏ (–ø–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏)
        migrations.AlterModelOptions(
            name='siznorm',
            options={
                'ordering': ['position', 'condition', 'order', 'siz__name'],
                'verbose_name': '–ù–æ—Ä–º–∞ –≤—ã–¥–∞—á–∏ –°–ò–ó',
                'verbose_name_plural': '–ù–æ—Ä–º—ã –≤—ã–¥–∞—á–∏ –°–ò–ó'
            },
        ),

        # 4. –ú–µ–Ω—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ
        migrations.AlterUniqueTogether(
            name='siznorm',
            unique_together={('position', 'siz', 'condition')},
        ),

        # 5. –£–¥–∞–ª—è–µ–º –ø–æ–ª–µ group
        migrations.RemoveField(
            model_name='siznorm',
            name='group',
        ),

        # 6. –£–¥–∞–ª—è–µ–º –º–æ–¥–µ–ª—å SIZNormGroup
        migrations.DeleteModel(
            name='SIZNormGroup',
        ),
    ]