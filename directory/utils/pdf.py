# üìÅ directory/utils/pdf.py

import os
import logging
from io import BytesIO
from django.template.loader import get_template
from django.http import HttpResponse
from xhtml2pdf import pisa
from django.conf import settings
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont

# –ò–º–ø–æ—Ä—Ç –¥–ª—è –ø–æ–¥–º–µ–Ω—ã —à—Ä–∏—Ñ—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ xhtml2pdf
from xhtml2pdf.default import DEFAULT_FONT

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

# üìå –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —à—Ä–∏—Ñ—Ç DejaVuSans –ø–æ–¥ –∏–º–µ–Ω–µ–º "helvetica"
try:
    font_path = os.path.join(settings.BASE_DIR, 'static', 'fonts', 'DejaVuSans.ttf')
    pdfmetrics.registerFont(TTFont('helvetica', font_path))

    # –ü–æ–¥–º–µ–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã "helvetica" –∏ "times" –Ω–∞ –Ω–∞—à DejaVuSans
    DEFAULT_FONT['helvetica'] = 'helvetica'
    DEFAULT_FONT['times'] = 'helvetica'

    logger.info("‚úÖ –®—Ä–∏—Ñ—Ç DejaVuSans —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∫–∞–∫ 'helvetica'")
except Exception as e:
    logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —à—Ä–∏—Ñ—Ç–∞: {e}")


def fetch_resources(uri, rel):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤ (—à—Ä–∏—Ñ—Ç–æ–≤, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π) –¥–ª—è PDF

    Args:
        uri: URI —Ä–µ—Å—É—Ä—Å–∞
        rel: –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å

    Returns:
        –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Ä–µ—Å—É—Ä—Å—É
    """
    logger.debug(f"–ó–∞–ø—Ä–æ—à–µ–Ω —Ä–µ—Å—É—Ä—Å: {uri}")

    if uri.startswith(settings.STATIC_URL):
        path = os.path.join(settings.BASE_DIR, 'static', uri.replace(settings.STATIC_URL, ""))
    elif uri.startswith('/static/'):
        path = os.path.join(settings.BASE_DIR, uri[1:])  # –£–±–∏—Ä–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —Å–ª—ç—à
    else:
        path = os.path.join(settings.BASE_DIR, 'static', uri)

    if os.path.exists(path):
        logger.debug(f"–ù–∞–π–¥–µ–Ω —Ä–µ—Å—É—Ä—Å: {path}")
        return path
    else:
        logger.warning(f"–†–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω: {path}")
        return uri


def render_to_pdf(template_path, context, filename=None, as_attachment=True, landscape=False, pdf_options=None):
    """
    üñ®Ô∏è –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ HTML-—à–∞–±–ª–æ–Ω–∞ –≤ PDF-—Ñ–∞–π–ª

    Args:
        template_path (str): –ü—É—Ç—å –∫ HTML-—à–∞–±–ª–æ–Ω—É
        context (dict): –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —à–∞–±–ª–æ–Ω–∞
        filename (str, optional): –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        as_attachment (bool): –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞–∫ –≤–ª–æ–∂–µ–Ω–∏–µ (True) –∏–ª–∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ (False)
        landscape (bool): –û—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã - –∞–ª—å–±–æ–º–Ω–∞—è (True) –∏–ª–∏ –∫–Ω–∏–∂–Ω–∞—è (False)
        pdf_options (dict, optional): –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è PDF –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏

    Returns:
        HttpResponse: HTTP-–æ—Ç–≤–µ—Ç —Å PDF-—Ñ–∞–π–ª–æ–º –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ
    """
    try:
        context['STATIC_URL'] = settings.STATIC_URL
        context['BASE_DIR'] = settings.BASE_DIR

        template = get_template(template_path)
        html_string = template.render(context)

        result = BytesIO()

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è PDF
        options = {
            'encoding': 'UTF-8',
            'link_callback': fetch_resources
        }

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        if landscape:
            # –í xhtml2pdf –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é —á–µ—Ä–µ–∑ CSS @page –∏–ª–∏ —á–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            options['page_size'] = 'A4-L'  # A4 –≤ –ª–∞–Ω–¥—à–∞—Ñ—Ç–Ω–æ–π –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏

        # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã
        if pdf_options:
            options.update(pdf_options)

        # üîÑ –£–ª—É—á—à–∞–µ–º –æ–ø—Ü–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü
        if 'table_header_font_name' not in options:
            options['table_header_font_name'] = 'helvetica'

        if 'table_header_font_size' not in options:
            options['table_header_font_size'] = 9

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–ø—Ü–∏–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü
        options.setdefault('margin-top', '0.5cm')
        options.setdefault('margin-right', '0.5cm')
        options.setdefault('margin-bottom', '0.5cm')
        options.setdefault('margin-left', '0.5cm')

        # –£—Å—Ç–∞–Ω–æ–≤–∏–º –Ω–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è pisa, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –±–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π
        import logging
        pisa_logger = logging.getLogger('xhtml2pdf')
        original_level = pisa_logger.level
        pisa_logger.setLevel(logging.DEBUG)

        logger.debug(f"üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF —Å –æ–ø—Ü–∏—è–º–∏: {options}")

        pdf = pisa.pisaDocument(
            BytesIO(html_string.encode('UTF-8')),
            dest=result,
            **options
        )

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        pisa_logger.setLevel(original_level)

        if pdf.err:
            errors = [f"–û—à–∏–±–∫–∞ {i}: {err}" for i, err in enumerate(pdf.err) if err]
            error_msg = "\n".join(errors) if errors else str(pdf.err)
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PDF: {error_msg}")
            return HttpResponse(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PDF: {error_msg}", status=500)

        response = HttpResponse(result.getvalue(), content_type='application/pdf')

        if filename:
            disposition = 'attachment' if as_attachment else 'inline'
            response['Content-Disposition'] = f'{disposition}; filename="{filename}"'

        return response

    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PDF: {str(e)}")
        return HttpResponse(
            f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PDF: {str(e)}",
            status=500
        )