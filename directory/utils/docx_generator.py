# directory/utils/docx_generator.py
"""
üìÑ –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å DOCX (–ê–Ω–∞–ª–∏–∑ —à–∞–±–ª–æ–Ω–æ–≤)

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Ç–µ–ø–µ—Ä—å —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —à–∞–±–ª–æ–Ω–æ–≤.
–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ `directory/document_generators/`.
"""
import os
import logging
import re
from django.conf import settings
from directory.models.document_template import DocumentTemplate

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)


def analyze_template(template_id):
    """
    –ê–Ω–∞–ª–∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –≤ —à–∞–±–ª–æ–Ω–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞.
    –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å —à–∞–±–ª–æ–Ω–∞–º–∏.
    Args:
        template_id: ID —à–∞–±–ª–æ–Ω–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    """
    try:
        template = DocumentTemplate.objects.get(id=template_id)
        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —à–∞–±–ª–æ–Ω–∞ –≤ –º–µ–¥–∏–∞
        template_path = template.template_file.path

        if not os.path.exists(template_path):
            logger.error(f"–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {template_path}")
            return {}

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º python-docx –¥–ª—è —á—Ç–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
        from docx import Document
        doc = Document(template_path)
        content = ""
        for para in doc.paragraphs:
            content += para.text + ""

        # TODO: –£–ª—É—á—à–∏—Ç—å –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü –∏ –¥—Ä—É–≥–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        # –ü—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–∏–¥–∞ {{ variable_name }}
        variables = set(re.findall(r'{{[\s]*([^}]+)[\s]*}}', content))
        
        variables_info = {var.strip(): "–ù–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—Å—Ç–µ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–æ–≤" for var in variables}

        logger.info(f"–ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ —à–∞–±–ª–æ–Ω–µ '{template.name}' (ID: {template_id}):")
        for var, source in variables_info.items():
            logger.info(f"- {var} ({source})")
            
        return variables_info

    except DocumentTemplate.DoesNotExist:
        logger.error(f"–®–∞–±–ª–æ–Ω —Å ID {template_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return {}
    except ImportError:
        logger.error("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ python-docx –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–µ: pip install python-docx")
        return {}
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —à–∞–±–ª–æ–Ω–∞ ID {template_id}: {str(e)}")
        import traceback
        logger.error(traceback.format_exc())
        return {}

# –§—É–Ω–∫—Ü–∏–∏ get_document_template, prepare_employee_context, generate_docx_from_template
# –∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ generate_* –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –≤ directory/document_generators/
