# directory/utils/docx_generator.py
"""
üìÑ –ú–æ–¥—É–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ Word

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —à–∞–±–ª–æ–Ω–∞–º–∏ DOCX –∏
–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–∏—Å—Ç–µ–º—ã.
"""
import os
import uuid
import io
import logging
from typing import Dict, Any, Optional
import datetime
import traceback
from docxtpl import DocxTemplate
from django.conf import settings
from django.core.files.base import ContentFile

from directory.models.document_template import DocumentTemplate, GeneratedDocument
from directory.utils.declension import decline_full_name, decline_phrase, get_initials_from_name

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)


def get_template_path(template_id: int) -> str:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —à–∞–±–ª–æ–Ω–∞.
    Args:
        template_id (int): ID —à–∞–±–ª–æ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    Returns:
        str: –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —à–∞–±–ª–æ–Ω–∞
    Raises:
        FileNotFoundError: –ï—Å–ª–∏ —à–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω
    """
    try:
        template = DocumentTemplate.objects.get(id=template_id)
        return os.path.join(settings.MEDIA_ROOT, str(template.template_file))
    except DocumentTemplate.DoesNotExist:
        raise FileNotFoundError(f"–®–∞–±–ª–æ–Ω —Å ID {template_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")


def prepare_employee_context(employee) -> Dict[str, Any]:
    """
    –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –¥–ª—è —à–∞–±–ª–æ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞.
    Args:
        employee: –û–±—ä–µ–∫—Ç –º–æ–¥–µ–ª–∏ Employee
    Returns:
        Dict[str, Any]: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
    """
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
    now = datetime.datetime.now()
    date_str = now.strftime("%d.%m.%Y")
    day = now.strftime("%d")
    month = now.strftime("%m")
    year = now.strftime("%Y")
    year_short = now.strftime("%y")

    # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    context = {
        # –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        'employee': employee,
        # –§–ò–û –≤ —Ä–∞–∑–Ω—ã—Ö –ø–∞–¥–µ–∂–∞—Ö
        'fio_nominative': employee.full_name_nominative,
        'fio_genitive': decline_full_name(employee.full_name_nominative, 'gent'),
        'fio_dative': employee.full_name_dative,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ –≥–æ—Ç–æ–≤–æ–µ –ø–æ–ª–µ –∏–∑ –º–æ–¥–µ–ª–∏
        'fio_accusative': decline_full_name(employee.full_name_nominative, 'accs'),
        'fio_instrumental': decline_full_name(employee.full_name_nominative, 'ablt'),
        'fio_prepositional': decline_full_name(employee.full_name_nominative, 'loct'),
        # –°–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –§–ò–û (–§–∞–º–∏–ª–∏—è –ò.–û.)
        'fio_initials': get_initials_from_name(employee.full_name_nominative),
        # –î–æ–ª–∂–Ω–æ—Å—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö –ø–∞–¥–µ–∂–∞—Ö
        'position_nominative': employee.position.position_name if employee.position else "",
        'position_genitive': decline_phrase(employee.position.position_name, 'gent') if employee.position else "",
        'position_dative': decline_phrase(employee.position.position_name, 'datv') if employee.position else "",
        'position_accusative': decline_phrase(employee.position.position_name, 'accs') if employee.position else "",
        'position_instrumental': decline_phrase(employee.position.position_name, 'ablt') if employee.position else "",
        'position_prepositional': decline_phrase(employee.position.position_name, 'loct') if employee.position else "",
        # –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∏ –æ—Ç–¥–µ–ª
        'department': employee.department.name if employee.department else "",
        'department_genitive': decline_phrase(employee.department.name, 'gent') if employee.department else "",
        'department_dative': decline_phrase(employee.department.name, 'datv') if employee.department else "",
        'subdivision': employee.subdivision.name if employee.subdivision else "",
        'subdivision_genitive': decline_phrase(employee.subdivision.name, 'gent') if employee.subdivision else "",
        'subdivision_dative': decline_phrase(employee.subdivision.name, 'datv') if employee.subdivision else "",
        # –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è
        'organization_name': employee.organization.short_name_ru if employee.organization else "",
        'organization_full_name': employee.organization.full_name_ru if employee.organization else "",
        # –î–∞—Ç—ã –∏ –Ω–æ–º–µ—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        'current_date': date_str,
        'current_day': day,
        'current_month': month,
        'current_year': year,
        'current_year_short': year_short,
        # –ü–æ–ª—è –¥–ª—è –Ω–æ–º–µ—Ä–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ - –∑–∞–ø–æ–ª–Ω—è—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ
        'order_number': "",
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        'internship_duration': "2",  # –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –≤ –¥–Ω—è—Ö
        # –ú–µ—Å—Ç–æ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è (–∏–∑ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏)
        'location': employee.organization.location if employee.organization and hasattr(employee.organization, 'location') and employee.organization.location else "–≥. –ú–∏–Ω—Å–∫",
        # –ü–æ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —à–∞–±–ª–æ–Ω–µ
        'employee_name_initials': get_initials_from_name(employee.full_name_nominative),
    }

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∏—Å–∫ –ø–æ–¥–ø–∏—Å–∞–Ω—Ç–∞ —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–π
    from directory.views.documents.utils import get_document_signer

    signer, level, found = get_document_signer(employee)
    if found:
        context.update({
            'director_position': signer.position.position_name,
            'director_name': get_initials_from_name(signer.full_name_nominative),
            'director_name_initials': get_initials_from_name(signer.full_name_nominative),
            'director_level': level,  # –ú–æ–∂–µ—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        })
    else:
        # –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
        context.update({
            'director_position': "–î–∏—Ä–µ–∫—Ç–æ—Ä",
            'director_name': "–ò.–ò. –ò–≤–∞–Ω–æ–≤",
            'director_name_initials': "–ò.–ò. –ò–≤–∞–Ω–æ–≤",
        })

    return context


def prepare_internship_context(employee, context):
    """
    –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏.
    Args:
        employee: –û–±—ä–µ–∫—Ç –º–æ–¥–µ–ª–∏ Employee
        context: –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    Returns:
        Dict[str, Any]: –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    """
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    from directory.views.documents.utils import get_internship_leader, get_internship_leader_name
    from directory.views.documents.utils import get_internship_leader_position, get_internship_leader_initials
    from directory.utils.declension import decline_phrase, decline_full_name

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏
    leader_position, position_success = get_internship_leader_position(employee)
    leader_name, name_success = get_internship_leader_name(employee)
    leader_initials, initials_success = get_internship_leader_initials(employee)
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    internship_leader, level, success = get_internship_leader(employee)
    
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏: "
               f"success={success}, level={level}, "
               f"position={leader_position}, name={leader_name}")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ
    context.update({
        'head_of_internship_position': leader_position,
        'head_of_internship_name': leader_name,
        'head_of_internship_name_initials': leader_initials,
        'head_of_internship_position_genitive': decline_phrase(leader_position, 'gent') if position_success else leader_position,
        'head_of_internship_name_genitive': decline_full_name(leader_name, 'gent') if name_success else leader_name,
        'internship_leader_level': level,  # –î–æ–±–∞–≤–ª—è–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    })
    
    return context


def generate_docx_from_template(template_id: int, context: Dict[str, Any],
                               employee, user=None) -> Optional[GeneratedDocument]:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç DOCX –Ω–∞ –æ—Å–Ω–æ–≤–µ —à–∞–±–ª–æ–Ω–∞ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∞–Ω–Ω—ã—Ö.
    Args:
        template_id (int): ID —à–∞–±–ª–æ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        context (Dict[str, Any]): –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
        employee: –û–±—ä–µ–∫—Ç –º–æ–¥–µ–ª–∏ Employee
        user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å–æ–∑–¥–∞—é—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    Returns:
        Optional[GeneratedDocument]: –û–±—ä–µ–∫—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω
        try:
            template = DocumentTemplate.objects.get(id=template_id)
            logger.info(f"–®–∞–±–ª–æ–Ω –Ω–∞–π–¥–µ–Ω: {template.name} (ID: {template_id})")
        except DocumentTemplate.DoesNotExist:
            logger.error(f"–®–∞–±–ª–æ–Ω —Å ID {template_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            raise ValueError(f"–®–∞–±–ª–æ–Ω —Å ID {template_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

        template_path = os.path.join(settings.MEDIA_ROOT, str(template.template_file))

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —à–∞–±–ª–æ–Ω–∞
        if not os.path.exists(template_path):
            logger.error(f"–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {template_path}")
            raise FileNotFoundError(f"–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {template_path}")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        file_size = os.path.getsize(template_path)
        if file_size == 0:
            logger.error(f"–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –ø—É—Å—Ç: {template_path}")
            raise ValueError(f"–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –∏–º–µ–µ—Ç –Ω—É–ª–µ–≤–æ–π —Ä–∞–∑–º–µ—Ä: {template_path}")
            
        logger.info(f"–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –≥–æ—Ç–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {template_path}, —Ä–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç")

        # –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω
        try:
            doc = DocxTemplate(template_path)
            logger.info(f"–®–∞–±–ª–æ–Ω —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ DocxTemplate")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —à–∞–±–ª–æ–Ω–∞ –≤ DocxTemplate: {str(e)}")
            raise ValueError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —à–∞–±–ª–æ–Ω–∞ –≤ DocxTemplate: {str(e)}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
        common_keys = ['fio_dative', 'position_dative', 'department', 'subdivision', 
                      'head_of_internship_position', 'head_of_internship_name', 
                      'head_of_internship_name_initials', 'director_position', 
                      'director_name_initials', 'employee_name_initials']
        
        missing_keys = [key for key in common_keys if key not in context]
        if missing_keys:
            logger.warning(f"–í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∫–ª—é—á–∏: {missing_keys}")

        # –ó–∞–ø–æ–ª–Ω—è–µ–º —à–∞–±–ª–æ–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
        try:
            doc.render(context)
            logger.info(f"–®–∞–±–ª–æ–Ω —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω –¥–∞–Ω–Ω—ã–º–∏")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏: {str(e)}")
            raise ValueError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏: {str(e)}")

        # –°–æ–∑–¥–∞–µ–º –∏–º—è –¥–ª—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        filename = f"{template.document_type}_{employee.full_name_nominative.split()[0]}_{datetime.datetime.now().strftime('%Y%m%d_%H%M%S')}.docx"
        logger.info(f"–ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {filename}")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ BytesIO –±—É—Ñ–µ—Ä
        docx_buffer = io.BytesIO()
        doc.save(docx_buffer)
        docx_buffer.seek(0)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞
        file_content = docx_buffer.getvalue()
        if len(file_content) == 0:
            logger.error(f"–°–æ–∑–¥–∞–Ω –ø—É—Å—Ç–æ–π DOCX —Ñ–∞–π–ª –¥–ª—è {filename}")
            raise ValueError("–°–æ–∑–¥–∞–Ω –ø—É—Å—Ç–æ–π DOCX —Ñ–∞–π–ª")
        else:
            logger.info(f"–°–æ–∑–¥–∞–Ω DOCX —Ñ–∞–π–ª {filename}, —Ä–∞–∑–º–µ—Ä: {len(file_content)} –±–∞–π—Ç")

        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ
        generated_doc = GeneratedDocument()
        generated_doc.template = template
        generated_doc.employee = employee
        generated_doc.created_by = user
        generated_doc.document_data = context

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º ContentFile –∏–∑ –±—É—Ñ–µ—Ä–∞
        try:
            generated_doc.document_file.save(filename, ContentFile(file_content))
            generated_doc.save()
            logger.info(f"–î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å ID: {generated_doc.id}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –≤ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            file_path = os.path.join(settings.MEDIA_ROOT, str(generated_doc.document_file))
            if os.path.exists(file_path) and os.path.getsize(file_path) > 0:
                logger.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ –ø—É—Ç–∏ {file_path}, —Ä–∞–∑–º–µ—Ä: {os.path.getsize(file_path)} –±–∞–π—Ç")
            else:
                logger.warning(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç –ø–æ –ø—É—Ç–∏ {file_path}")
                
            return generated_doc
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {str(e)}")
            raise ValueError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {str(e)}")

    except Exception as e:
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ —Å –ø–æ–ª–Ω–æ–π —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–æ–π
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {str(e)}")
        logger.error(traceback.format_exc())
        return None


def get_document_template(document_type):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —à–∞–±–ª–æ–Ω –¥–æ–∫—É–º–µ–Ω—Ç–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞.
    Args:
        document_type (str): –¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞ ('all_orders', 'knowledge_protocol', etc.)
    Returns:
        DocumentTemplate: –û–±—ä–µ–∫—Ç —à–∞–±–ª–æ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ None, –µ—Å–ª–∏ —à–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω
    Example:
        template = get_document_template('all_orders')
    """
    try:
        return DocumentTemplate.objects.get(document_type=document_type, is_active=True)
    except DocumentTemplate.DoesNotExist:
        logger.error(f"–®–∞–±–ª–æ–Ω –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Ç–∏–ø–∞ '{document_type}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None


def generate_document_from_template(template, employee, user=None, context=None):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –∏–∑ —à–∞–±–ª–æ–Ω–∞ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.
    Args:
        template: –û–±—ä–µ–∫—Ç –º–æ–¥–µ–ª–∏ DocumentTemplate
        employee: –û–±—ä–µ–∫—Ç –º–æ–¥–µ–ª–∏ Employee
        user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å–æ–∑–¥–∞—é—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        context: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    Returns:
        Optional[GeneratedDocument]: –û–±—ä–µ–∫—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
    """
    if not template:
        logger.error("–ù–µ —É–∫–∞–∑–∞–Ω —à–∞–±–ª–æ–Ω –¥–æ–∫—É–º–µ–Ω—Ç–∞")
        return None

    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    base_context = prepare_employee_context(employee)

    # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    if context:
        base_context.update(context)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
    return generate_docx_from_template(template.id, base_context, employee, user)


def generate_all_orders(employee, user=None, custom_context=None):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–µ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.
    –í–∫–ª—é—á–∞–µ—Ç —Å—Ç–∞–∂–∏—Ä–æ–≤–∫—É –∏ –¥–æ–ø—É—Å–∫ –∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ.
    Args:
        employee: –û–±—ä–µ–∫—Ç –º–æ–¥–µ–ª–∏ Employee
        user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å–æ–∑–¥–∞—é—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        custom_context: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    Returns:
        Optional[GeneratedDocument]: –û–±—ä–µ–∫—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
    """
    try:
        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —à–∞–±–ª–æ–Ω –¥–ª—è –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è
        template = None
        templates = DocumentTemplate.objects.filter(document_type='all_orders', is_active=True).order_by('-updated_at')
        
        if templates.exists():
            template = templates.first()
            logger.info(f"–ù–∞–π–¥–µ–Ω —à–∞–±–ª–æ–Ω –¥–ª—è –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è: {template.name} (ID: {template.id})")
        else:
            logger.error("–ê–∫—Ç–∏–≤–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω")
            raise ValueError("–ê–∫—Ç–∏–≤–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ —à–∞–±–ª–æ–Ω–∞
        template_path = os.path.join(settings.MEDIA_ROOT, str(template.template_file))
        if not os.path.exists(template_path):
            logger.error(f"–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ –ø—É—Ç–∏: {template_path}")
            raise FileNotFoundError(f"–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {template_path}")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ —à–∞–±–ª–æ–Ω–∞
        file_size = os.path.getsize(template_path)
        if file_size == 0:
            logger.error(f"–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –ø—É—Å—Ç: {template_path}")
            raise ValueError(f"–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –∏–º–µ–µ—Ç –Ω—É–ª–µ–≤–æ–π —Ä–∞–∑–º–µ—Ä: {template_path}")
        
        logger.info(f"–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –Ω–∞–π–¥–µ–Ω: {template_path}, —Ä–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç")

        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
        context = prepare_employee_context(employee)
        logger.info(f"–ë–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω: {list(context.keys())}")

        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏
        context = prepare_internship_context(employee, context)
        logger.info(f"–ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–æ–ø–æ–ª–Ω–µ–Ω –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏")

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä–∞ —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–π –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã –≤ custom_context
        now = datetime.datetime.now()
        if not custom_context or 'order_number' not in custom_context:
            context.update({
                'order_number': f"–û–¢-{now.strftime('%Y%m%d')}-{employee.id}",
                'order_date': now.strftime("%d.%m.%Y"),
            })
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
        if custom_context:
            context.update(custom_context)
            logger.info(f"–ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–æ–ø–æ–ª–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏: {list(custom_context.keys())}")
        
        logger.info(f"–ò—Ç–æ–≥–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —à–∞–±–ª–æ–Ω–∞: {list(context.keys())}")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
        result = generate_docx_from_template(template.id, context, employee, user)
        if result:
            logger.info(f"–î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: {result.id}")
            return result
        else:
            logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: —Ñ—É–Ω–∫—Ü–∏—è generate_docx_from_template –≤–µ—Ä–Ω—É–ª–∞ None")
            return None

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è: {str(e)}")
        logger.error(traceback.format_exc())
        return None


def generate_knowledge_protocol(employee, user=None, custom_context=None):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ—Ç–æ–∫–æ–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.
    Args:
        employee: –û–±—ä–µ–∫—Ç –º–æ–¥–µ–ª–∏ Employee
        user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å–æ–∑–¥–∞—é—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        custom_context: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    Returns:
        Optional[GeneratedDocument]: –û–±—ä–µ–∫—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
    """
    # –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –∑–Ω–∞–Ω–∏–π
    try:
        template = DocumentTemplate.objects.get(document_type='knowledge_protocol', is_active=True)
    except DocumentTemplate.DoesNotExist:
        logger.error("–ê–∫—Ç–∏–≤–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω")
        raise ValueError("–ê–∫—Ç–∏–≤–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω")

    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    context = prepare_employee_context(employee)

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä –ø—Ä–æ—Ç–æ–∫–æ–ª–∞
    now = datetime.datetime.now()
    context.update({
        'protocol_number': f"–ü–ó-{now.strftime('%Y%m%d')}-{employee.id}",
        'protocol_date': now.strftime("%d.%m.%Y"),
    })

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∏—Å—Å–∏–∏
    from directory.views.documents.utils import get_commission_members

    commission_members, commission_success = get_commission_members(employee)
    if commission_success:
        context['commission_members'] = commission_members
    else:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∏—Å—Å–∏–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ {employee.full_name_nominative}")

    # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    if custom_context:
        context.update(custom_context)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
    return generate_docx_from_template(template.id, context, employee, user)


def generate_familiarization_document(employee, document_list=None, user=None, custom_context=None):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ª–∏—Å—Ç –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.
    Args:
        employee: –û–±—ä–µ–∫—Ç –º–æ–¥–µ–ª–∏ Employee
        document_list: –°–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å–æ–∑–¥–∞—é—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        custom_context: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    Returns:
        Optional[GeneratedDocument]: –û–±—ä–µ–∫—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
    """
    # –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω –¥–ª—è –ª–∏—Å—Ç–∞ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è
    try:
        template = DocumentTemplate.objects.get(document_type='doc_familiarization', is_active=True)
    except DocumentTemplate.DoesNotExist:
        logger.error("–ê–∫—Ç–∏–≤–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –ª–∏—Å—Ç–∞ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω")
        raise ValueError("–ê–∫—Ç–∏–≤–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –ª–∏—Å—Ç–∞ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω")

    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    context = prepare_employee_context(employee)

    # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–µ —É–∫–∞–∑–∞–Ω, –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    if not document_list:
        from directory.views.documents.utils import get_employee_documents
        document_list, success = get_employee_documents(employee)

    # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    context.update({
        'documents_list': document_list,
        'familiarization_date': context['current_date'],
    })

    # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    if custom_context:
        context.update(custom_context)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
    return generate_docx_from_template(template.id, context, employee, user)


def generate_siz_card(employee, user=None, custom_context=None):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É —É—á–µ—Ç–∞ –°–ò–ó –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.
    Args:
        employee: –û–±—ä–µ–∫—Ç –º–æ–¥–µ–ª–∏ Employee
        user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å–æ–∑–¥–∞—é—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        custom_context: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    Returns:
        Optional[GeneratedDocument]: –û–±—ä–µ–∫—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
    """
    # –ü–µ—Ä–µ–∞–¥—Ä–µ—Å—É–µ–º –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–µ—Ö–∞–Ω–∏–∑–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –°–ò–ó
    try:
        from directory.views.documents.siz_integration import generate_siz_card_excel
        from django.http import HttpRequest
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π –æ–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞
        request = HttpRequest()
        request.user = user
        
        # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –°–ò–ó
        return generate_siz_card_excel(request, employee.id)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –°–ò–ó: {str(e)}")
        logger.error(traceback.format_exc())
        return None