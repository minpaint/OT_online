from django.contrib import admin
from mptt.admin import MPTTModelAdmin
from directory.models import StructuralSubdivision
from directory.forms.subdivision import StructuralSubdivisionForm

@admin.register(StructuralSubdivision)
class StructuralSubdivisionAdmin(MPTTModelAdmin):
    """
    üè≠ –ê–¥–º–∏–Ω-–∫–ª–∞—Å—Å –¥–ª—è –º–æ–¥–µ–ª–∏ StructuralSubdivision.
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–π —Å–ø–∏—Å–æ–∫ (–≤ change‚Äëlist) —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è MPTTModelAdmin.
    """
    form = StructuralSubdivisionForm
    mptt_indent_field = "name"
    list_display = ('indented_title_display', 'organization',)
    list_filter = ['organization']
    search_fields = ['name', 'short_name']

    def indented_title_display(self, obj):
        # –°–æ–∑–¥–∞–µ–º –æ—Ç—Å—Ç—É–ø—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è —É–∑–ª–∞
        indent = "&nbsp;" * (obj.level * 4)
        return admin.utils.format_html("{}{}", indent, obj.name)
    indented_title_display.short_description = "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"

    def get_form(self, request, obj=None, **kwargs):
        """
        –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º get_form –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ request.user –≤ —Ñ–æ—Ä–º—É.
        –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–∏–º–µ–Ω—è—Ç—å –ª–æ–≥–∏–∫—É –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º.
        """
        Form = super().get_form(request, obj, **kwargs)
        class FormWithUser(Form):
            def __init__(self2, *args, **inner_kwargs):
                inner_kwargs['user'] = request.user
                super().__init__(*args, **inner_kwargs)
        return FormWithUser

    def get_queryset(self, request):
        """
        üîí –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º, –¥–æ—Å—Ç—É–ø–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
        """
        qs = super().get_queryset(request)
        if not request.user.is_superuser and hasattr(request.user, 'profile'):
            allowed_orgs = request.user.profile.organizations.all()
            qs = qs.filter(organization__in=allowed_orgs)
        return qs
