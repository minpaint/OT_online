# D:\YandexDisk\OT_online\directory\admin\medical_examination.py

from django.contrib import admin
from django.db.models import Exists, OuterRef
from django.utils.html import format_html

from directory.models.medical_examination import (
    MedicalExaminationType,
    HarmfulFactor,
    MedicalSettings,
)
from directory.models.medical_norm import (
    MedicalExaminationNorm,
    PositionMedicalFactor,
    EmployeeMedicalExamination,
)
from directory.forms.medical_examination import UniquePositionMedicalNormForm


# ------------------------------------------------------------------
# üîß –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏
# ------------------------------------------------------------------

@admin.register(MedicalExaminationType)
class MedicalExaminationTypeAdmin(admin.ModelAdmin):
    list_display = ("name",)
    search_fields = ("name",)


@admin.register(HarmfulFactor)
class HarmfulFactorAdmin(admin.ModelAdmin):
    list_display = ("short_name", "full_name", "examination_type", "periodicity")
    list_filter = ("examination_type",)
    search_fields = ("short_name", "full_name",)


@admin.register(MedicalSettings)
class MedicalSettingsAdmin(admin.ModelAdmin):
    list_display = ("days_before_issue", "days_before_email")
    list_editable = ("days_before_issue", "days_before_email")
    list_display_links = None


# ------------------------------------------------------------------
# üìë –≠—Ç–∞–ª–æ–Ω–Ω—ã–µ –Ω–æ—Ä–º—ã ‚Äî –¥—Ä–µ–≤–æ–≤–∏–¥–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
# ------------------------------------------------------------------

@admin.register(MedicalExaminationNorm)
class MedicalExaminationNormAdmin(admin.ModelAdmin):
    form = UniquePositionMedicalNormForm
    change_form_template = "admin/directory/medicalnorm/change_form.html"
    change_list_template = "admin/directory/medicalnorm/change_list_tree.html"

    list_display = ("position_name", "harmful_factor", "periodicity")
    list_filter = ("harmful_factor__examination_type",)
    search_fields = ("position_name",)

    def get_form(self, request, obj=None, **kwargs):
        """
        –ï—Å–ª–∏ –≤ URL –µ—Å—Ç—å ?position=<id>, –ø–µ—Ä–µ–¥–∞—ë–º –µ–≥–æ –≤ —Ñ–æ—Ä–º—É,
        —á—Ç–æ–±—ã –ø—Ä–∏ –∫–ª–∏–∫–µ ¬´+¬ª –≤ –¥–µ—Ä–µ–≤–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å —É–∂–µ –±—ã–ª–∞ –≤—ã–±—Ä–∞–Ω–∞.
        """
        base_form = super().get_form(request, obj, **kwargs)
        position_id = request.GET.get("position")
        if position_id:
            class _Wrapper(base_form):
                def __new__(cls, *args, **kw):
                    kw["position_id"] = position_id
                    return base_form(*args, **kw)

            return _Wrapper
        return base_form

    def changelist_view(self, request, extra_context=None):
        """
        –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç professions = [{ name, norms, has_overrides }, ...],
        —á—Ç–æ–±—ã —à–∞–±–ª–æ–Ω –ø–æ–∫–∞–∑—ã–≤–∞–ª –¥–µ—Ä–µ–≤–æ —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π.
        """
        extra_context = extra_context or {}

        # –í—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π –∏–∑ –Ω–æ—Ä–º
        names = MedicalExaminationNorm.objects.values_list(
            "position_name", flat=True
        ).distinct().order_by("position_name")

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è—Ö —Å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è–º–∏
        overridden_professions = set(
            PositionMedicalFactor.objects.values_list(
                "position__position_name", flat=True
            ).distinct()
        )

        professions = []
        for name in names:
            # –ù–æ—Ä–º—ã –¥–ª—è —ç—Ç–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
            norms = MedicalExaminationNorm.objects.filter(
                position_name=name
            ).select_related("harmful_factor__examination_type")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
            has_overrides = name in overridden_professions

            professions.append({
                "name": name,
                "norms": norms,
                "has_overrides": has_overrides
            })

        extra_context["professions"] = professions
        return super().changelist_view(request, extra_context)


# ------------------------------------------------------------------
# üë®‚Äç‚öïÔ∏è –ñ—É—Ä–Ω–∞–ª –º–µ–¥–æ—Å–º–æ—Ç—Ä–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
# ------------------------------------------------------------------

@admin.register(EmployeeMedicalExamination)
class EmployeeMedicalExaminationAdmin(admin.ModelAdmin):
    list_display = (
        "employee", "examination_type", "harmful_factor",
        "date_completed", "next_date", "status"
    )
    list_filter = ("status", "examination_type")
    search_fields = ("employee__full_name_nominative",)
    date_hierarchy = "date_completed"