# üìÅ directory/admin/employee.py
from django.contrib import admin  # üõ†Ô∏è –ò–º–ø–æ—Ä—Ç –∞–¥–º–∏–Ω–∫–∏ Django
from directory.models.employee import Employee  # üë§ –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–∏ Employee

@admin.register(Employee)
class EmployeeAdmin(admin.ModelAdmin):
    """
    üë§ –ê–¥–º–∏–Ω-–∫–ª–∞—Å—Å –¥–ª—è –º–æ–¥–µ–ª–∏ Employee (–°–æ—Ç—Ä—É–¥–Ω–∏–∫).

    –ò–µ—Ä–∞—Ä—Ö–∏—è –∑–∞–≤–∏—Å–∏–º—ã—Ö –ø–æ–ª–µ–π:
      1Ô∏è‚É£ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è ‚Äì –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ.
      2Ô∏è‚É£ –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ ‚Äì –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ, –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏.
      3Ô∏è‚É£ –û—Ç–¥–µ–ª ‚Äì –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ, –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é.
    """
    list_display = [
        'full_name_nominative',
        'organization',
        'subdivision',
        'department',
        'position',
        'is_contractor',
    ]
    list_filter = [
        'organization',
        'subdivision',
        'department',
        'position',
        'is_contractor',
        'clothing_size',
        'shoe_size',
    ]
    search_fields = [
        'full_name_nominative',
        'full_name_dative',
        'position__position_name'
    ]

    fieldsets = (
        ('üë§ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ', {
            'fields': (
                'full_name_nominative',
                'full_name_dative',
                'date_of_birth',
                'place_of_residence'
            )
        }),
        ('üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞', {
            'fields': (
                'organization',
                'subdivision',
                'department',
                'position',
                'is_contractor'
            )
        }),
        ('üëï –°–ø–µ—Ü–æ–¥–µ–∂–¥–∞', {
            'fields': (
                'height',
                'clothing_size',
                'shoe_size'
            ),
            'classes': ('collapse',),
        }),
    )

    def get_queryset(self, request):
        """
        ‚ö°Ô∏è –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –ø–æ–º–æ—â—å—é select_related.
        """
        qs = super().get_queryset(request)
        return qs.select_related('organization', 'subdivision', 'department', 'position')
