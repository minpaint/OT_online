from directory.admin.mixins.tree_view import TreeViewMixin


class CommissionTreeViewMixin(TreeViewMixin):
    """
    –ú–∏–∫—Å–∏–Ω –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–º–∏—Å—Å–∏–π –≤ –≤–∏–¥–µ –¥–µ—Ä–µ–≤–∞ —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏.
    """
    change_list_template = "admin/directory/commission/change_list_tree.html"

    # –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ—Ä–µ–≤–∞ –¥–ª—è –∫–æ–º–∏—Å—Å–∏–π
    tree_settings = {
        'icons': {
            'organization': 'üè¢',
            'subdivision': 'üè≠',
            'department': 'üìÇ',
            'item': 'üõ°Ô∏è',  # –ò–∫–æ–Ω–∫–∞ –¥–ª—è –∫–æ–º–∏—Å—Å–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            'ot': 'üõ°Ô∏è',  # –ò–∫–æ–Ω–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–æ–º–∏—Å—Å–∏–π
            'eb': '‚ö°',
            'pb': 'üî•',
            'other': 'üìã'
        },
        'fields': {
            'name_field': 'name',
            'organization_field': 'organization',
            'subdivision_field': 'subdivision',
            'department_field': 'department',
        },
        'display_rules': {
            'hide_empty_branches': False,
            'hide_no_subdivision_no_department': False
        }
    }

    def get_tree_data(self, request):
        """
        –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ—Ä–µ–≤–∞, —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö –∫–æ–º–∏—Å—Å–∏–∏.
        """
        # –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤–æ–µ –¥–µ—Ä–µ–≤–æ –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –º–µ—Ç–æ–¥–∞
        tree = super().get_tree_data(request)

        # –û–±–æ–≥–∞—â–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–µ—Ä–µ–≤–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö –∫–æ–º–∏—Å—Å–∏–π
        self._enrich_tree_with_members(tree)

        return tree

    def _enrich_tree_with_members(self, tree):
        """
        –î–æ–ø–æ–ª–Ω—è–µ—Ç –¥–µ—Ä–µ–≤–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–æ—Å—Ç–∞–≤–µ –∫–æ–º–∏—Å—Å–∏–π.
        """
        # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º –≤ –¥–µ—Ä–µ–≤–µ
        for org_data in tree.values():
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∏—Å—Å–∏–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
            for item in org_data['items']:
                self._add_members_to_item(item)

            # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è–º
            for sub_data in org_data['subdivisions'].values():
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∏—Å—Å–∏–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
                for item in sub_data['items']:
                    self._add_members_to_item(item)

                # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –æ—Ç–¥–µ–ª–∞–º
                for dept_data in sub_data['departments'].values():
                    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∏—Å—Å–∏–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ –æ—Ç–¥–µ–ª–∞
                    for item in dept_data['items']:
                        self._add_members_to_item(item)

    def _add_members_to_item(self, item):
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö –∫ –∫–æ–º–∏—Å—Å–∏–∏.
        """
        obj = item['object']
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±—ä–µ–∫—Ç —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–∏—Å—Å–∏–µ–π
        if hasattr(obj, 'members'):
            # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–º–∏—Å—Å–∏–∏ —Å prefetch_related
            members = obj.members.filter(is_active=True).select_related('employee')

            # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ —Ä–æ–ª—è–º
            roles = {
                'chairman': [],
                'secretary': [],
                'member': []
            }

            for member in members:
                elif hasattr(member.employee, 'position_name'):
                    position = member.employee.position_name
                elif hasattr(member.employee, 'job_title'):
                    position = member.employee.job_title

                roles[member.role].append({
                    'name': getattr(member.employee, 'full_name_nominative', str(member.employee)),
                    'role': member.get_role_display(),
                    'role_code': member.role
                })

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö –≤ —ç–ª–µ–º–µ–Ω—Ç –¥–µ—Ä–µ–≤–∞
            item['members'] = {
                'chairman': roles['chairman'],
                'secretary': roles['secretary'],
                'members': roles['member'],
                'total': len(members)
            }

            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø –∫–æ–º–∏—Å—Å–∏–∏ –∏ —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            item['commission_type'] = obj.commission_type
            item['is_active'] = obj.is_active

    def _optimize_queryset(self, queryset):
        """
        –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã, –¥–æ–±–∞–≤–ª—è—è prefetch_related –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.
        """
        qs = super()._optimize_queryset(queryset)