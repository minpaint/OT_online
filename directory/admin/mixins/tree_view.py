"""
üå≥ –ï–¥–∏–Ω—ã–π –º–∏–∫—Å–∏–Ω –¥–ª—è –¥—Ä–µ–≤–æ–≤–∏–¥–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω–∫–µ.

–õ–æ–≥–∏–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ—Ä–µ–≤–∞: –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è ‚Üí –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ ‚Üí –û—Ç–¥–µ–ª ‚Üí –û–±—ä–µ–∫—Ç.

–ï—Å–ª–∏ –∫–∞–∫–æ–µ-–ª–∏–±–æ –ø–æ–ª–µ –Ω–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, —É Department –Ω–µ—Ç department),
–µ–≥–æ –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å –∫–∞–∫ None. –ú–∏–∫—Å–∏–Ω –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º getattr.
"""

class TreeViewMixin:
    # üö© –ë–∞–∑–æ–≤—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–µ—Ä–µ–≤–∞ (–º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –≤ –∫–∞–∂–¥–æ–º Admin-–∫–ª–∞—Å—Å–µ)
    change_list_template = "admin/directory/position/change_list_tree.html"

    # ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–≤ Admin-–∫–ª–∞—Å—Å–∞—Ö –∏—Ö –º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å)
    tree_settings = {
        'icons': {
            'organization': 'üè¢',
            'subdivision': 'üè≠',
            'department': 'üìÇ',
            'item': 'üíº',
            'no_subdivision': 'üèóÔ∏è',
            'no_department': 'üìÅ'
        },
        'fields': {
            # –ò–º—è –ø–æ–ª—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∫–∞–∫ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'position_name' –∏–ª–∏ 'name')
            'name_field': 'name',
            'organization_field': 'organization',
            'subdivision_field': 'subdivision',
            'department_field': 'department',  # –ï—Å–ª–∏ –ø–æ–ª–µ –Ω–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è, –∑–∞–¥–∞–π—Ç–µ None
        },
        'display_rules': {
            'hide_empty_branches': False,
            'hide_no_subdivision_no_department': False
        }
    }

    def changelist_view(self, request, extra_context=None):
        """
        üëÅÔ∏è –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π changelist_view,
        —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –≥–æ—Ç–æ–≤–æ–µ –¥–µ—Ä–µ–≤–æ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.
        """
        extra_context = extra_context or {}
        tree = self.get_tree_data(request)
        extra_context.update({
            'tree': tree,
            'tree_settings': self.tree_settings,
        })
        return super().changelist_view(request, extra_context)

    def get_tree_data(self, request):
        """
        üìä –§–æ—Ä–º–∏—Ä—É–µ—Ç –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É (—Å–ª–æ–≤–∞—Ä—å) –¥–µ—Ä–µ–≤–∞.
        –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:
        {
            org_obj: {
                'name': ...,
                'items': [ ... ],  # –û–±—ä–µ–∫—Ç—ã –±–µ–∑ subdivision
                'subdivisions': {
                    sub_obj: {
                        'name': ...,
                        'items': [ ... ],  # –û–±—ä–µ–∫—Ç—ã –±–µ–∑ department
                        'departments': {
                            dept_obj: {
                                'name': ...,
                                'items': [ ... ]
                            },
                            ...
                        }
                    },
                    ...
                }
            },
            ...
        }
        """
        # –ü–æ–ª—É—á–∞–µ–º QuerySet –∏–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ get_queryset
        qs = self.get_queryset(request)
        # –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å, –∏—Å–ø–æ–ª—å–∑—É—è select_related –¥–ª—è –∑–∞–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª–µ–π
        qs = self._optimize_queryset(qs)

        tree = {}
        fields = self.tree_settings['fields']
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ–ª–µ–π –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫; –µ—Å–ª–∏ –ø–æ–ª–µ –Ω–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è, —Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç None
        org_field = fields.get('organization_field')
        sub_field = fields.get('subdivision_field')
        dept_field = fields.get('department_field')
        name_field = fields.get('name_field')

        # –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –æ–±—ä–µ–∫—Ç–∞–º QuerySet
        for obj in qs:
            # –ü–æ–ª—É—á–∞–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é, –µ—Å–ª–∏ –ø–æ–ª–µ –∑–∞–¥–∞–Ω–æ
            org = getattr(obj, org_field) if org_field else None
            if not org:
                continue  # –ï—Å–ª–∏ —É –æ–±—ä–µ–∫—Ç–∞ –Ω–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –µ–≥–æ

            # –ü–æ–ª—É—á–∞–µ–º subdivision, –µ—Å–ª–∏ –∑–∞–¥–∞–Ω–æ
            sub = getattr(obj, sub_field) if sub_field else None
            # –ü–æ–ª—É—á–∞–µ–º department, –µ—Å–ª–∏ –∑–∞–¥–∞–Ω–æ
            dept = getattr(obj, dept_field) if dept_field else None

            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ tree_display_name, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if hasattr(obj, 'tree_display_name'):
                item_name = obj.tree_display_name()
            else:
                # –ò–Ω–∞—á–µ –ø–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º str(obj)
                item_name = getattr(obj, name_field, str(obj)) if name_field else str(obj)

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ (–ª–∏—Å—Ç –¥–µ—Ä–µ–≤–∞)
            item_data = {
                'name': item_name,
                'object': obj,
                'pk': obj.pk
            }

            # 1Ô∏è‚É£ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è
            if org not in tree:
                tree[org] = {
                    # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –µ—Å—Ç—å –∞—Ç—Ä–∏–±—É—Ç short_name_ru; –∏–Ω–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º str(org)
                    'name': getattr(org, 'short_name_ru', str(org)),
                    'items': [],
                    'subdivisions': {}
                }

            # 2Ô∏è‚É£ –ï—Å–ª–∏ subdivision –Ω–µ –∑–∞–¥–∞–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç —Å—Ä–∞–∑—É –∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
            if not sub:
                tree[org]['items'].append(item_data)
                continue

            # 3Ô∏è‚É£ –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ
            if sub not in tree[org]['subdivisions']:
                tree[org]['subdivisions'][sub] = {
                    'name': getattr(sub, 'name', str(sub)),
                    'items': [],
                    'departments': {}
                }

            # 4Ô∏è‚É£ –ï—Å–ª–∏ department –Ω–µ –∑–∞–¥–∞–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –∫ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é
            if not dept:
                tree[org]['subdivisions'][sub]['items'].append(item_data)
                continue

            # 5Ô∏è‚É£ –û—Ç–¥–µ–ª
            if dept not in tree[org]['subdivisions'][sub]['departments']:
                tree[org]['subdivisions'][sub]['departments'][dept] = {
                    'name': getattr(dept, 'name', str(dept)),
                    'items': []
                }

            tree[org]['subdivisions'][sub]['departments'][dept]['items'].append(item_data)

        return tree

    def _optimize_queryset(self, queryset):
        """
        üöÄ –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å, –∏—Å–ø–æ–ª—å–∑—É—è select_related –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª–µ–π.
        –§–∏–ª—å—Ç—Ä—É–µ—Ç –ø–æ–ª—è, —Ä–∞–≤–Ω—ã–µ None, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫.
        """
        fields = self.tree_settings['fields']
        related_fields = [
            fields.get('organization_field'),
            fields.get('subdivision_field'),
            fields.get('department_field')
        ]
        # –£–±–∏—Ä–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è None
        related_fields = [field for field in related_fields if field is not None]

        return queryset.select_related(*related_fields)