"""
üëî –ê–¥–º–∏–Ω-–∫–ª–∞—Å—Å –¥–ª—è –º–æ–¥–µ–ª–∏ Position —Å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º.
–ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –≤—ã–≤–æ–¥–∞ change list –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã.
–õ–æ–≥–∏–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º (–µ—Å–ª–∏ –Ω–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è.
"""

from django.contrib import admin
from directory.models import Position
from directory.forms.position import PositionForm
from directory.admin.mixins.tree_view import TreeViewMixin


@admin.register(Position)
class PositionAdmin(TreeViewMixin, admin.ModelAdmin):  # –ò–∑–º–µ–Ω–µ–Ω –ø–æ—Ä—è–¥–æ–∫ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
    form = PositionForm

    # –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ —à–∞–±–ª–æ–Ω—É –¥–ª—è –¥—Ä–µ–≤–æ–≤–∏–¥–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    change_list_template = "admin/directory/position/change_list_tree.html"  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –ø—É—Ç—å –∫ —à–∞–±–ª–æ–Ω—É

    # –§–∏–ª—å—Ç—Ä—ã –¥–ª—è –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    list_filter = ['organization', 'subdivision', 'department']

    # –û—á–∏—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–æ–≤
    list_display = []

    search_fields = [
        'position_name',
        'safety_instructions_numbers'
    ]

    # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ many-to-many
    filter_horizontal = ['documents', 'equipment']

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ—Ä–µ–≤–∞
    tree_settings = {
        'icons': {
            'organization': 'üè¢',
            'subdivision': 'üè≠',
            'department': 'üìÇ',
            'position': 'üëî',
            'employee': 'üë§',
            'no_subdivision': 'üèóÔ∏è',
            'no_department': 'üìÅ'
        },
        'fields': {
            'name_field': 'position_name',
            'organization_field': 'organization',
            'subdivision_field': 'subdivision',
            'department_field': 'department'
        },
        'display_rules': {
            'hide_empty_branches': False,
            'hide_no_subdivision_no_department': False
        }
    }

    def get_queryset(self, request):
        """
        üîí –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º, –¥–æ—Å—Ç—É–ø–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
        """
        qs = super().get_queryset(request).select_related(
            'organization',
            'subdivision',
            'department'
        )
        if not request.user.is_superuser and hasattr(request.user, 'profile'):
            allowed_orgs = request.user.profile.organizations.all()
            qs = qs.filter(organization__in=allowed_orgs)
        return qs

    def get_additional_node_data(self, obj):
        """
        ‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É–∑–ª–∞: —Ä–æ–ª–∏ –∏ –∞—Ç—Ä–∏–±—É—Ç—ã –¥–æ–ª–∂–Ω–æ—Å—Ç–∏.
        """
        return {
            'is_responsible_for_safety': obj.is_responsible_for_safety,
            'can_be_internship_leader': obj.can_be_internship_leader,
            'commission_role': obj.commission_role,
            'is_electrical_personnel': obj.is_electrical_personnel,
        }

    def has_module_permission(self, request):
        """
        üëÆ‚Äç‚ôÇÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ –º–æ–¥—É–ª—é
        """
        if request.user.is_superuser:
            return True
        if hasattr(request.user, 'profile'):
            return request.user.profile.organizations.exists()
        return False

    def has_view_permission(self, request, obj=None):
        """
        üëÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä
        """
        if request.user.is_superuser:
            return True
        if not obj:
            return True
        if hasattr(request.user, 'profile'):
            return obj.organization in request.user.profile.organizations.all()
        return False

    def has_change_permission(self, request, obj=None):
        """
        ‚úèÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        """
        return self.has_view_permission(request, obj)

    def has_delete_permission(self, request, obj=None):
        """
        üóëÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ
        """
        return self.has_view_permission(request, obj)

    def has_add_permission(self, request):
        """
        ‚ûï –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
        """
        if request.user.is_superuser:
            return True
        if hasattr(request.user, 'profile'):
            return request.user.profile.organizations.exists()
        return False