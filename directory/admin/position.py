"""
üëî –ê–¥–º–∏–Ω-–∫–ª–∞—Å—Å –¥–ª—è –º–æ–¥–µ–ª–∏ Position —Å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º.
–ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –≤—ã–≤–æ–¥–∞ change list –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã.
–õ–æ–≥–∏–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º (–µ—Å–ª–∏ –Ω–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è.
"""

from django.contrib import admin
from django.contrib.admin.widgets import FilteredSelectMultiple
from directory.models import Position
from directory.forms.position import PositionForm
from directory.admin.mixins.tree_view import TreeViewMixin


@admin.register(Position)
class PositionAdmin(TreeViewMixin, admin.ModelAdmin):
    form = PositionForm

    # –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ —à–∞–±–ª–æ–Ω—É –¥–ª—è –¥—Ä–µ–≤–æ–≤–∏–¥–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    change_list_template = "admin/directory/position/change_list_tree.html"

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Ä—è–¥–æ–∫ –ø–æ–ª–µ–π –≤ —Ñ–æ—Ä–º–µ
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': (
                'position_name',
                'organization',
                'subdivision',
                'department',
                'commission_role',
                'is_responsible_for_safety',
                'can_be_internship_leader',
                'is_electrical_personnel',
            )
        }),
        ('–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è', {
            'fields': (
                'contract_work_name',
                'safety_instructions_numbers',
            )
        }),
        ('–°–≤—è–∑–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', {
            'fields': ('documents', 'equipment'),
            'description': 'üìÑ –í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ, –æ—Ç–Ω–æ—Å—è—â–∏–µ—Å—è –∫ –¥–∞–Ω–Ω–æ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏',
            'classes': ('collapse',)
        }),
    )

    # –§–∏–ª—å—Ç—Ä—ã –¥–ª—è –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    list_filter = ['organization', 'subdivision', 'department']

    # –û—á–∏—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–æ–≤
    list_display = []

    search_fields = [
        'position_name',
        'safety_instructions_numbers'
    ]

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ—Ä–µ–≤–∞
    tree_settings = {
        'icons': {
            'organization': 'üè¢',
            'subdivision': 'üè≠',
            'department': 'üìÇ',
            'position': 'üëî',
            'employee': 'üë§',
            'no_subdivision': 'üèóÔ∏è',
            'no_department': 'üìÅ'
        },
        'fields': {
            'name_field': 'position_name',
            'organization_field': 'organization',
            'subdivision_field': 'subdivision',
            'department_field': 'department'
        },
        'display_rules': {
            'hide_empty_branches': False,
            'hide_no_subdivision_no_department': False
        }
    }

    class Media:
        css = {
            'all': ('admin/css/widgets.css',)
        }
        js = [
            'admin/js/jquery.init.js',
            'admin/js/core.js',
            'admin/js/SelectBox.js',
            'admin/js/SelectFilter2.js',
        ]

    def formfield_for_manytomany(self, db_field, request, **kwargs):
        """
        –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏–¥–∂–µ—Ç–æ–≤ –¥–ª—è –ø–æ–ª–µ–π many-to-many —Å FilteredSelectMultiple
        """
        if db_field.name == "documents":
            kwargs["widget"] = FilteredSelectMultiple(
                verbose_name="–î–û–°–¢–£–ü–ù–´–ï –î–û–ö–£–ú–ï–ù–¢–´",
                is_stacked=False
            )
        if db_field.name == "equipment":
            kwargs["widget"] = FilteredSelectMultiple(
                verbose_name="–î–û–°–¢–£–ü–ù–û–ï –û–ë–û–†–£–î–û–í–ê–ù–ò–ï",
                is_stacked=False
            )
        return super().formfield_for_manytomany(db_field, request, **kwargs)

    def get_queryset(self, request):
        """
        üîí –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º, –¥–æ—Å—Ç—É–ø–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
        """
        qs = super().get_queryset(request).select_related(
            'organization',
            'subdivision',
            'department'
        ).prefetch_related(
            'documents',
            'equipment'
        )
        if not request.user.is_superuser and hasattr(request.user, 'profile'):
            allowed_orgs = request.user.profile.organizations.all()
            qs = qs.filter(organization__in=allowed_orgs)
        return qs

    def get_form(self, request, obj=None, **kwargs):
        """
        üîë –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º get_form –¥–ª—è:
        1) –ü–µ—Ä–µ–¥–∞—á–∏ request.user –≤ —Ñ–æ—Ä–º—É
        2) –§–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ M2M-–ø–æ–ª–µ–π –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º
        """
        Form = super().get_form(request, obj, **kwargs)

        class PositionFormWithUser(Form):
            def __init__(self, *args, **kwargs):
                self.user = request.user
                super().__init__(*args, **kwargs)

                # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º labels –∏ help_text –¥–ª—è –ø–æ–ª–µ–π
                self.fields['documents'].label = "–î–û–°–¢–£–ü–ù–´–ï –î–û–ö–£–ú–ï–ù–¢–´"
                self.fields['equipment'].label = "–î–û–°–¢–£–ü–ù–û–ï –û–ë–û–†–£–î–û–í–ê–ù–ò–ï"

                self.fields['documents'].help_text = "–£–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ 'Control' (–∏–ª–∏ 'Command' –Ω–∞ Mac), —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π."
                self.fields['equipment'].help_text = "–£–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ 'Control' (–∏–ª–∏ 'Command' –Ω–∞ Mac), —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π."

                # –§–∏–ª—å—Ç—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º
                if hasattr(request.user, 'profile'):
                    allowed_orgs = request.user.profile.organizations.all()

                    # –ë–∞–∑–æ–≤—ã–µ queryset
                    docs_qs = self.fields['documents'].queryset
                    equip_qs = self.fields['equipment'].queryset

                    # –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ–±—ä–µ–∫—Ç
                    if obj:
                        # –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–∞
                        docs_qs = docs_qs.filter(organization=obj.organization)
                        equip_qs = equip_qs.filter(organization=obj.organization)

                    # –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º
                    docs_qs = docs_qs.filter(organization__in=allowed_orgs).distinct().order_by('name')
                    equip_qs = equip_qs.filter(organization__in=allowed_orgs).distinct().order_by('equipment_name')

                    self.fields['documents'].queryset = docs_qs
                    self.fields['equipment'].queryset = equip_qs

        return PositionFormWithUser

    def get_additional_node_data(self, obj):
        """
        ‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É–∑–ª–∞: —Ä–æ–ª–∏ –∏ –∞—Ç—Ä–∏–±—É—Ç—ã –¥–æ–ª–∂–Ω–æ—Å—Ç–∏.
        """
        return {
            'is_responsible_for_safety': obj.is_responsible_for_safety,
            'can_be_internship_leader': obj.can_be_internship_leader,
            'commission_role': obj.commission_role,
            'is_electrical_personnel': obj.is_electrical_personnel,
            'documents_count': obj.documents.count(),
            'equipment_count': obj.equipment.count(),
        }

    def has_module_permission(self, request):
        """
        üëÆ‚Äç‚ôÇÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ –º–æ–¥—É–ª—é
        """
        if request.user.is_superuser:
            return True
        if hasattr(request.user, 'profile'):
            return request.user.profile.organizations.exists()
        return False

    def has_view_permission(self, request, obj=None):
        """
        üëÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä
        """
        if request.user.is_superuser:
            return True
        if not obj:
            return True
        if hasattr(request.user, 'profile'):
            return obj.organization in request.user.profile.organizations.all()
        return False

    def has_change_permission(self, request, obj=None):
        """
        ‚úèÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        """
        return self.has_view_permission(request, obj)

    def has_delete_permission(self, request, obj=None):
        """
        üóëÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ
        """
        return self.has_view_permission(request, obj)

    def has_add_permission(self, request):
        """
        ‚ûï –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
        """
        if request.user.is_superuser:
            return True
        if hasattr(request.user, 'profile'):
            return request.user.profile.organizations.exists()
        return False