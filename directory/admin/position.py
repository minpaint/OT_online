from django.contrib import admin
from django.db.models import Q
from directory.models import Position
from directory.forms import PositionForm

@admin.register(Position)
class PositionAdmin(admin.ModelAdmin):
    """
    üëî –ê–¥–º–∏–Ω-–∫–ª–∞—Å—Å –¥–ª—è –º–æ–¥–µ–ª–∏ Position
    """
    form = PositionForm

    list_display = [
        'position_name',
        'organization',
        'subdivision',
        'department',
        'get_commission_role_display',
        'electrical_safety_group',
        'can_be_internship_leader',
        'get_documents_count'
    ]

    list_filter = [
        'organization',
        'subdivision',
        'department',
        'commission_role',
        'electrical_safety_group',
        'can_be_internship_leader',
        'is_responsible_for_safety',
        'is_electrical_personnel'
    ]

    search_fields = [
        'position_name',
        'safety_instructions_numbers'
    ]

    filter_horizontal = ['documents', 'equipment']

    fieldsets = (
        (None, {
            'fields': ('position_name', 'commission_role')
        }),
        ('–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞', {
            'fields': ('organization', 'subdivision', 'department')
        }),
        ('–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', {
            'fields': (
                'safety_instructions_numbers',
                'electrical_safety_group',
                'internship_period_days',
                'is_responsible_for_safety',
                'is_electrical_personnel',
                'can_be_internship_leader'
            ),
            'description': 'üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –¥–æ–ø—É—Å–∫–æ–≤'
        }),
        ('üìã –î–æ–≥–æ–≤–æ—Ä –ø–æ–¥—Ä—è–¥–∞', {
            'fields': (
                'contract_work_name',
                'contract_safety_instructions'
            ),
            'description': 'üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–±–æ—Ç–∞—Ö –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É –ø–æ–¥—Ä—è–¥–∞',
            'classes': ('collapse',)
        }),
        ('–°–≤—è–∑–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', {
            'fields': ('documents', 'equipment'),
            'description': 'üìÑ –í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ, –æ—Ç–Ω–æ—Å—è—â–∏–µ—Å—è –∫ –¥–∞–Ω–Ω–æ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏',
            'classes': ('collapse',)
        }),
    )

    def get_commission_role_display(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–æ–ª–∏ –≤ –∫–æ–º–∏—Å—Å–∏–∏ —Å –∏–∫–æ–Ω–∫–æ–π"""
        role_icons = {
            'chairman': 'üëë',
            'member': 'üë§',
            'secretary': 'üìù',
            'none': '‚ùå'
        }
        return f"{role_icons.get(obj.commission_role, '')} {obj.get_commission_role_display()}"
    get_commission_role_display.short_description = "–†–æ–ª—å –≤ –∫–æ–º–∏—Å—Å–∏–∏"
    get_commission_role_display.admin_order_field = 'commission_role'

    def get_documents_count(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
        count = obj.documents.count()
        return f"üìÑ {count} –¥–æ–∫." if count > 0 else "–ù–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
    get_documents_count.short_description = "–î–æ–∫—É–º–µ–Ω—Ç—ã"

    def get_form(self, request, obj=None, **kwargs):
        """
        üîë –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º get_form, —á—Ç–æ–±—ã:
        1) –ü–µ—Ä–µ–¥–∞—Ç—å request.user –≤ —Ñ–æ—Ä–º—É (–¥–ª—è OrganizationRestrictionFormMixin).
        2) –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–æ–≥–∏–∫—É —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞.
        """
        original_form = super().get_form(request, obj, **kwargs)

        class PositionFormWithUser(original_form):
            def __init__(self2, *args, **inner_kwargs):
                # –ü–µ—Ä–µ–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º—É (–¥–ª—è –º–∏–∫—Å–∏–Ω–∞)
                inner_kwargs['user'] = request.user
                super().__init__(*args, **inner_kwargs)

                # –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ–±—ä–µ–∫—Ç
                if obj:
                    self2.fields['documents'].queryset = (
                        self2.fields['documents'].queryset.filter(
                            Q(organization=obj.organization) &
                            (
                                Q(subdivision__isnull=True) |
                                Q(subdivision=obj.subdivision) |
                                (
                                    Q(department__isnull=True) |
                                    Q(department=obj.department)
                                )
                            )
                        ).order_by('name')
                    )
                    self2.fields['equipment'].queryset = (
                        self2.fields['equipment'].queryset.filter(
                            Q(organization=obj.organization) &
                            (
                                Q(subdivision__isnull=True) |
                                Q(subdivision=obj.subdivision) |
                                (
                                    Q(department__isnull=True) |
                                    Q(department=obj.department)
                                )
                            )
                        ).order_by('equipment_name')
                    )

        return PositionFormWithUser

    def formfield_for_manytomany(self, db_field, request, **kwargs):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª–µ–π many-to-many —Å FilteredSelectMultiple."""
        if db_field.name == "documents":
            kwargs["widget"] = admin.widgets.FilteredSelectMultiple(
                "–¥–æ–∫—É–º–µ–Ω—Ç—ã",
                is_stacked=False
            )
        if db_field.name == "equipment":
            kwargs["widget"] = admin.widgets.FilteredSelectMultiple(
                "–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ",
                is_stacked=False
            )
        return super().formfield_for_manytomany(db_field, request, **kwargs)

    class Media:
        css = {
            'all': [
                'admin/css/widgets.css',
            ]
        }
        js = [
            'admin/js/jquery.init.js',
            'admin/js/SelectFilter2.js',
        ]
