# D:\YandexDisk\OT_online\directory\forms\document_forms.py
"""
üìù –§–æ—Ä–º—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–æ—Ä–º—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.
"""
from django import forms
from django.utils.translation import gettext_lazy as _
from django.forms import widgets
from crispy_forms.helper import FormHelper
from crispy_forms.layout import Layout, Fieldset, ButtonHolder, Submit, Div, HTML, Button, Field

from directory.models.document_template import DocumentTemplate
from directory.models import Employee


class DocumentSelectionForm(forms.Form):
    """
    –§–æ—Ä–º–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    """
    document_types = forms.MultipleChoiceField(
        label=_("–¢–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"),
        choices=DocumentTemplate.DOCUMENT_TYPES,
        widget=forms.CheckboxSelectMultiple,
        required=True,
        help_text=_("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"),
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Ç–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        initial=[doc_type[0] for doc_type in DocumentTemplate.DOCUMENT_TYPES]
    )

    employee_id = forms.IntegerField(
        widget=forms.HiddenInput(),
        required=True
    )

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_method = 'post'
        self.helper.form_id = 'document-selection-form'
        self.helper.layout = Layout(
            'employee_id',
            Fieldset(
                _('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏'),
                Field('document_types'),
                css_class='mb-3'
            ),
            ButtonHolder(
                Submit('next', _('–î–∞–ª–µ–µ'), css_class='btn-primary'),
                Button('cancel', _('–û—Ç–º–µ–Ω–∞'), css_class='btn-secondary',
                       onclick="window.history.back();")
            )
        )


class DocumentPreviewForm(forms.Form):
    """
    –§–æ—Ä–º–∞ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–µ—Ä–µ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π
    """
    # –°–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
    document_data = forms.CharField(widget=forms.HiddenInput)
    document_type = forms.CharField(widget=forms.HiddenInput)
    employee_id = forms.IntegerField(widget=forms.HiddenInput)

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        self.helper = FormHelper()
        self.helper.form_method = 'post'
        self.helper.form_id = 'document-preview-form'

        self.helper.layout = Layout(
            'document_data',
            'document_type',
            'employee_id',
            HTML('<div id="document-preview-container" class="mb-4"></div>'),
            ButtonHolder(
                Submit('generate', _('–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç'), css_class='btn-success'),
                Button('edit', _('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'), css_class='btn-primary',
                       onclick="enableEditing();"),
                Button('cancel', _('–û—Ç–º–µ–Ω–∞'), css_class='btn-secondary',
                       onclick="window.history.back();")
            )
        )