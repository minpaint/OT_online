# directory/forms/hiring_wizard.py
from django import forms
from dal import autocomplete
from directory.models import Employee, EmployeeHiring
from directory.models.medical_examination import HarmfulFactor
from directory.models.medical_norm import MedicalExaminationNorm


class Step1BasicInfoForm(forms.Form):
    """–ë–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–µ –∏ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏"""
    organization = forms.ModelChoiceField(
        queryset=None,  # –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –≤ __init__
        label="–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è",
        required=True,
        widget=autocomplete.ModelSelect2(
            url='directory:organization-autocomplete',
            attrs={
                'data-placeholder': 'üè¢ –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é...',
                'class': 'select2-basic form-control'
            }
        )
    )

    subdivision = forms.ModelChoiceField(
        queryset=None,
        label="–°—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ",
        required=False,
        widget=autocomplete.ModelSelect2(
            url='directory:subdivision-autocomplete',
            forward=['organization'],
            attrs={
                'data-placeholder': 'üè≠ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ...',
                'class': 'select2-basic form-control'
            }
        )
    )

    department = forms.ModelChoiceField(
        queryset=None,
        label="–û—Ç–¥–µ–ª",
        required=False,
        widget=autocomplete.ModelSelect2(
            url='directory:department-autocomplete',
            forward=['subdivision'],
            attrs={
                'data-placeholder': 'üìÇ –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª...',
                'class': 'select2-basic form-control'
            }
        )
    )

    position = forms.ModelChoiceField(
        queryset=None,
        label="–î–æ–ª–∂–Ω–æ—Å—Ç—å",
        required=True,
        widget=autocomplete.ModelSelect2(
            url='directory:position-autocomplete',
            forward=['organization', 'subdivision', 'department'],
            attrs={
                'data-placeholder': 'üëî –í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å...',
                'class': 'select2-basic form-control'
            }
        )
    )

    full_name_nominative = forms.CharField(
        label="–§–ò–û (–∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂)",
        max_length=255,
        required=True
    )

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: —Ç–∏–ø –ø—Ä–∏–µ–º–∞
    hiring_type = forms.ChoiceField(
        label="–í–∏–¥ –ø—Ä–∏–µ–º–∞",
        choices=EmployeeHiring.HIRING_TYPE_CHOICES,
        initial='new',
        required=True
    )

    def __init__(self, *args, **kwargs):
        self.user = kwargs.pop('user', None)
        super().__init__(*args, **kwargs)

        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ—Ñ–∏–ª—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if self.user and hasattr(self.user, 'profile'):
            user_orgs = self.user.profile.organizations.all()
            self.fields['organization'].queryset = user_orgs

            # –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –µ—Å–ª–∏ –æ–Ω–∞ –æ–¥–Ω–∞
            if user_orgs.count() == 1:
                org = user_orgs.first()
                self.initial['organization'] = org.id


class Step2MedicalInfoForm(forms.Form):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –º–µ–¥–æ—Å–º–æ—Ç—Ä–∞"""
    date_of_birth = forms.DateField(
        label="–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è",
        required=True,
        widget=forms.DateInput(attrs={'type': 'date'}, format='%Y-%m-%d')
    )

    place_of_residence = forms.CharField(
        label="–ú–µ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è",
        required=True,
        widget=forms.Textarea(attrs={'rows': 3})
    )


class Step3SIZInfoForm(forms.Form):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –°–ò–ó"""
    height = forms.ChoiceField(
        label="–†–æ—Å—Ç",
        choices=Employee.HEIGHT_CHOICES,
        required=False
    )

    clothing_size = forms.ChoiceField(
        label="–†–∞–∑–º–µ—Ä –æ–¥–µ–∂–¥—ã",
        choices=Employee.CLOTHING_SIZE_CHOICES,
        required=False
    )

    shoe_size = forms.ChoiceField(
        label="–†–∞–∑–º–µ—Ä –æ–±—É–≤–∏",
        choices=Employee.SHOE_SIZE_CHOICES,
        required=False
    )