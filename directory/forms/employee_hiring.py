# directory/forms/employee_hiring.py
from django import forms
from crispy_forms.helper import FormHelper
from crispy_forms.layout import Submit
from dal import autocomplete

# –ú–∏–∫—Å–∏–Ω, –∫–æ—Ç–æ—Ä—ã–π –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –ø–æ –ø—Ä–æ—Ñ–∏–ª—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
from directory.forms.mixins import OrganizationRestrictionFormMixin

# –ü—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–∏ Employee (–µ—Å–ª–∏ –Ω–µ—Ç –∫—Ä—É–≥–∞).
# –ï—Å–ª–∏ –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞ ImportError –∏–∑-–∑–∞ —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞, —Å–º. –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∏–∂–µ.
from directory.models.employee import Employee

class EmployeeHiringForm(OrganizationRestrictionFormMixin, forms.ModelForm):
    """
    üë• –§–æ—Ä–º–∞ –¥–ª—è –Ω–∞–π–º–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –∏—Å–ø–æ–ª—å–∑—É—é—â–∞—è django-autocomplete-light (DAL).
    –°–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –ø–æ–ª—è –º–æ–¥–µ–ª–∏ Employee, –≤–∫–ª—é—á–∞—è –º–µ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è, —Ä–æ—Å—Ç –∏ —Ç.–¥.
    """

    class Meta:
        model = Employee
        fields = [
            'full_name_nominative',   # –§–ò–û (–∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–π) üìù
            'full_name_dative',       # –§–ò–û (–¥–∞—Ç–µ–ª—å–Ω—ã–π) ‚úçÔ∏è
            'date_of_birth',          # –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è üìÖ
            'place_of_residence',     # –ú–µ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è üè†
            'organization',           # –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è üè¢
            'subdivision',            # –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ üè≠
            'department',             # –û—Ç–¥–µ–ª üìÇ
            'position',               # –î–æ–ª–∂–Ω–æ—Å—Ç—å üëî
            'height',                 # –†–æ—Å—Ç üìè
            'clothing_size',          # –†–∞–∑–º–µ—Ä –æ–¥–µ–∂–¥—ã üëï
            'shoe_size',              # –†–∞–∑–º–µ—Ä –æ–±—É–≤–∏ üëû
            'is_contractor'           # –î–æ–≥–æ–≤–æ—Ä –ø–æ–¥—Ä—è–¥–∞? üìÑ
        ]
        widgets = {
            # –í–∏–¥–∂–µ—Ç –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Å –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º Select2
            'organization': autocomplete.ModelSelect2(
                url='directory:organization-autocomplete',
                attrs={
                    'data-placeholder': 'üè¢ –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é...',
                    'class': 'select2 form-control',
                    'data-theme': 'bootstrap4'
                }
            ),
            # –í–∏–¥–∂–µ—Ç –¥–ª—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏)
            'subdivision': autocomplete.ModelSelect2(
                url='directory:subdivision-autocomplete',
                forward=['organization'],
                attrs={
                    'data-placeholder': 'üè≠ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ...',
                    'class': 'select2 form-control',
                    'data-theme': 'bootstrap4'
                }
            ),
            # –í–∏–¥–∂–µ—Ç –¥–ª—è –æ—Ç–¥–µ–ª–∞ (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è)
            'department': autocomplete.ModelSelect2(
                url='directory:department-autocomplete',
                forward=['subdivision'],
                attrs={
                    'data-placeholder': 'üìÇ –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª...',
                    'class': 'select2 form-control',
                    'data-theme': 'bootstrap4'
                }
            ),
            # –í–∏–¥–∂–µ—Ç –¥–ª—è –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è, –æ—Ç–¥–µ–ª–∞)
            'position': autocomplete.ModelSelect2(
                url='directory:position-autocomplete',
                forward=['organization', 'subdivision', 'department'],
                attrs={
                    'data-placeholder': 'üëî –í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å...',
                    'class': 'select2 form-control',
                    'data-theme': 'bootstrap4'
                }
            ),
            # –í–∏–¥–∂–µ—Ç –¥–ª—è –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
            'date_of_birth': forms.DateInput(
                attrs={'type': 'date', 'class': 'form-control'},
                format='%Y-%m-%d'
            ),
            # –í–∏–¥–∂–µ—Ç –¥–ª—è –º–µ—Å—Ç–∞ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è (–º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–µ –ø–æ–ª–µ)
            'place_of_residence': forms.Textarea(
                attrs={
                    'class': 'form-control',
                    'rows': 3,
                    'placeholder': 'üè† –í–≤–µ–¥–∏—Ç–µ –º–µ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è...'
                }
            ),
            # –†–æ—Å—Ç
            'height': forms.Select(
                attrs={'class': 'form-control'}
            ),
            # –†–∞–∑–º–µ—Ä –æ–¥–µ–∂–¥—ã
            'clothing_size': forms.Select(
                attrs={'class': 'form-control'}
            ),
            # –†–∞–∑–º–µ—Ä –æ–±—É–≤–∏
            'shoe_size': forms.Select(
                attrs={'class': 'form-control'}
            ),
        }

    def __init__(self, *args, **kwargs):
        # üîë –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –ø–µ—Ä–µ–¥–∞–Ω
        self.user = kwargs.pop('user', None)
        super().__init__(*args, **kwargs)

        # üé® –ù–∞—Å—Ç—Ä–æ–π–∫–∞ crispy-forms –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–π –≤–µ—Ä—Å—Ç–∫–∏
        self.helper = FormHelper()
        self.helper.form_method = 'post'
        self.helper.add_input(Submit('submit', 'üíæ –ü—Ä–∏–Ω—è—Ç—å'))

        # üîí –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
        # (–µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è)
        if self.user and hasattr(self.user, 'profile'):
            user_orgs = self.user.profile.organizations.all()
            if user_orgs.count() == 1:
                self.initial['organization'] = user_orgs.first().id