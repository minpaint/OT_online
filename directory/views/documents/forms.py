"""
üìù –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ñ–æ—Ä–º —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤

–°–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ñ–æ—Ä–º —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.
"""
import json
from django.views.generic import FormView
from django.contrib.auth.mixins import LoginRequiredMixin
from django.shortcuts import get_object_or_404, redirect, render
from django.contrib import messages
from django.utils.translation import gettext as _
from django.utils import timezone

from directory.models import Employee
# –£–¥–∞–ª–µ–Ω—ã –∏–º–ø–æ—Ä—Ç—ã –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–æ—Ä–º (AllOrdersForm, SIZCardForm, DocumentPreviewForm)

from directory.utils.docx_generator import (
    prepare_employee_context, generate_all_orders, generate_siz_card
)
from directory.utils.declension import get_initials_from_name


class AllOrdersFormView(LoginRequiredMixin, FormView):
    """
    –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —Ñ–æ—Ä–º—ã —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è –æ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–µ –∏ –¥–æ–ø—É—Å–∫–µ –∫ —Ä–∞–±–æ—Ç–µ
    """
    template_name = 'directory/documents/all_orders_form.html'
    # –ü–æ—Å–∫–æ–ª—å–∫—É AllOrdersForm –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—É—é —Ñ–æ—Ä–º—É –∏–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ —É–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥—É—é
    form_class = None  # –ë—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Ñ–æ—Ä–º—É –∏–ª–∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –≤ get_form_class

    def get_form_class(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞—Å—Å —Ñ–æ—Ä–º—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
        from django import forms

        # –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º—É –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
        class TempAllOrdersForm(forms.Form):
            """–í—Ä–µ–º–µ–Ω–Ω–∞—è –±–∞–∑–æ–≤–∞—è —Ñ–æ—Ä–º–∞ –¥–ª—è —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–π"""
            organization_name = forms.CharField(label=_("–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏"))
            order_date = forms.DateField(label=_("–î–∞—Ç–∞ —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è"))

        return TempAllOrdersForm

    def get_employee(self):
        employee_id = self.kwargs.get('employee_id')
        return get_object_or_404(Employee, id=employee_id)

    def get_order_type(self):
        """–ü–æ–ª—É—á–∞–µ—Ç —Ç–∏–ø —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–ø—Ä–æ—Å–∞"""
        return self.kwargs.get('order_type', 'internship_order')

    def get_initial(self):
        initial = super().get_initial()
        employee = self.get_employee()

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è
        order_type = self.get_order_type()

        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–æ—Ä–º—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        context = prepare_employee_context(employee)

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏
        internship_leader = None
        if employee.department:
            internship_leader = employee.department.employees.filter(
                position__can_be_internship_leader=True
            ).first()

        # –ó–∞–ø–æ–ª–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
        initial.update({
            'organization_name': context['organization_name'],
            'department': context['department'],
            'subdivision': context['subdivision'],
            'order_date': timezone.now().date(),
            'location': context.get('location', '–≥. –ú–∏–Ω—Å–∫'),
            'employee_name_initials': get_initials_from_name(employee.full_name_nominative),
        })

        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–æ–ª—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è
        if order_type == 'internship_order':
            initial.update({
                'fio_dative': context['fio_dative'],
                'position_dative': context['position_dative'],
                'internship_duration': context.get('internship_duration', '2'),
            })
        else:  # admission_order
            initial.update({
                'fio_dative': context['fio_dative'],
                'position_dative': context['position_dative'],
            })

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏, –µ—Å–ª–∏ –æ–Ω –Ω–∞–π–¥–µ–Ω
        if internship_leader:
            initial.update({
                'head_of_internship_position': internship_leader.position.position_name if internship_leader.position else "",
                'head_of_internship_name': internship_leader.full_name_nominative,
                'head_of_internship_name_initials': get_initials_from_name(internship_leader.full_name_nominative),
            })

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –±–µ—Ä–µ–º –∏–∑ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏)
        if employee.organization:
            initial['director_name'] = "–ò.–ò. –ö–æ—Ä–∂–æ–≤"  # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –∏–∑ –¥–∞–Ω–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
            initial['director_position'] = "–î–∏—Ä–µ–∫—Ç–æ—Ä"

        return initial

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        employee = self.get_employee()
        order_type = self.get_order_type()

        context['employee'] = employee

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è
        if order_type == 'internship_order':
            context['title'] = _('–†–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–µ –æ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–µ')
            context['order_type'] = 'internship_order'
        else:  # admission_order
            context['title'] = _('–†–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–µ –æ –¥–æ–ø—É—Å–∫–µ –∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ')
            context['order_type'] = 'admission_order'

        return context

    def get_form_kwargs(self):
        kwargs = super().get_form_kwargs()
        kwargs['employee'] = self.get_employee()
        return kwargs

    def form_valid(self, form):
        employee = self.get_employee()
        order_type = self.get_order_type()

        # –ü—Ä—è–º–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –±–µ–∑ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        custom_context = form.cleaned_data
        custom_context['order_type'] = order_type  # –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç

        generated_doc = generate_all_orders(
            employee,
            self.request.user,
            custom_context
        )

        if generated_doc:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è
            if order_type == 'internship_order':
                success_message = _('–†–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–µ –æ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–µ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ')
            else:  # admission_order
                success_message = _('–†–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–µ –æ –¥–æ–ø—É—Å–∫–µ –∫ —Ä–∞–±–æ—Ç–µ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ')

            messages.success(self.request, success_message)
            return redirect('directory:documents:document_detail', pk=generated_doc.id)
        else:
            messages.error(self.request, _('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞'))
            return self.form_invalid(form)


class SIZCardFormView(LoginRequiredMixin, FormView):
    """
    –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —Ñ–æ—Ä–º—ã –∫–∞—Ä—Ç–æ—á–∫–∏ —É—á–µ—Ç–∞ –°–ò–ó
    """
    template_name = 'directory/documents/siz_card_form.html'
    # –ü–æ—Å–∫–æ–ª—å–∫—É SIZCardForm –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—É—é —Ñ–æ—Ä–º—É –∏–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ —É–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥—É—é
    form_class = None  # –ë—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Ñ–æ—Ä–º—É –∏–ª–∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –≤ get_form_class

    def get_form_class(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞—Å—Å —Ñ–æ—Ä–º—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
        from django import forms

        # –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º—É –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
        class TempSIZCardForm(forms.Form):
            """–í—Ä–µ–º–µ–Ω–Ω–∞—è –±–∞–∑–æ–≤–∞—è —Ñ–æ—Ä–º–∞ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –°–ò–ó"""
            organization_name = forms.CharField(label=_("–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏"))
            employee_name = forms.CharField(label=_("–§–ò–û —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"))

        return TempSIZCardForm

    def get_employee(self):
        employee_id = self.kwargs.get('employee_id')
        return get_object_or_404(Employee, id=employee_id)

    def get_initial(self):
        initial = super().get_initial()
        employee = self.get_employee()

        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–æ—Ä–º—ã
        context = prepare_employee_context(employee)

        # –ó–∞–ø–æ–ª–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
        initial.update({
            'organization_name': context['organization_name'],
            'employee_name': context['fio_nominative'],
            'position_name': context['position_nominative'] if 'position_nominative' in context else "",
        })

        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã –°–ò–ó, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å —É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        if hasattr(employee, 'height'):
            initial['height'] = employee.height
        if hasattr(employee, 'clothing_size'):
            initial['clothing_size'] = employee.clothing_size
        if hasattr(employee, 'shoe_size'):
            initial['shoe_size'] = employee.shoe_size
        if hasattr(employee, 'headgear_size'):
            initial['headgear_size'] = employee.headgear_size
        if hasattr(employee, 'respirator_size'):
            initial['respirator_size'] = employee.respirator_size
        if hasattr(employee, 'gloves_size'):
            initial['gloves_size'] = employee.gloves_size

        return initial

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        employee = self.get_employee()
        context['employee'] = employee
        context['title'] = _('–ö–∞—Ä—Ç–æ—á–∫–∞ —É—á–µ—Ç–∞ –°–ò–ó')
        return context

    def get_form_kwargs(self):
        kwargs = super().get_form_kwargs()
        kwargs['employee'] = self.get_employee()
        return kwargs

    def form_valid(self, form):
        employee = self.get_employee()

        # –ü—Ä—è–º–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –±–µ–∑ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        custom_context = form.cleaned_data
        generated_doc = generate_siz_card(
            employee,
            self.request.user,
            custom_context
        )

        if generated_doc:
            messages.success(
                self.request,
                _('–ö–∞—Ä—Ç–æ—á–∫–∞ —É—á–µ—Ç–∞ –°–ò–ó —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞')
            )
            return redirect('directory:documents:document_detail', pk=generated_doc.id)
        else:
            messages.error(
                self.request,
                _('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞')
            )
            return self.form_invalid(form)