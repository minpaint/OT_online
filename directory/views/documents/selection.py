# D:\YandexDisk\OT_online\directory\views\documents\selection.py
"""
üîç –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤

–°–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å.
"""
import json
from django.views.generic import FormView
from django.contrib.auth.mixins import LoginRequiredMixin
from django.shortcuts import get_object_or_404, redirect
from django.http import HttpResponseRedirect
from django.urls import reverse
from django.contrib import messages
from django.utils.translation import gettext as _

from directory.models import Employee
from directory.forms.document_forms import DocumentSelectionForm
from directory.utils.docx_generator import prepare_employee_context
from .utils import (
    get_internship_leader_position, get_internship_leader_name,
    get_internship_leader_initials, get_director_info,
    get_commission_members, get_safety_instructions,
    get_employee_documents
)


class DocumentSelectionView(LoginRequiredMixin, FormView):
    """
    –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    """
    template_name = 'directory/documents/document_selection.html'
    form_class = DocumentSelectionForm

    def get_initial(self):
        initial = super().get_initial()
        employee_id = self.kwargs.get('employee_id')
        if employee_id:
            initial['employee_id'] = employee_id
        return initial

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        employee_id = self.kwargs.get('employee_id')
        if employee_id:
            context['employee'] = get_object_or_404(Employee, id=employee_id)
        context['title'] = _('–í—ã–±–æ—Ä —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤')
        return context

    def form_valid(self, form):
        try:
            employee_id = form.cleaned_data.get('employee_id')
            if not employee_id and 'employee_id' in self.kwargs:
                employee_id = self.kwargs['employee_id']

            if not employee_id:
                messages.error(self.request, _("–ù–µ —É–∫–∞–∑–∞–Ω —Å–æ—Ç—Ä—É–¥–Ω–∏–∫"))
                return self.form_invalid(form)

            document_types = form.cleaned_data.get('document_types', [])

            if not document_types:
                messages.error(self.request, _("–ù–µ –≤—ã–±—Ä–∞–Ω –Ω–∏ –æ–¥–∏–Ω —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞"))
                return self.form_invalid(form)

            employee = get_object_or_404(Employee, id=employee_id)

            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
            base_context = prepare_employee_context(employee)

            # –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
            preview_data = []

            for doc_type in document_types:
                # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
                context = self._prepare_document_context(doc_type, employee, base_context)
                context['employee_id'] = employee_id  # –î–æ–±–∞–≤–ª—è–µ–º ID —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç

                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∏–ø–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
                preview_data.append({
                    'document_type': doc_type,
                    'document_data': context,
                    'employee_id': employee_id
                })

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            if not preview_data:
                messages.error(self.request, _("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞"))
                return self.form_invalid(form)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤ —Å–µ—Å—Å–∏—é
            self.request.session['preview_data'] = json.dumps(preview_data, default=str)

            # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —Å–µ—Å—Å–∏—é
            self.request.session['debug_info'] = {
                'employee_id': employee_id,
                'document_types': document_types,
                'preview_data_length': len(preview_data)
            }

            # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            return redirect('directory:documents:documents_preview')

        except Exception as e:
            messages.error(self.request, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ä–º—ã: {str(e)}")
            return self.form_invalid(form)

    def _prepare_document_context(self, document_type, employee, base_context):
        """
        –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞

        Args:
            document_type: –¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞ (—Å—Ç—Ä–æ–∫–∞)
            employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
            base_context: –ë–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞

        Returns:
            dict: –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞
        """
        context = base_context.copy()
        missing_data = []

        # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        if document_type == 'internship_order':
            # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è –æ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–µ
            internship_data = {
                'order_number': '',  # –ù–æ–º–µ—Ä —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –≤–≤–µ—Å—Ç–∏)
            }

            # –ü–µ—Ä–∏–æ–¥ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏
            if hasattr(employee.position, 'internship_period_days') and employee.position.internship_period_days:
                internship_data['internship_duration'] = employee.position.internship_period_days
            else:
                internship_data['internship_duration'] = 2
                missing_data.append('–ü–µ—Ä–∏–æ–¥ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –Ω–µ —É–∫–∞–∑–∞–Ω –≤ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏')

            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏
            leader_position, position_success = get_internship_leader_position(employee)
            if not position_success:
                missing_data.append('–ù–µ –Ω–∞–π–¥–µ–Ω —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏')

            leader_name, name_success = get_internship_leader_name(employee)
            if not name_success:
                missing_data.append('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –§–ò–û —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏')

            leader_initials, initials_success = get_internship_leader_initials(employee)
            if not initials_success:
                missing_data.append('–ù–µ –Ω–∞–π–¥–µ–Ω—ã –∏–Ω–∏—Ü–∏–∞–ª—ã —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏')

            internship_data.update({
                'head_of_internship_position': leader_position,
                'head_of_internship_name': leader_name,
                'head_of_internship_name_initials': leader_initials,
            })

            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ (–¥–æ–ª–∂–Ω–∞ —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏)
            director_info, director_success = get_director_info(employee.organization)
            if not director_success:
                missing_data.append('–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ')

            internship_data.update({
                'director_position': director_info['position'],
                'director_name': director_info['name'],
            })

            context.update(internship_data)

        elif document_type == 'admission_order':
            # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è –æ –¥–æ–ø—É—Å–∫–µ –∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ
            admission_data = {
                'order_number': '',  # –ù–æ–º–µ—Ä —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –≤–≤–µ—Å—Ç–∏)
            }

            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ
            director_info, director_success = get_director_info(employee.organization)
            if not director_success:
                missing_data.append('–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ')

            admission_data.update({
                'director_position': director_info['position'],
                'director_name': director_info['name'],
            })

            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–≥–æ –∂–µ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è, —á—Ç–æ –∏ –¥–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏
            leader_initials, initials_success = get_internship_leader_initials(employee)
            if not initials_success:
                missing_data.append('–ù–µ –Ω–∞–π–¥–µ–Ω—ã –∏–Ω–∏—Ü–∏–∞–ª—ã —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è')

            admission_data['head_of_internship_name_initials'] = leader_initials

            context.update(admission_data)

        elif document_type == 'knowledge_protocol':
            # –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π
            protocol_data = {
                'protocol_number': '',  # –ù–æ–º–µ—Ä –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –≤–≤–µ—Å—Ç–∏)
                'knowledge_result': '—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ',
            }

            # –ß–ª–µ–Ω—ã –∫–æ–º–∏—Å—Å–∏–∏
            commission_members, commission_success = get_commission_members(employee)
            if not commission_success:
                missing_data.append('–ù–µ –Ω–∞–π–¥–µ–Ω—ã —á–ª–µ–Ω—ã –∫–æ–º–∏—Å—Å–∏–∏')

            protocol_data['commission_members'] = commission_members

            # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞
            safety_instructions, instructions_success = get_safety_instructions(employee)
            if not instructions_success:
                missing_data.append('–ù–µ –Ω–∞–π–¥–µ–Ω—ã –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞')

            protocol_data['safety_instructions'] = safety_instructions

            context.update(protocol_data)

        elif document_type == 'doc_familiarization':
            # –î–∞–Ω–Ω—ã–µ –¥–ª—è –ª–∏—Å—Ç–∞ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏
            familiarization_data = {
                'familiarization_date': base_context.get('order_date', ''),
            }

            # –î–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è
            documents_list, documents_success = get_employee_documents(employee)
            if not documents_success:
                missing_data.append('–ù–µ –Ω–∞–π–¥–µ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è')

            familiarization_data['documents_list'] = documents_list

            context.update(familiarization_data)

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
        context['missing_data'] = missing_data
        context['has_missing_data'] = len(missing_data) > 0

        return context