"""
üîß –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏

–°–æ–¥–µ—Ä–∂–∏—Ç —É—Ç–∏–ª–∏—Ç—ã –∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏.
"""
import logging
from directory.utils.declension import get_initials_from_name, decline_full_name, decline_phrase
from directory.models import Employee

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)


def get_internship_leader(employee):
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.
    –ò—â–µ—Ç —Ç–æ–ª—å–∫–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å —è–≤–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º —Ñ–ª–∞–≥–æ–º can_be_internship_leader=True.

    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (leader, level, success)
        –≥–¥–µ level: "department", "subdivision", "organization"
    """
    logger.info(f"–ü–æ–∏—Å–∫ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ {employee.full_name_nominative}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —É–∫–∞–∑–∞–Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å
    if not employee.position:
        logger.warning(f"–£ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ {employee.full_name_nominative} –Ω–µ —É–∫–∞–∑–∞–Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å")
        return None, None, False

    # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏ –∏ –æ—Ç–¥–µ–ª–µ
    logger.info(f"–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ: {employee.subdivision.name if employee.subdivision else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}")
    logger.info(f"–û—Ç–¥–µ–ª: {employee.department.name if employee.department else '–ù–µ —É–∫–∞–∑–∞–Ω'}")

    # 1. –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –≤ –æ—Ç–¥–µ–ª–µ
    if employee.department:
        leaders_in_dept = list(employee.department.employees.filter(
            position__can_be_internship_leader=True
        ).exclude(id=employee.id))  # –ò—Å–∫–ª—é—á–∞–µ–º —Å–∞–º–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞

        logger.info(f"–ù–∞–π–¥–µ–Ω–æ {len(leaders_in_dept)} —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –≤ –æ—Ç–¥–µ–ª–µ")

        if leaders_in_dept:
            leader = leaders_in_dept[0]
            logger.info(f"–ù–∞–π–¥–µ–Ω —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –≤ –æ—Ç–¥–µ–ª–µ: {leader.full_name_nominative}")
            return leader, "department", True

    # 2. –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
    if employee.subdivision:
        leaders_in_subdiv = list(Employee.objects.filter(
            subdivision=employee.subdivision,
            position__can_be_internship_leader=True,
        ).exclude(id=employee.id))  # –ò—Å–∫–ª—é—á–∞–µ–º —Å–∞–º–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞

        logger.info(f"–ù–∞–π–¥–µ–Ω–æ {len(leaders_in_subdiv)} —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏")

        if leaders_in_subdiv:
            leader = leaders_in_subdiv[0]
            logger.info(f"–ù–∞–π–¥–µ–Ω —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏: {leader.full_name_nominative}")
            return leader, "subdivision", True

    # 3. –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    if employee.organization:
        leaders_in_org = list(Employee.objects.filter(
            organization=employee.organization,
            position__can_be_internship_leader=True,
        ).exclude(id=employee.id))  # –ò—Å–∫–ª—é—á–∞–µ–º —Å–∞–º–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞

        logger.info(f"–ù–∞–π–¥–µ–Ω–æ {len(leaders_in_org)} —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏")

        if leaders_in_org:
            leader = leaders_in_org[0]
            logger.info(f"–ù–∞–π–¥–µ–Ω —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: {leader.full_name_nominative}")
            return leader, "organization", True

    # –ï—Å–ª–∏ –Ω–∏–≥–¥–µ –Ω–µ –Ω–∞—à–ª–∏ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    logger.warning(f"–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –¥–ª—è {employee.full_name_nominative} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    return None, None, False


def get_document_signer(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∞–Ω—Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å —É—á–µ—Ç–æ–º –∏–µ—Ä–∞—Ä—Ö–∏–∏.
    –ò—â–µ—Ç —Ç–æ–ª—å–∫–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å —è–≤–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º —Ñ–ª–∞–≥–æ–º can_sign_orders=True.

    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (signer, level, success)
        –≥–¥–µ level: "department", "subdivision", "organization"
    """
    logger.info(f"–ü–æ–∏—Å–∫ –ø–æ–¥–ø–∏—Å–∞–Ω—Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ {employee.full_name_nominative}")

    # 1. –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –≤ –æ—Ç–¥–µ–ª–µ
    if employee.department:
        signer = employee.department.employees.filter(
            position__can_sign_orders=True
        ).first()
        if signer:
            logger.info(f"–ù–∞–π–¥–µ–Ω –ø–æ–¥–ø–∏—Å–∞–Ω—Ç –≤ –æ—Ç–¥–µ–ª–µ: {signer.full_name_nominative}")
            return signer, "department", True

    # 2. –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
    if employee.subdivision:
        signer = Employee.objects.filter(
            subdivision=employee.subdivision,
            position__can_sign_orders=True,
        ).first()
        if signer:
            logger.info(f"–ù–∞–π–¥–µ–Ω –ø–æ–¥–ø–∏—Å–∞–Ω—Ç –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏: {signer.full_name_nominative}")
            return signer, "subdivision", True

    # 3. –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    if employee.organization:
        signer = Employee.objects.filter(
            organization=employee.organization,
            position__can_sign_orders=True,
        ).first()
        if signer:
            logger.info(f"–ù–∞–π–¥–µ–Ω –ø–æ–¥–ø–∏—Å–∞–Ω—Ç –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: {signer.full_name_nominative}")
            return signer, "organization", True

    # –ï—Å–ª–∏ –Ω–∏–≥–¥–µ –Ω–µ –Ω–∞—à–ª–∏
    logger.warning(f"–ü–æ–¥–ø–∏—Å–∞–Ω—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è {employee.full_name_nominative} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    return None, None, False


def get_internship_leader_position(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–æ–ª–∂–Ω–æ—Å—Ç—å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    –î–æ–ª–∂–Ω–æ—Å—Ç—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Å –º–∞–ª–µ–Ω—å–∫–æ–π –±—É–∫–≤—ã.

    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (position_name, success)
    """
    leader, _, success = get_internship_leader(employee)
    if success and leader and leader.position:
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–æ–ª–∂–Ω–æ—Å—Ç—å –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É (–ø–µ—Ä–≤–∞—è –±—É–∫–≤–∞)
        position_name = leader.position.position_name
        if position_name:
            position_name = position_name[0].lower() + position_name[1:]
        return position_name, True

    return None, False


def get_internship_leader_name(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –§–ò–û —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (name, success)
    """
    leader, _, success = get_internship_leader(employee)
    if success and leader:
        return leader.full_name_nominative, True

    return None, False


def get_internship_leader_initials(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª—ã —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (initials, success)
    """
    leader, _, success = get_internship_leader(employee)
    if success and leader:
        return get_initials_from_name(leader.full_name_nominative), True

    return None, False


def get_commission_members(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —á–ª–µ–Ω–æ–≤ –∫–æ–º–∏—Å—Å–∏–∏ –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π.
    –ò—â–µ—Ç —Ç–æ–ª—å–∫–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å —è–≤–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —Ä–æ–ª—è–º–∏ –≤ –∫–æ–º–∏—Å—Å–∏–∏.

    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (members_list, success)
    """
    # –ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ —Ä–æ–ª—è–º –≤ –∫–æ–º–∏—Å—Å–∏–∏
    if employee.organization:
        try:
            # –ü–æ–∏—Å–∫ –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—è –∫–æ–º–∏—Å—Å–∏–∏
            chairman = Employee.objects.filter(
                organization=employee.organization,
                position__commission_role='chairman'
            ).first()

            # –ü–æ–∏—Å–∫ —á–ª–µ–Ω–æ–≤ –∫–æ–º–∏—Å—Å–∏–∏
            members = list(Employee.objects.filter(
                organization=employee.organization,
                position__commission_role='member'
            ))

            # –ü–æ–∏—Å–∫ —Å–µ–∫—Ä–µ—Ç–∞—Ä—è –∫–æ–º–∏—Å—Å–∏–∏
            secretary = Employee.objects.filter(
                organization=employee.organization,
                position__commission_role='secretary'
            ).first()

            # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–∏—Å—Å–∏—é, –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏
            if chairman and members and secretary:
                commission = []

                commission.append({
                    "role": "–ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å –∫–æ–º–∏—Å—Å–∏–∏",
                    "name": chairman.full_name_nominative,
                    "position": chairman.position.position_name if chairman.position else "–¥–∏—Ä–µ–∫—Ç–æ—Ä"
                })

                for member in members:
                    commission.append({
                        "role": "–ß–ª–µ–Ω –∫–æ–º–∏—Å—Å–∏–∏",
                        "name": member.full_name_nominative,
                        "position": member.position.position_name if member.position else "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç"
                    })

                commission.append({
                    "role": "–°–µ–∫—Ä–µ—Ç–∞—Ä—å –∫–æ–º–∏—Å—Å–∏–∏",
                    "name": secretary.full_name_nominative,
                    "position": secretary.position.position_name if secretary.position else "—Å–µ–∫—Ä–µ—Ç–∞—Ä—å"
                })

                logger.info(f"–ù–∞–π–¥–µ–Ω—ã –≤—Å–µ —á–ª–µ–Ω—ã –∫–æ–º–∏—Å—Å–∏–∏: –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å, {len(members)} —á–ª–µ–Ω–æ–≤, —Å–µ–∫—Ä–µ—Ç–∞—Ä—å")
                return commission, True
            else:
                missing = []
                if not chairman:
                    missing.append("–ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å")
                if not members:
                    missing.append("—á–ª–µ–Ω—ã")
                if not secretary:
                    missing.append("—Å–µ–∫—Ä–µ—Ç–∞—Ä—å")
                logger.warning(f"–ù–µ –Ω–∞–π–¥–µ–Ω—ã –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —á–ª–µ–Ω—ã –∫–æ–º–∏—Å—Å–∏–∏: {', '.join(missing)}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —á–ª–µ–Ω–æ–≤ –∫–æ–º–∏—Å—Å–∏–∏: {str(e)}")

    # –ù–µ –Ω–∞–π–¥–µ–Ω–æ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    return None, False


def get_employee_documents(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –¥–æ–ª–∂–µ–Ω –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫
    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (documents_list, success)
    """
    # –ï—Å–ª–∏ —É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –µ—Å—Ç—å –¥–æ–ª–∂–Ω–æ—Å—Ç—å —Å –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏
    if employee.position and hasattr(employee.position, 'documents'):
        documents = employee.position.documents.all()
        if documents.exists():
            documents_list = [doc.name for doc in documents]
            return documents_list, True

    # –ù–µ –Ω–∞–π–¥–µ–Ω–æ
    logger.warning(f"–î–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ {employee.full_name_nominative} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è")
    return None, False


def prepare_internship_context(employee, context=None):
    """
    –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è –æ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–µ,
    –≤–∫–ª—é—á–∞—è —Å–∫–ª–æ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∏ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏
    –≤ —Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂.

    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
        context: –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

    Returns:
        dict: –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –æ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–µ
    """
    if context is None:
        context = {}

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏
    leader, level, success = get_internship_leader(employee)

    if success and leader:
        # –ü–æ–ª—É—á–∞–µ–º –¥–æ–ª–∂–Ω–æ—Å—Ç—å –∏ –∏–º—è –≤ –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ
        leader_position = leader.position.position_name
        leader_name = leader.full_name_nominative

        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
        if leader_position:
            leader_position = leader_position[0].lower() + leader_position[1:]

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª—ã
        leader_name_initials = get_initials_from_name(leader_name)

        # –°–∫–ª–æ–Ω—è–µ–º –≤ —Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂
        leader_position_genitive = decline_phrase(leader_position, 'gent')
        leader_name_genitive = decline_full_name(leader_name, 'gent')

        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∏ —Å–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
        context.update({
            'head_of_internship_position': leader_position,
            'head_of_internship_name': leader_name,
            'head_of_internship_name_initials': leader_name_initials,  # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª—ã
            'head_of_internship_position_genitive': leader_position_genitive,
            'head_of_internship_name_genitive': leader_name_genitive,
            'internship_leader_level': level,  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
        })
    else:
        # –î–ª—è —Å–ª—É—á–∞—è –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∏–∫–∞–∫–∏—Ö –∑–∞–≥–ª—É—à–µ–∫,
        # –∞ –æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–ª—è –ø—É—Å—Ç—ã–º–∏, —á—Ç–æ–±—ã –Ω–µ –≤–≤–æ–¥–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∑–∞–±–ª—É–∂–¥–µ–Ω–∏–µ
        logger.error(f"–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ {employee.full_name_nominative}")
        # –ú—ã –ù–ï –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫–∏, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –æ—à–∏–±–∫–∞–º –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ

    return context


def get_commission_formatted(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–º–∏—Å—Å–∏–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ, –ø–æ–¥—Ö–æ–¥—è—â–µ–º –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∏ –Ω–∞–π–¥–µ–Ω—ã.

    Args:
        employee: –û–±—ä–µ–∫—Ç –º–æ–¥–µ–ª–∏ Employee
    Returns:
        tuple: (–¥–∞–Ω–Ω—ã–µ –æ –∫–æ–º–∏—Å—Å–∏–∏ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è)
    """
    commission_members, success = get_commission_members(employee)
    if not success or not commission_members:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–º–∏—Å—Å–∏–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ {employee.full_name_nominative}")
        # –ù–µ —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å –∏ False
        return {}, False

    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
        chairman = None
        members = []
        secretary = None

        # –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º —á–ª–µ–Ω–æ–≤ –∫–æ–º–∏—Å—Å–∏–∏ –ø–æ —Ä–æ–ª—è–º
        for member in commission_members:
            if isinstance(member, dict):
                role = member.get('role', '').lower()
                if '–ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å' in role:
                    chairman = member
                elif '—Å–µ–∫—Ä–µ—Ç–∞—Ä—å' in role:
                    secretary = member
                else:
                    members.append(member)

        # –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        result = {}

        if chairman:
            result['chairman'] = f"{chairman['name']}, {chairman['position']}"
            result['chairman_position'] = chairman['position']
            result['chairman_name'] = chairman['name']
            result['chairman_name_initials'] = get_initials_from_name(chairman['name'])

        if members:
            result['members'] = [f"{m['name']}, {m['position']}" for m in members]
            if len(members) > 0:
                result['member1_position'] = members[0]['position']
                result['member1_name'] = members[0]['name']
                result['member1_name_initials'] = get_initials_from_name(members[0]['name'])

        if secretary:
            result['secretary'] = f"{secretary['name']}, {secretary['position']}"
            result['secretary_position'] = secretary['position']
            result['secretary_name'] = secretary['name']
            result['secretary_name_initials'] = get_initials_from_name(secretary['name'])

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
        required_keys = ['chairman', 'members', 'secretary',
                         'chairman_position', 'chairman_name', 'chairman_name_initials',
                         'member1_position', 'member1_name', 'member1_name_initials',
                         'secretary_position', 'secretary_name', 'secretary_name_initials']

        missing_keys = [key for key in required_keys if key not in result]
        if missing_keys:
            logger.warning(f"–í –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–∏—Å—Å–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–ª—é—á–∏: {', '.join(missing_keys)}")
            return result, False  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ, –Ω–æ —Å —Ñ–ª–∞–≥–æ–º –Ω–µ—É—Å–ø–µ—à–Ω–æ—Å—Ç–∏

        return result, True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–∏—Å—Å–∏–∏: {str(e)}")
        return {}, False