"""
üîß –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏

–°–æ–¥–µ—Ä–∂–∏—Ç —É—Ç–∏–ª–∏—Ç—ã –∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏.
"""
import logging
from directory.utils.declension import get_initials_from_name, decline_full_name, decline_phrase
from directory.models import Employee

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)


def get_internship_leader(employee):
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (leader, level, success)
        –≥–¥–µ level: "department", "subdivision", "organization"
    """
    # 1. –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –≤ –æ—Ç–¥–µ–ª–µ
    if employee.department:
        leader = employee.department.employees.filter(
            position__can_be_internship_leader=True
        ).first()
        if leader:
            return leader, "department", True

    # 2. –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
    if employee.subdivision:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ –º–æ–¥–µ–ª–∏ Employee
        leader = Employee.objects.filter(
            subdivision=employee.subdivision,
            position__can_be_internship_leader=True,
            department__isnull=True  # –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –Ω–∞–ø—Ä—è–º—É—é –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
        ).first()
        if leader:
            return leader, "subdivision", True

    # 3. –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    if employee.organization:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ –º–æ–¥–µ–ª–∏ Employee
        leader = Employee.objects.filter(
            organization=employee.organization,
            position__can_be_internship_leader=True,
            subdivision__isnull=True,  # –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –Ω–∞–ø—Ä—è–º—É—é –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
            department__isnull=True
        ).first()
        if leader:
            return leader, "organization", True

    # –ï—Å–ª–∏ –Ω–∏–≥–¥–µ –Ω–µ –Ω–∞—à–ª–∏
    return None, None, False


def get_document_signer(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∞–Ω—Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å —É—á–µ—Ç–æ–º –∏–µ—Ä–∞—Ä—Ö–∏–∏
    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (signer, level, success)
        –≥–¥–µ level: "department", "subdivision", "organization"
    """
    # 1. –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –≤ –æ—Ç–¥–µ–ª–µ
    if employee.department:
        signer = employee.department.employees.filter(
            position__can_sign_orders=True
        ).first()
        if signer:
            return signer, "department", True

    # 2. –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
    if employee.subdivision:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ –º–æ–¥–µ–ª–∏ Employee
        signer = Employee.objects.filter(
            subdivision=employee.subdivision,
            position__can_sign_orders=True,
            department__isnull=True  # –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –Ω–∞–ø—Ä—è–º—É—é –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
        ).first()
        if signer:
            return signer, "subdivision", True

    # 3. –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    if employee.organization:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ –º–æ–¥–µ–ª–∏ Employee
        signer = Employee.objects.filter(
            organization=employee.organization,
            position__can_sign_orders=True,
            subdivision__isnull=True,  # –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –Ω–∞–ø—Ä—è–º—É—é –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
            department__isnull=True
        ).first()
        if signer:
            return signer, "organization", True

    # –ï—Å–ª–∏ –Ω–∏–≥–¥–µ –Ω–µ –Ω–∞—à–ª–∏
    return None, None, False


def get_internship_leader_position(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–æ–ª–∂–Ω–æ—Å—Ç—å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    –î–æ–ª–∂–Ω–æ—Å—Ç—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Å –º–∞–ª–µ–Ω—å–∫–æ–π –±—É–∫–≤—ã.

    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (position_name, success)
    """
    leader, _, success = get_internship_leader(employee)
    if success and leader and leader.position:
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–æ–ª–∂–Ω–æ—Å—Ç—å –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É (–ø–µ—Ä–≤–∞—è –±—É–∫–≤–∞)
        position_name = leader.position.position_name
        if position_name:
            position_name = position_name[0].lower() + position_name[1:]
        return position_name, True

    return "–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –¥–æ–ª–∂–Ω–æ—Å—Ç—å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏", False


def get_internship_leader_name(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –§–ò–û —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (name, success)
    """
    leader, _, success = get_internship_leader(employee)
    if success and leader:
        return leader.full_name_nominative, True

    return "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –§–ò–û —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏", False


def get_internship_leader_initials(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª—ã —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (initials, success)
    """
    leader, _, success = get_internship_leader(employee)
    if success and leader:
        return get_initials_from_name(leader.full_name_nominative), True

    return "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∏–Ω–∏—Ü–∏–∞–ª—ã —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏", False


def get_director_info(organization):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    Args:
        organization: –û–±—ä–µ–∫—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ Organization
    Returns:
        tuple: ({'position': position, 'name': name}, success)
    """
    # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ –∏–∑ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    # –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —ç—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤ –º–æ–¥–µ–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    if organization and hasattr(organization, 'director_name') and organization.director_name:
        return {
            'position': getattr(organization, 'director_position', '–î–∏—Ä–µ–∫—Ç–æ—Ä'),
            'name': organization.director_name
        }, True

    # –ù–µ –Ω–∞–π–¥–µ–Ω–æ
    return {
        'position': "–î–∏—Ä–µ–∫—Ç–æ—Ä",
        'name': "–ò.–ò. –ö–æ—Ä–∂–æ–≤"  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    }, False


def get_commission_members(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —á–ª–µ–Ω–æ–≤ –∫–æ–º–∏—Å—Å–∏–∏ –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π
    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (members_list, success)
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–∏—Å—Å–∏–∏
    if hasattr(employee.organization, 'commission_members'):
        commission = getattr(employee.organization, 'commission_members', None)
        if commission and len(commission) > 0:
            return commission, True

    # –ù–µ –Ω–∞–π–¥–µ–Ω–æ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —à–∞–±–ª–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –∑–∞–ø–æ–ª–Ω–∏—Ç—å
    return [
        {"role": "–ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å –∫–æ–º–∏—Å—Å–∏–∏", "name": "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å"},
        {"role": "–ß–ª–µ–Ω –∫–æ–º–∏—Å—Å–∏–∏", "name": "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å"},
        {"role": "–ß–ª–µ–Ω –∫–æ–º–∏—Å—Å–∏–∏", "name": "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å"},
    ], False


def get_safety_instructions(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (instructions_list, success)
    """
    # –ï—Å–ª–∏ —É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –µ—Å—Ç—å –¥–æ–ª–∂–Ω–æ—Å—Ç—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
    if employee.position and hasattr(employee.position, 'safety_instructions_numbers'):
        instructions = employee.position.safety_instructions_numbers
        if instructions:
            # –†–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å –Ω–æ–º–µ—Ä–∞–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –Ω–∞ —Å–ø–∏—Å–æ–∫
            instructions_list = [instr.strip() for instr in instructions.split(',')]
            return instructions_list, True

    # –ù–µ –Ω–∞–π–¥–µ–Ω–æ
    return ["–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"], False


def get_employee_documents(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –¥–æ–ª–∂–µ–Ω –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫
    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (documents_list, success)
    """
    # –ï—Å–ª–∏ —É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –µ—Å—Ç—å –¥–æ–ª–∂–Ω–æ—Å—Ç—å —Å –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏
    if employee.position and hasattr(employee.position, 'documents'):
        documents = employee.position.documents.all()
        if documents.exists():
            documents_list = [doc.name for doc in documents]
            return documents_list, True

    # –ù–µ –Ω–∞–π–¥–µ–Ω–æ
    return ["–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"], False


def prepare_internship_context(employee, context=None):
    """
    –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è –æ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–µ,
    –≤–∫–ª—é—á–∞—è —Å–∫–ª–æ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∏ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏
    –≤ —Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂.

    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
        context: –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

    Returns:
        dict: –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –æ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–µ
    """
    if context is None:
        context = {}

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏
    leader, level, success = get_internship_leader(employee)

    if success and leader:
        # –ü–æ–ª—É—á–∞–µ–º –¥–æ–ª–∂–Ω–æ—Å—Ç—å –∏ –∏–º—è –≤ –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ
        leader_position = leader.position.position_name
        leader_name = leader.full_name_nominative

        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
        if leader_position:
            leader_position = leader_position[0].lower() + leader_position[1:]

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª—ã
        leader_name_initials = get_initials_from_name(leader_name)

        # –°–∫–ª–æ–Ω—è–µ–º –≤ —Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂
        leader_position_genitive = decline_phrase(leader_position, 'gent')
        leader_name_genitive = decline_full_name(leader_name, 'gent')

        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∏ —Å–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
        context.update({
            'head_of_internship_position': leader_position,
            'head_of_internship_name': leader_name,
            'head_of_internship_name_initials': leader_name_initials,  # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª—ã
            'head_of_internship_position_genitive': leader_position_genitive,
            'head_of_internship_name_genitive': leader_name_genitive,
            'internship_leader_level': level,  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
        })
    else:
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫–∏, –µ—Å–ª–∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
        context.update({
            'head_of_internship_position': "–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –¥–æ–ª–∂–Ω–æ—Å—Ç—å",
            'head_of_internship_name': "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –§–ò–û",
            'head_of_internship_name_initials': "–ù.–£.–§.",  # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–æ–≤
            'head_of_internship_position_genitive': "–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –¥–æ–ª–∂–Ω–æ—Å—Ç—å",
            'head_of_internship_name_genitive': "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –§–ò–û",
            'internship_leader_level': None,
        })

    return context


def prepare_director_context(employee, context=None):
    """
    –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å–∞–Ω—Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ (–¥–∏—Ä–µ–∫—Ç–æ—Ä–∞),
    –≤–∫–ª—é—á–∞—è —Å–∫–ª–æ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∏ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –≤ —Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂.

    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
        context: –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

    Returns:
        dict: –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ–¥–ø–∏—Å–∞–Ω—Ç–µ
    """
    if context is None:
        context = {}

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∞–Ω—Ç–µ
    signer, level, success = get_document_signer(employee)

    if success and signer:
        # –ü–æ–ª—É—á–∞–µ–º –¥–æ–ª–∂–Ω–æ—Å—Ç—å –∏ –∏–º—è
        signer_position = signer.position.position_name
        signer_name = signer.full_name_nominative

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª—ã
        signer_name_initials = get_initials_from_name(signer_name)

        # –°–∫–ª–æ–Ω—è–µ–º –≤ —Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂
        signer_position_genitive = decline_phrase(signer_position, 'gent')
        signer_name_genitive = decline_full_name(signer_name, 'gent')

        context.update({
            'director_position': signer_position,
            'director_name': signer_name,
            'director_name_initials': signer_name_initials,
            'director_position_genitive': signer_position_genitive,
            'director_name_genitive': signer_name_genitive,
            'director_level': level,  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
        })
    else:
        # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
        director_info, _ = get_director_info(employee.organization)
        director_position = director_info['position']
        director_name = director_info['name']

        # –°–∫–ª–æ–Ω—è–µ–º –≤ —Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂
        director_position_genitive = decline_phrase(director_position, 'gent')

        # –ò–º—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–∂–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∏–Ω–∏—Ü–∏–∞–ª–æ–≤ (–ò.–ò. –ò–≤–∞–Ω–æ–≤)
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ
        if '.' in director_name:
            # –£–∂–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∏–Ω–∏—Ü–∏–∞–ª–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å
            director_name_initials = director_name
            director_name_genitive = director_name  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É–∂–µ —Å–∫–ª–æ–Ω–µ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ
        else:
            # –ü–æ–ª–Ω–æ–µ –∏–º—è, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª—ã –∏ —Å–∫–ª–æ–Ω—è–µ–º
            director_name_initials = get_initials_from_name(director_name)
            director_name_genitive = decline_full_name(director_name, 'gent')

        context.update({
            'director_position': director_position,
            'director_name': director_name,
            'director_name_initials': director_name_initials,
            'director_position_genitive': director_position_genitive,
            'director_name_genitive': director_name_genitive,
            'director_level': None,
        })

    return context


def get_commission_formatted(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–º–∏—Å—Å–∏–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ, –ø–æ–¥—Ö–æ–¥—è—â–µ–º –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.
    Args:
        employee: –û–±—ä–µ–∫—Ç –º–æ–¥–µ–ª–∏ Employee
    Returns:
        tuple: (–¥–∞–Ω–Ω—ã–µ –æ –∫–æ–º–∏—Å—Å–∏–∏ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è)
    """
    commission_members, success = get_commission_members(employee)
    if not success or not commission_members:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–º–∏—Å—Å–∏–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ {employee.full_name_nominative}")
        return {
            'chairman': '–ò–≤–∞–Ω–æ–≤ –ò.–ò., –¥–∏—Ä–µ–∫—Ç–æ—Ä',
            'members': ['–ü–µ—Ç—Ä–æ–≤ –ü.–ü., –∑–∞–º. –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞', '–°–∏–¥–æ—Ä–æ–≤ –°.–°., –∏–Ω–∂–µ–Ω–µ—Ä –ø–æ –û–¢'],
            'secretary': '–ö—É–∑–Ω–µ—Ü–æ–≤–∞ –ö.–ö., —Å–µ–∫—Ä–µ—Ç–∞—Ä—å'
        }, False

    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
        result = {
            'chairman': commission_members[0]['name'] if isinstance(commission_members[0], dict) else
            commission_members[0],
            'members': [],
            'secretary': commission_members[-1]['name'] if isinstance(commission_members[-1], dict) else
            commission_members[-1]
        }

        # –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —á–ª–µ–Ω—ã –∫–æ–º–∏—Å—Å–∏–∏
        if len(commission_members) > 2:
            for member in commission_members[1:-1]:
                result['members'].append(member['name'] if isinstance(member, dict) else member)
        else:
            result['members'] = ['–ü–µ—Ç—Ä–æ–≤ –ü.–ü., –∑–∞–º. –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞']

        return result, True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–∏—Å—Å–∏–∏: {str(e)}")
        return {
            'chairman': '–ò–≤–∞–Ω–æ–≤ –ò.–ò., –¥–∏—Ä–µ–∫—Ç–æ—Ä',
            'members': ['–ü–µ—Ç—Ä–æ–≤ –ü.–ü., –∑–∞–º. –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞'],
            'secretary': '–ö—É–∑–Ω–µ—Ü–æ–≤–∞ –ö.–ö., —Å–µ–∫—Ä–µ—Ç–∞—Ä—å'
        }, False