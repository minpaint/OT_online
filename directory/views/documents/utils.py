"""
üîß –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏

–°–æ–¥–µ—Ä–∂–∏—Ç —É—Ç–∏–ª–∏—Ç—ã –∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏.
"""
from directory.utils.declension import get_initials_from_name
from directory.models import Employee


def get_internship_leader(employee):
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (leader, level, success)
        –≥–¥–µ level: "department", "subdivision", "organization"
    """
    # 1. –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –≤ –æ—Ç–¥–µ–ª–µ
    if employee.department:
        leader = employee.department.employees.filter(
            position__can_be_internship_leader=True
        ).first()
        if leader:
            return leader, "department", True

    # 2. –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
    if employee.subdivision:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ –º–æ–¥–µ–ª–∏ Employee
        leader = Employee.objects.filter(
            subdivision=employee.subdivision,
            position__can_be_internship_leader=True,
            department__isnull=True  # –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –Ω–∞–ø—Ä—è–º—É—é –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
        ).first()
        if leader:
            return leader, "subdivision", True

    # 3. –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    if employee.organization:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ –º–æ–¥–µ–ª–∏ Employee
        leader = Employee.objects.filter(
            organization=employee.organization,
            position__can_be_internship_leader=True,
            subdivision__isnull=True,  # –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –Ω–∞–ø—Ä—è–º—É—é –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
            department__isnull=True
        ).first()
        if leader:
            return leader, "organization", True

    # –ï—Å–ª–∏ –Ω–∏–≥–¥–µ –Ω–µ –Ω–∞—à–ª–∏
    return None, None, False


def get_document_signer(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∞–Ω—Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å —É—á–µ—Ç–æ–º –∏–µ—Ä–∞—Ä—Ö–∏–∏
    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (signer, level, success)
        –≥–¥–µ level: "department", "subdivision", "organization"
    """
    # 1. –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –≤ –æ—Ç–¥–µ–ª–µ
    if employee.department:
        signer = employee.department.employees.filter(
            position__can_sign_orders=True
        ).first()
        if signer:
            return signer, "department", True

    # 2. –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
    if employee.subdivision:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ –º–æ–¥–µ–ª–∏ Employee
        signer = Employee.objects.filter(
            subdivision=employee.subdivision,
            position__can_sign_orders=True,
            department__isnull=True  # –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –Ω–∞–ø—Ä—è–º—É—é –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–∏
        ).first()
        if signer:
            return signer, "subdivision", True

    # 3. –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    if employee.organization:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ –º–æ–¥–µ–ª–∏ Employee
        signer = Employee.objects.filter(
            organization=employee.organization,
            position__can_sign_orders=True,
            subdivision__isnull=True,  # –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –Ω–∞–ø—Ä—è–º—É—é –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
            department__isnull=True
        ).first()
        if signer:
            return signer, "organization", True

    # –ï—Å–ª–∏ –Ω–∏–≥–¥–µ –Ω–µ –Ω–∞—à–ª–∏
    return None, None, False


def get_internship_leader_position(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–æ–ª–∂–Ω–æ—Å—Ç—å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (position_name, success)
    """
    leader, _, success = get_internship_leader(employee)
    if success and leader and leader.position:
        return leader.position.position_name, True

    return "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –¥–æ–ª–∂–Ω–æ—Å—Ç—å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏", False


def get_internship_leader_name(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –§–ò–û —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (name, success)
    """
    leader, _, success = get_internship_leader(employee)
    if success and leader:
        return leader.full_name_nominative, True

    return "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –§–ò–û —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏", False


def get_internship_leader_initials(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª—ã —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (initials, success)
    """
    leader, _, success = get_internship_leader(employee)
    if success and leader:
        return get_initials_from_name(leader.full_name_nominative), True

    return "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∏–Ω–∏—Ü–∏–∞–ª—ã —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏", False


def get_director_info(organization):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    Args:
        organization: –û–±—ä–µ–∫—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ Organization
    Returns:
        tuple: ({'position': position, 'name': name}, success)
    """
    # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ –∏–∑ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    # –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —ç—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤ –º–æ–¥–µ–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    if organization and hasattr(organization, 'director_name') and organization.director_name:
        return {
            'position': getattr(organization, 'director_position', '–î–∏—Ä–µ–∫—Ç–æ—Ä'),
            'name': organization.director_name
        }, True

    # –ù–µ –Ω–∞–π–¥–µ–Ω–æ
    return {
        'position': "–î–∏—Ä–µ–∫—Ç–æ—Ä",
        'name': "–ò.–ò. –ö–æ—Ä–∂–æ–≤"  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    }, False


def get_commission_members(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —á–ª–µ–Ω–æ–≤ –∫–æ–º–∏—Å—Å–∏–∏ –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π
    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (members_list, success)
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–∏—Å—Å–∏–∏
    if hasattr(employee.organization, 'commission_members'):
        commission = getattr(employee.organization, 'commission_members', None)
        if commission and len(commission) > 0:
            return commission, True

    # –ù–µ –Ω–∞–π–¥–µ–Ω–æ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —à–∞–±–ª–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –∑–∞–ø–æ–ª–Ω–∏—Ç—å
    return [
        {"role": "–ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å –∫–æ–º–∏—Å—Å–∏–∏", "name": "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å"},
        {"role": "–ß–ª–µ–Ω –∫–æ–º–∏—Å—Å–∏–∏", "name": "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å"},
        {"role": "–ß–ª–µ–Ω –∫–æ–º–∏—Å—Å–∏–∏", "name": "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å"},
    ], False


def get_safety_instructions(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (instructions_list, success)
    """
    # –ï—Å–ª–∏ —É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –µ—Å—Ç—å –¥–æ–ª–∂–Ω–æ—Å—Ç—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
    if employee.position and hasattr(employee.position, 'safety_instructions_numbers'):
        instructions = employee.position.safety_instructions_numbers
        if instructions:
            # –†–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å –Ω–æ–º–µ—Ä–∞–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –Ω–∞ —Å–ø–∏—Å–æ–∫
            instructions_list = [instr.strip() for instr in instructions.split(',')]
            return instructions_list, True

    # –ù–µ –Ω–∞–π–¥–µ–Ω–æ
    return ["–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"], False


def get_employee_documents(employee):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –¥–æ–ª–∂–µ–Ω –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫
    Args:
        employee: –û–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ Employee
    Returns:
        tuple: (documents_list, success)
    """
    # –ï—Å–ª–∏ —É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –µ—Å—Ç—å –¥–æ–ª–∂–Ω–æ—Å—Ç—å —Å –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏
    if employee.position and hasattr(employee.position, 'documents'):
        documents = employee.position.documents.all()
        if documents.exists():
            documents_list = [doc.name for doc in documents]
            return documents_list, True

    # –ù–µ –Ω–∞–π–¥–µ–Ω–æ
    return ["–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"], False