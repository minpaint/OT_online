import os
import pdfkit
from django.conf import settings
from django.http import HttpResponse
from django.template.loader import get_template
from django.utils import timezone
from django.contrib.auth.decorators import login_required
from django.shortcuts import get_object_or_404
from io import BytesIO
from directory.models import Employee, SIZIssued, SIZNorm, Position


@login_required
def export_personal_card_pdf(request, employee_id):
    """
    üìÑ –≠–∫—Å–ø–æ—Ä—Ç –ª–∏—á–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ —É—á–µ—Ç–∞ –°–ò–ó –≤ —Ñ–æ—Ä–º–∞—Ç–µ PDF –¥–ª—è –ø–µ—á–∞—Ç–∏ –Ω–∞ A4
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç wkhtmltopdf –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–∏—Ä–∏–ª–ª–∏—Ü—ã

    Args:
        request: HttpRequest –æ–±—ä–µ–∫—Ç
        employee_id: ID —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞

    Returns:
        HttpResponse —Å PDF-–¥–æ–∫—É–º–µ–Ω—Ç–æ–º
    """
    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    employee = get_object_or_404(Employee, id=employee_id)

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏
    issued_items = SIZIssued.objects.filter(
        employee=employee
    ).select_related('siz').order_by('-issue_date')

    # –î–∞–Ω–Ω—ã–µ –æ –Ω–æ—Ä–º–∞—Ö –°–ò–ó
    base_norms = []
    condition_groups = []

    if employee.position:
        # –ü–æ–ª—É—á–∞–µ–º –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–æ—Ä–º—ã –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
        direct_norms = SIZNorm.objects.filter(
            position=employee.position
        ).select_related('siz')

        # –ü–æ–ª—É—á–∞–µ–º —ç—Ç–∞–ª–æ–Ω–Ω—ã–µ –Ω–æ—Ä–º—ã –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
        reference_norms = Position.find_reference_norms(employee.position.position_name)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å –Ω–æ—Ä–º, –≥–¥–µ –∫–ª—é—á - –∫–æ–º–±–∏–Ω–∞—Ü–∏—è siz_id + condition
        norm_dict = {}

        # –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç–∞–ª–æ–Ω–Ω—ã–µ –Ω–æ—Ä–º—ã
        for norm in reference_norms:
            key = f"{norm.siz_id}_{norm.condition}"
            norm_dict[key] = norm

        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä—è–º—ã–µ –Ω–æ—Ä–º—ã —Å –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
        for norm in direct_norms:
            key = f"{norm.siz_id}_{norm.condition}"
            norm_dict[key] = norm

        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –Ω–æ—Ä–º—ã –ø–æ —É—Å–ª–æ–≤–∏—è–º
        condition_groups_dict = {}

        for key, norm in norm_dict.items():
            if not norm.condition:
                base_norms.append(norm)
            else:
                if norm.condition not in condition_groups_dict:
                    condition_groups_dict[norm.condition] = []
                condition_groups_dict[norm.condition].append(norm)

        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ—Ä–º—ã
        base_norms.sort(key=lambda x: (x.order, x.siz.name))

        condition_groups = [
            {'name': condition, 'norms': sorted(norms, key=lambda x: (x.order, x.siz.name))}
            for condition, norms in condition_groups_dict.items()
        ]

    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —à–∞–±–ª–æ–Ω–∞
    context = {
        'employee': employee,
        'issued_items': issued_items,
        'base_norms': base_norms,
        'condition_groups': condition_groups,
        'title': f'–õ–∏—á–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —É—á–µ—Ç–∞ –°–ò–ó - {employee.full_name_nominative}',
        'is_pdf': True,  # –§–ª–∞–≥ –¥–ª—è —à–∞–±–ª–æ–Ω–∞, —á—Ç–æ —ç—Ç–æ PDF-–≤–µ—Ä—Å–∏—è
        'now': timezone.now(),  # –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ PDF
        'static_url': settings.STATIC_URL,  # URL –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    }

    # –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω
    template = get_template('directory/siz_issued/personal_card_pdf.html')
    html_content = template.render(context)

    # –û–ø—Ü–∏–∏ –¥–ª—è wkhtmltopdf
    options = {
        'page-size': 'A4',
        'encoding': 'UTF-8',
        'margin-top': '1cm',
        'margin-right': '1cm',
        'margin-bottom': '1cm',
        'margin-left': '1cm',
        'title': context['title'],
    }

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Ç—å –∫ wkhtmltopdf –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–ª–∏ –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
    if hasattr(settings, 'WKHTMLTOPDF_CMD') and settings.WKHTMLTOPDF_CMD:
        config = pdfkit.configuration(wkhtmltopdf=settings.WKHTMLTOPDF_CMD)
        pdf = pdfkit.from_string(html_content, False, options=options, configuration=config)
    else:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
        if os.name == 'nt':  # Windows
            # –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø—É—Ç—å –∫ wkhtmltopdf.exe –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ PATH
            config = pdfkit.configuration(wkhtmltopdf='C:\\Program Files\\wkhtmltopdf\\bin\\wkhtmltopdf.exe')
            pdf = pdfkit.from_string(html_content, False, options=options, configuration=config)
        else:  # Linux/Unix
            pdf = pdfkit.from_string(html_content, False, options=options)

    # –§–æ—Ä–º–∏—Ä—É–µ–º HTTP-–æ—Ç–≤–µ—Ç —Å PDF
    response = HttpResponse(pdf, content_type='application/pdf')

    # –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è –∏–º–µ–Ω–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    # –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–∏ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
    def transliterate(name):
        # –°–ª–æ–≤–∞—Ä—å –∑–∞–º–µ–Ω (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
        translit_dict = {
            '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', '–µ': 'e', '—ë': 'yo',
            '–∂': 'zh', '–∑': 'z', '–∏': 'i', '–π': 'y', '–∫': 'k', '–ª': 'l', '–º': 'm',
            '–Ω': 'n', '–æ': 'o', '–ø': 'p', '—Ä': 'r', '—Å': 's', '—Ç': 't', '—É': 'u',
            '—Ñ': 'f', '—Ö': 'kh', '—Ü': 'ts', '—á': 'ch', '—à': 'sh', '—â': 'sch',
            '—ä': '', '—ã': 'y', '—å': '', '—ç': 'e', '—é': 'yu', '—è': 'ya',
            '–ê': 'A', '–ë': 'B', '–í': 'V', '–ì': 'G', '–î': 'D', '–ï': 'E', '–Å': 'Yo',
            '–ñ': 'Zh', '–ó': 'Z', '–ò': 'I', '–ô': 'Y', '–ö': 'K', '–õ': 'L', '–ú': 'M',
            '–ù': 'N', '–û': 'O', '–ü': 'P', '–†': 'R', '–°': 'S', '–¢': 'T', '–£': 'U',
            '–§': 'F', '–•': 'Kh', '–¶': 'Ts', '–ß': 'Ch', '–®': 'Sh', '–©': 'Sch',
            '–™': '', '–´': 'Y', '–¨': '', '–≠': 'E', '–Æ': 'Yu', '–Ø': 'Ya',
            ' ': '_', '-': '_'
        }
        # –ó–∞–º–µ–Ω—è–µ–º —Å–∏–º–≤–æ–ª—ã
        result = ""
        for char in name:
            result += translit_dict.get(char, char)
        return result

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    transliterated_name = transliterate(employee.full_name_nominative)
    filename = f"siz_card_{employee.id}_{transliterated_name}.pdf"

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    response['Content-Disposition'] = f'attachment; filename="{filename}"'

    return response