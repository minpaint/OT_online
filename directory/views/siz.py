from django.shortcuts import render, get_object_or_404
from django.views.generic import ListView, CreateView
from django.contrib.auth.mixins import LoginRequiredMixin
from django.http import JsonResponse
from django.urls import reverse_lazy
from django.views.decorators.http import require_GET

from directory.models.siz import SIZ, SIZNorm
from directory.models.position import Position
from directory.models import Employee
from directory.forms.siz import SIZForm, SIZNormForm


class SIZListView(LoginRequiredMixin, ListView):
    """
    üõ°Ô∏è –ü–æ–∫–∞–∑ —Å–ø–∏—Å–∫–∞ –°–ò–ó
    """
    model = SIZ
    template_name = 'directory/siz/list.html'
    context_object_name = 'siz_list'

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context['title'] = '–°—Ä–µ–¥—Å—Ç–≤–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –∑–∞—â–∏—Ç—ã'
        return context


class SIZNormCreateView(LoginRequiredMixin, CreateView):
    """
    üìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ—Ä–º—ã –≤—ã–¥–∞—á–∏ –°–ò–ó
    """
    model = SIZNorm
    form_class = SIZNormForm
    template_name = 'directory/siz/norm_form.html'
    success_url = reverse_lazy('directory:siz:siz_list')

    def get_form_kwargs(self):
        kwargs = super().get_form_kwargs()
        position_id = self.request.GET.get('position_id')
        if position_id:
            kwargs['position_id'] = position_id
        return kwargs

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context['title'] = '–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ—Ä–º—ã –≤—ã–¥–∞—á–∏ –°–ò–ó'

        position_id = self.request.GET.get('position_id')
        if position_id:
            position = Position.objects.filter(id=position_id).first()
            if position:
                context['position'] = position

        return context


def position_siz_norms(request, position_id):
    """
    üìã –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ—Ä–º –°–ò–ó –¥–ª—è –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
    """
    position = get_object_or_404(Position, pk=position_id)

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–æ—Ä–º—ã –°–ò–ó –¥–ª—è –¥–∞–Ω–Ω–æ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
    base_norms = SIZNorm.objects.filter(position=position, condition='').select_related('siz')

    # –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è (–∫—Ä–æ–º–µ –ø—É—Å—Ç—ã—Ö)
    conditions = SIZNorm.objects.filter(position=position).exclude(condition='').values_list('condition',
                                                                                             flat=True).distinct()

    # –§–æ—Ä–º–∏—Ä—É–µ–º –≥—Ä—É–ø–ø—ã –°–ò–ó –ø–æ —É—Å–ª–æ–≤–∏—è–º
    groups = []
    for condition in conditions:
        norms = SIZNorm.objects.filter(position=position, condition=condition).select_related('siz').order_by('order')
        groups.append({
            'name': condition,
            'norms': norms
        })

    context = {
        'position': position,
        'base_norms': base_norms,
        'groups': groups
    }

    return render(request, 'admin/directory/position/siz_norms.html', context)


def siz_by_position_api(request):
    """
    üîç API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ—Ä–º –°–ò–ó –¥–ª—è –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –ø–æ AJAX-–∑–∞–ø—Ä–æ—Å—É
    """
    position_id = request.GET.get('position_id')
    if not position_id:
        return JsonResponse({'error': '–ù–µ —É–∫–∞–∑–∞–Ω ID –¥–æ–ª–∂–Ω–æ—Å—Ç–∏'}, status=400)

    try:
        position = Position.objects.get(pk=position_id)
    except Position.DoesNotExist:
        return JsonResponse({'error': '–î–æ–ª–∂–Ω–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}, status=404)

    norms = SIZNorm.objects.filter(position=position).select_related('siz')

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    result = {
        'position_id': position.id,
        'position_name': position.position_name,
        'norms': []
    }

    for norm in norms:
        result['norms'].append({
            'id': norm.id,
            'siz_id': norm.siz.id,
            'siz_name': norm.siz.name,
            'classification': norm.siz.classification,
            'quantity': norm.quantity,
            'condition': norm.condition,
            'wear_period': norm.siz.wear_period,
            'unit': norm.siz.unit
        })

    return JsonResponse(result)


@require_GET
def get_position_siz_norms(request, position_id):
    """
    API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ—Ä–º –°–ò–ó –¥–ª—è –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ª–∏—Ü–µ–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –ª–∏—á–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
    """
    position = get_object_or_404(Position, pk=position_id)

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–æ—Ä–º—ã –°–ò–ó –¥–ª—è –¥–∞–Ω–Ω–æ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
    norms = position.siz_norms.all().select_related('siz')

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    result = {
        'position_name': position.position_name,
        'base_norms': [],
        'conditional_norms': []
    }

    # –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ –æ—Å–Ω–æ–≤–Ω—ã–µ –∏ —É—Å–ª–æ–≤–Ω—ã–µ –Ω–æ—Ä–º—ã
    for norm in norms:
        norm_data = {
            'siz_name': norm.siz.name,
            'classification': norm.siz.classification,
            'unit': norm.siz.unit,
            'quantity': norm.quantity,
            'wear_period': "–î–æ –∏–∑–Ω–æ—Å–∞" if norm.siz.wear_period == 0 else f"{norm.siz.wear_period} –º–µ—Å."
        }

        if norm.condition:
            # –ï—Å–ª–∏ –µ—Å—Ç—å —É—Å–ª–æ–≤–∏–µ - –¥–æ–±–∞–≤–ª—è–µ–º –≤ —É—Å–ª–æ–≤–Ω—ã–µ –Ω–æ—Ä–º—ã
            result['conditional_norms'].append({
                'condition': norm.condition,
                'norm': norm_data
            })
        else:
            # –ò–Ω–∞—á–µ - –≤ –æ—Å–Ω–æ–≤–Ω—ã–µ
            result['base_norms'].append(norm_data)

    return JsonResponse(result)


@require_GET
def get_employee_issued_siz(request, employee_id):
    """
    API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤—ã–¥–∞–Ω–Ω—ã—Ö –°–ò–ó —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±–æ—Ä–æ—Ç–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –ª–∏—á–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
    """
    employee = get_object_or_404(Employee, pk=employee_id)

    # –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—ã–¥–∞–Ω–Ω—ã—Ö –°–ò–ó
    # –ü–æ–∫–∞ —ç—Ç–æ –∑–∞–≥–ª—É—à–∫–∞, —Ç.–∫. —É –Ω–∞—Å –Ω–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –º–æ–¥–µ–ª–∏

    # TODO: –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –º–æ–¥–µ–ª—å –≤—ã–¥–∞—á–∏ –°–ò–ó
    issued_siz = []

    return JsonResponse({
        'employee_name': f"{employee.last_name} {employee.first_name}",
        'position': employee.position.position_name if employee.position else "",
        'issued_siz': issued_siz
    })


@require_GET
def get_siz_details(request, siz_id):
    """
    üîç API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –°–ò–ó
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π –≤ —Ñ–æ—Ä–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ—Ä–º
    """
    siz = get_object_or_404(SIZ, pk=siz_id)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –æ –°–ò–ó –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–µ
    result = {
        'id': siz.id,
        'name': siz.name,
        'classification': siz.classification,
        'unit': siz.unit,
        'wear_period': siz.wear_period,
        'wear_period_display': "–î–æ –∏–∑–Ω–æ—Å–∞" if siz.wear_period == 0 else f"{siz.wear_period} –º–µ—Å."
    }

    return JsonResponse(result)