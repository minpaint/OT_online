"""
üìÑ –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.
"""
import json
import datetime
from django.views.generic import FormView, DetailView, ListView, TemplateView
from django.contrib.auth.mixins import LoginRequiredMixin
from django.shortcuts import get_object_or_404, redirect, render
from django.http import HttpResponse, JsonResponse, FileResponse
from django.urls import reverse, reverse_lazy
from django.contrib import messages
from django.utils.translation import gettext as _
from django.views.decorators.http import require_POST
from django.utils import timezone

from directory.models import Employee
from directory.models.document_template import DocumentTemplate, GeneratedDocument
from directory.forms.document_forms import (
    DocumentSelectionForm, InternshipOrderForm, AdmissionOrderForm, DocumentPreviewForm
)
from directory.utils.docx_generator import (
    prepare_employee_context, generate_docx_from_template,
    generate_internship_order, generate_admission_order
)
from directory.utils.declension import (
    decline_full_name, decline_phrase, get_initials_from_name
)


class DocumentSelectionView(LoginRequiredMixin, FormView):
    """
    –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    """
    template_name = 'directory/documents/document_selection.html'
    form_class = DocumentSelectionForm

    def get_initial(self):
        initial = super().get_initial()
        employee_id = self.kwargs.get('employee_id')
        if employee_id:
            initial['employee_id'] = employee_id
        return initial

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        employee_id = self.kwargs.get('employee_id')
        if employee_id:
            context['employee'] = get_object_or_404(Employee, id=employee_id)
        context['title'] = _('–í—ã–±–æ—Ä —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞')
        return context

    def form_valid(self, form):
        employee_id = form.cleaned_data['employee_id']
        document_type = form.cleaned_data['document_type']

        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ñ–æ—Ä–º—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        if document_type == 'internship_order':
            return redirect('directory:documents:internship_order_form', employee_id=employee_id)
        elif document_type == 'admission_order':
            return redirect('directory:documents:admission_order_form', employee_id=employee_id)
        elif document_type == 'knowledge_protocol':
            return redirect('directory:documents:knowledge_protocol_form', employee_id=employee_id)
        elif document_type == 'doc_familiarization':
            return redirect('directory:documents:doc_familiarization_form', employee_id=employee_id)

        # –ï—Å–ª–∏ —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ —Ñ–æ—Ä–º—É –≤—ã–±–æ—Ä–∞
        messages.error(self.request, _('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞'))
        return redirect('directory:documents:document_selection', employee_id=employee_id)


class InternshipOrderFormView(LoginRequiredMixin, FormView):
    """
    –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —Ñ–æ—Ä–º—ã —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è –æ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–µ
    """
    template_name = 'directory/documents/internship_order_form.html'
    form_class = InternshipOrderForm

    def get_employee(self):
        employee_id = self.kwargs.get('employee_id')
        return get_object_or_404(Employee, id=employee_id)

    def get_initial(self):
        initial = super().get_initial()
        employee = self.get_employee()

        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–æ—Ä–º—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        context = prepare_employee_context(employee)

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏
        internship_leader = None
        if employee.department:
            internship_leader = employee.department.employees.filter(
                position__can_be_internship_leader=True
            ).first()

        # –ó–∞–ø–æ–ª–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
        initial.update({
            'organization_name': context['organization_name'],
            'fio_dative': context['fio_dative'],
            'position_dative': context['position_dative'],
            'department': context['department'],
            'subdivision': context['subdivision'],
            'internship_duration': context.get('internship_duration', '2'),
            'order_date': timezone.now().date(),
            'location': context.get('location', '–≥. –ú–∏–Ω—Å–∫'),
            'employee_name_initials': get_initials_from_name(employee.full_name_nominative),
        })

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏, –µ—Å–ª–∏ –æ–Ω –Ω–∞–π–¥–µ–Ω
        if internship_leader:
            initial.update({
                'head_of_internship_position': internship_leader.position.position_name if internship_leader.position else "",
                'head_of_internship_name': internship_leader.full_name_nominative,
                'head_of_internship_name_initials': get_initials_from_name(internship_leader.full_name_nominative),
            })

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –±–µ—Ä–µ–º –∏–∑ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏)
        if employee.organization:
            initial['director_name'] = "–ò.–ò. –ö–æ—Ä–∂–æ–≤"  # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –∏–∑ –¥–∞–Ω–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
            initial['director_position'] = "–î–∏—Ä–µ–∫—Ç–æ—Ä"

        return initial

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        employee = self.get_employee()
        context['employee'] = employee
        context['title'] = _('–†–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–µ –æ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–µ')
        return context

    def get_form_kwargs(self):
        kwargs = super().get_form_kwargs()
        kwargs['employee'] = self.get_employee()
        return kwargs

    def form_valid(self, form):
        employee = self.get_employee()

        # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        if 'preview' in self.request.POST:
            # –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            document_data = form.cleaned_data
            document_data['employee_id'] = employee.id

            # –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º–µ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            preview_form = DocumentPreviewForm(initial={
                'document_data': json.dumps(document_data, default=str),
                'document_type': 'internship_order',
                'employee_id': employee.id
            })

            # –†–µ–Ω–¥–µ—Ä–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            return render(
                self.request,
                'directory/documents/document_preview.html',
                {
                    'form': preview_form,
                    'document_data': document_data,
                    'document_type': 'internship_order',
                    'employee': employee,
                    'title': _('–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è –æ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–µ')
                }
            )

        # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        elif 'generate' in self.request.POST:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
            custom_context = form.cleaned_data
            generated_doc = generate_internship_order(
                employee,
                self.request.user,
                custom_context
            )

            if generated_doc:
                messages.success(
                    self.request,
                    _('–†–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–µ –æ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–µ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ')
                )
                return redirect('directory:documents:document_detail', pk=generated_doc.id)
            else:
                messages.error(
                    self.request,
                    _('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞')
                )
                return self.form_invalid(form)

        return super().form_valid(form)


class AdmissionOrderFormView(LoginRequiredMixin, FormView):
    """
    –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —Ñ–æ—Ä–º—ã —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è –æ –¥–æ–ø—É—Å–∫–µ –∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ
    """
    template_name = 'directory/documents/admission_order_form.html'
    form_class = AdmissionOrderForm

    def get_employee(self):
        employee_id = self.kwargs.get('employee_id')
        return get_object_or_404(Employee, id=employee_id)

    def get_initial(self):
        initial = super().get_initial()
        employee = self.get_employee()

        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–æ—Ä–º—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        context = prepare_employee_context(employee)

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ (—Ç–æ—Ç –∂–µ, —á—Ç–æ –∏ –¥–ª—è —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏)
        internship_leader = None
        if employee.department:
            internship_leader = employee.department.employees.filter(
                position__can_be_internship_leader=True
            ).first()

        # –ó–∞–ø–æ–ª–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
        initial.update({
            'organization_name': context['organization_name'],
            'fio_nominative': context['fio_nominative'],
            'position_nominative': context['position_nominative'],
            'department': context['department'],
            'subdivision': context['subdivision'],
            'order_date': timezone.now().date(),
            'location': context.get('location', '–≥. –ú–∏–Ω—Å–∫'),
            'employee_name_initials': get_initials_from_name(employee.full_name_nominative),
        })

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ, –µ—Å–ª–∏ –æ–Ω –Ω–∞–π–¥–µ–Ω
        if internship_leader:
            initial.update({
                'head_of_internship_name_initials': get_initials_from_name(internship_leader.full_name_nominative),
            })

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –±–µ—Ä–µ–º –∏–∑ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏)
        if employee.organization:
            initial['director_name'] = "–ò.–ò. –ö–æ—Ä–∂–æ–≤"  # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –∏–∑ –¥–∞–Ω–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
            initial['director_position'] = "–î–∏—Ä–µ–∫—Ç–æ—Ä"

        return initial

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        employee = self.get_employee()
        context['employee'] = employee
        context['title'] = _('–†–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–µ –æ –¥–æ–ø—É—Å–∫–µ –∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ')
        return context

    def get_form_kwargs(self):
        kwargs = super().get_form_kwargs()
        kwargs['employee'] = self.get_employee()
        return kwargs

    def form_valid(self, form):
        employee = self.get_employee()

        # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        if 'preview' in self.request.POST:
            # –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            document_data = form.cleaned_data
            document_data['employee_id'] = employee.id

            # –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º–µ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            preview_form = DocumentPreviewForm(initial={
                'document_data': json.dumps(document_data, default=str),
                'document_type': 'admission_order',
                'employee_id': employee.id
            })

            # –†–µ–Ω–¥–µ—Ä–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            return render(
                self.request,
                'directory/documents/document_preview.html',
                {
                    'form': preview_form,
                    'document_data': document_data,
                    'document_type': 'admission_order',
                    'employee': employee,
                    'title': _('–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è –æ –¥–æ–ø—É—Å–∫–µ –∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ')
                }
            )

        # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        elif 'generate' in self.request.POST:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
            custom_context = form.cleaned_data
            generated_doc = generate_admission_order(
                employee,
                self.request.user,
                custom_context
            )

            if generated_doc:
                messages.success(
                    self.request,
                    _('–†–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–µ –æ –¥–æ–ø—É—Å–∫–µ –∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ')
                )
                return redirect('directory:documents:document_detail', pk=generated_doc.id)
            else:
                messages.error(
                    self.request,
                    _('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞')
                )
                return self.form_invalid(form)

        return super().form_valid(form)


class DocumentPreviewView(LoginRequiredMixin, FormView):
    """
    –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–µ—Ä–µ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π
    """
    template_name = 'directory/documents/document_preview.html'
    form_class = DocumentPreviewForm

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)

        document_data = json.loads(self.request.POST.get('document_data', '{}'))
        document_type = self.request.POST.get('document_type')
        employee_id = document_data.get('employee_id')

        if employee_id:
            employee = get_object_or_404(Employee, id=employee_id)
            context['employee'] = employee

        context['document_data'] = document_data
        context['document_type'] = document_type

        if document_type == 'internship_order':
            context['title'] = _('–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è –æ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–µ')
        elif document_type == 'admission_order':
            context['title'] = _('–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏—è –æ –¥–æ–ø—É—Å–∫–µ –∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ')

        return context

    def form_valid(self, form):
        document_data = json.loads(form.cleaned_data['document_data'])
        document_type = form.cleaned_data['document_type']
        employee_id = form.cleaned_data['employee_id']

        employee = get_object_or_404(Employee, id=employee_id)

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç
        generated_doc = None
        if document_type == 'internship_order':
            generated_doc = generate_internship_order(
                employee,
                self.request.user,
                document_data
            )
            success_message = _('–†–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–µ –æ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–µ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ')
        elif document_type == 'admission_order':
            generated_doc = generate_admission_order(
                employee,
                self.request.user,
                document_data
            )
            success_message = _('–†–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–µ –æ –¥–æ–ø—É—Å–∫–µ –∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ')

        if generated_doc:
            messages.success(self.request, success_message)
            return redirect('directory:documents:document_detail', pk=generated_doc.id)
        else:
            messages.error(self.request, _('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞'))
            return self.form_invalid(form)


class GeneratedDocumentListView(LoginRequiredMixin, ListView):
    """
    –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —Å–ø–∏—Å–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    """
    model = GeneratedDocument
    template_name = 'directory/documents/document_list.html'
    context_object_name = 'documents'
    paginate_by = 20

    def get_queryset(self):
        qs = super().get_queryset()

        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        employee_id = self.request.GET.get('employee')
        if employee_id:
            qs = qs.filter(employee_id=employee_id)

        doc_type = self.request.GET.get('type')
        if doc_type and doc_type != 'all':
            qs = qs.filter(template__document_type=doc_type)

        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è (—Å–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ)
        return qs.order_by('-created_at')

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context['title'] = _('–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã')

        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
        context['employees'] = Employee.objects.all().order_by('full_name_nominative')
        context['document_types'] = DocumentTemplate.DOCUMENT_TYPES

        # –¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
        context['selected_employee'] = self.request.GET.get('employee', '')
        context['selected_type'] = self.request.GET.get('type', 'all')

        return context


class GeneratedDocumentDetailView(LoginRequiredMixin, DetailView):
    """
    –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    """
    model = GeneratedDocument
    template_name = 'directory/documents/document_detail.html'
    context_object_name = 'document'

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context['title'] = _('–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞')
        return context


def document_download(request, pk):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    """
    document = get_object_or_404(GeneratedDocument, pk=pk)

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –¥–ª—è —á—Ç–µ–Ω–∏—è
    file_path = document.document_file.path

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–∞–π–ª –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    response = FileResponse(open(file_path, 'rb'))
    response['Content-Disposition'] = f'attachment; filename="{document.document_file.name.split("/")[-1]}"'
    return response


@require_POST
def update_preview_data(request):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ AJAX-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    """
    try:
        data = json.loads(request.body)
        return JsonResponse({'success': True, 'data': data})
    except Exception as e:
        return JsonResponse({'success': False, 'error': str(e)}, status=400)