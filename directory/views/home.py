from django.views.generic import TemplateView
from django.contrib.auth.mixins import LoginRequiredMixin
from django.shortcuts import render, redirect
from django.contrib import messages
from django.db.models import Prefetch, Q
from django.core.paginator import Paginator, EmptyPage, PageNotAnInteger

from directory.models import (
    Organization,
    StructuralSubdivision,
    Department,
    Employee,
    Position
)


class HomePageView(LoginRequiredMixin, TemplateView):
    """
    üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–º —Å–ø–∏—Å–∫–æ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤

    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π, –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π,
    –æ—Ç–¥–µ–ª–æ–≤ –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –≤—ã–±–æ—Ä–∞ —á–µ—Ä–µ–∑ —á–µ–∫–±–æ–∫—Å—ã.
    """
    template_name = 'directory/home.html'

    def get_context_data(self, **kwargs):
        """üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —à–∞–±–ª–æ–Ω–∞"""
        context = super().get_context_data(**kwargs)
        context['title'] = 'üè† –ì–ª–∞–≤–Ω–∞—è'

        # üîç –ü–æ–ª—É—á–∞–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –≤—Å–µ –¥–ª—è —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = self.request.user

        # üÜï –õ–æ–≥–∏–∫–∞ –¥–ª—è —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
        if user.is_superuser:
            allowed_orgs = Organization.objects.all()
        elif hasattr(user, 'profile'):
            allowed_orgs = user.profile.organizations.all()
        else:
            allowed_orgs = Organization.objects.none()

        # üîç –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø–æ–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        search_query = self.request.GET.get('search', '')
        selected_status = self.request.GET.get('status', '')
        show_fired = self.request.GET.get('show_fired') == 'true'

        # üë§ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –±–ª–æ–∫–∞
        candidate_employees = Employee.objects.filter(status='candidate').select_related('position')

        # –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞–º
        if not user.is_superuser and hasattr(user, 'profile'):
            candidate_employees = candidate_employees.filter(
                organization__in=user.profile.organizations.all()
            )

        # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–∏—Å–∫, –ø—Ä–∏–º–µ–Ω—è–µ–º –µ–≥–æ –∏ –∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞–º
        if search_query:
            candidate_employees = candidate_employees.filter(
                Q(full_name_nominative__icontains=search_query) |
                Q(position__position_name__icontains=search_query)
            )

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
        context['candidate_employees'] = candidate_employees
        context['statuses'] = Employee.EMPLOYEE_STATUS_CHOICES
        context['selected_status'] = selected_status
        context['show_fired'] = show_fired

        if search_query:
            # –î–ª—è –ø–æ–∏—Å–∫–∞ —Å–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
            all_organizations = allowed_orgs

            # –§–∏–ª—å—Ç—Ä—É–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É
            # –ò—Å–∫–ª—é—á–∞–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –∏ —É–≤–æ–ª–µ–Ω–Ω—ã—Ö (–µ—Å–ª–∏ show_fired –Ω–µ –≤–∫–ª—é—á–µ–Ω–æ)
            employee_filter = Q(full_name_nominative__icontains=search_query) | Q(
                position__position_name__icontains=search_query)
            status_filter = ~Q(status='candidate')
            if not show_fired:
                status_filter &= ~Q(status='fired')

            # –°—Ç–∞—Ç—É—Å —Ñ–∏–ª—å—Ç—Ä –∏–∑ UI
            if selected_status:
                status_filter &= Q(status=selected_status)

            filtered_employees = Employee.objects.filter(status_filter & employee_filter).select_related(
                'organization', 'subdivision', 'department', 'position'
            )

            # –°–æ–±–∏—Ä–∞–µ–º ID –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π, –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π –∏ –æ—Ç–¥–µ–ª–æ–≤ —Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏
            org_ids = set(filtered_employees.values_list('organization_id', flat=True))
            sub_ids = set(e.subdivision_id for e in filtered_employees if e.subdivision_id)
            dept_ids = set(e.department_id for e in filtered_employees if e.department_id)

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π —Ç–æ–ª—å–∫–æ —Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏
            allowed_orgs = allowed_orgs.filter(id__in=org_ids)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –¥–ª—è —à–∞–±–ª–æ–Ω–∞
            context['search_query'] = search_query
            context['search_results'] = True
            context['filtered_employees'] = filtered_employees
            context['total_found'] = filtered_employees.count()

        # üìù –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥—Ä–µ–≤–æ–≤–∏–¥–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        organizations = []

        # üìä –î–ª—è –∫–∞–∂–¥–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—É—á–∞–µ–º –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        for org in allowed_orgs:
            # üìã –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
            subdivisions = StructuralSubdivision.objects.filter(
                organization=org
            ).prefetch_related(
                Prefetch(
                    'departments',
                    queryset=Department.objects.all()
                )
            )

            # üë• –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –±–µ–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è (–Ω–∞–ø—Ä—è–º—É—é –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏),
            # –∏—Å–∫–ª—é—á–∞—è –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –∏ —É–≤–æ–ª–µ–Ω–Ω—ã—Ö (–µ—Å–ª–∏ show_fired –Ω–µ –≤–∫–ª—é—á–µ–Ω–æ)
            org_employees_filter = Q(organization=org, subdivision__isnull=True) & ~Q(status='candidate')
            if not show_fired:
                org_employees_filter &= ~Q(status='fired')

            if selected_status:
                org_employees_filter &= Q(status=selected_status)

            org_employees = Employee.objects.filter(org_employees_filter).select_related('position')

            # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å, —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
            if search_query:
                org_employees = org_employees.filter(
                    Q(full_name_nominative__icontains=search_query) |
                    Q(position__position_name__icontains=search_query)
                )

            # üè¢ –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
            org_data = {
                'id': org.id,
                'name': org.full_name_ru,
                'short_name': org.short_name_ru,
                'employees': list(org_employees),
                'subdivisions': []
            }

            # üè≠ –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –ø–æ–ª—É—á–∞–µ–º –æ—Ç–¥–µ–ª—ã –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
            for subdivision in subdivisions:
                # üë• –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –±–µ–∑ –æ—Ç–¥–µ–ª–∞
                # –∏—Å–∫–ª—é—á–∞—è –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –∏ —É–≤–æ–ª–µ–Ω–Ω—ã—Ö (–µ—Å–ª–∏ show_fired –Ω–µ –≤–∫–ª—é—á–µ–Ω–æ)
                sub_employees_filter = Q(subdivision=subdivision, department__isnull=True) & ~Q(status='candidate')
                if not show_fired:
                    sub_employees_filter &= ~Q(status='fired')

                if selected_status:
                    sub_employees_filter &= Q(status=selected_status)

                sub_employees = Employee.objects.filter(sub_employees_filter).select_related('position')

                # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å, —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
                if search_query:
                    sub_employees = sub_employees.filter(
                        Q(full_name_nominative__icontains=search_query) |
                        Q(position__position_name__icontains=search_query)
                    )

                # üè≠ –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
                sub_data = {
                    'id': subdivision.id,
                    'name': subdivision.name,
                    'employees': list(sub_employees),
                    'departments': []
                }

                # üìÇ –î–ª—è –∫–∞–∂–¥–æ–≥–æ –æ—Ç–¥–µ–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
                for department in subdivision.departments.all():
                    # üë• –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –æ—Ç–¥–µ–ª–∞
                    # –∏—Å–∫–ª—é—á–∞—è –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –∏ —É–≤–æ–ª–µ–Ω–Ω—ã—Ö (–µ—Å–ª–∏ show_fired –Ω–µ –≤–∫–ª—é—á–µ–Ω–æ)
                    dept_employees_filter = Q(department=department) & ~Q(status='candidate')
                    if not show_fired:
                        dept_employees_filter &= ~Q(status='fired')

                    if selected_status:
                        dept_employees_filter &= Q(status=selected_status)

                    dept_employees = Employee.objects.filter(dept_employees_filter).select_related('position')

                    # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å, —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
                    if search_query:
                        dept_employees = dept_employees.filter(
                            Q(full_name_nominative__icontains=search_query) |
                            Q(position__position_name__icontains=search_query)
                        )

                    # üìÇ –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–¥–µ–ª–∞
                    dept_data = {
                        'id': department.id,
                        'name': department.name,
                        'employees': list(dept_employees)
                    }

                    sub_data['departments'].append(dept_data)

                # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤ –Ω–µ–º –µ—Å—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ (—É—á–∏—Ç—ã–≤–∞—è –ø–æ–∏—Å–∫)
                if search_query:
                    if sub_employees.count() > 0 or any(len(dept['employees']) > 0 for dept in sub_data['departments']):
                        org_data['subdivisions'].append(sub_data)
                else:
                    org_data['subdivisions'].append(sub_data)

            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –ø—É—Å—Ç–∞—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–æ–∏—Å–∫–∞
            if not search_query or org_employees.count() > 0 or any(
                    len(sub['employees']) > 0 for sub in org_data['subdivisions']):
                organizations.append(org_data)

        # üìÑ –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
        page = self.request.GET.get('page', 1)
        paginator = Paginator(organizations, 5)  # –ü–æ 5 –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É

        try:
            organizations_page = paginator.page(page)
        except PageNotAnInteger:
            organizations_page = paginator.page(1)
        except EmptyPage:
            organizations_page = paginator.page(paginator.num_pages)

        context['organizations'] = organizations_page
        context['paginator'] = paginator
        context['is_paginated'] = paginator.num_pages > 1

        return context