# üìÅ directory/views/home.py

from django.views.generic import TemplateView
from django.contrib.auth.mixins import LoginRequiredMixin
from django.shortcuts import render, redirect
from django.contrib import messages
from django.db.models import Prefetch, Q

from directory.models import (
    Organization,
    StructuralSubdivision,
    Department,
    Employee,
    Position
)


class HomePageView(LoginRequiredMixin, TemplateView):
    """
    üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–º —Å–ø–∏—Å–∫–æ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤

    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π, –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π,
    –æ—Ç–¥–µ–ª–æ–≤ –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –≤—ã–±–æ—Ä–∞ —á–µ—Ä–µ–∑ —á–µ–∫–±–æ–∫—Å—ã.
    """
    template_name = 'directory/home.html'

    def get_context_data(self, **kwargs):
        """üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —à–∞–±–ª–æ–Ω–∞"""
        context = super().get_context_data(**kwargs)
        context['title'] = 'üè† –ì–ª–∞–≤–Ω–∞—è'

        # üîç –ü–æ–ª—É—á–∞–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = self.request.user
        if hasattr(user, 'profile'):
            allowed_orgs = user.profile.organizations.all()
        else:
            allowed_orgs = Organization.objects.none()

        # üìù –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥—Ä–µ–≤–æ–≤–∏–¥–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        organizations = []

        # üìä –î–ª—è –∫–∞–∂–¥–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—É—á–∞–µ–º –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        for org in allowed_orgs:
            # üìã –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
            subdivisions = StructuralSubdivision.objects.filter(
                organization=org
            ).prefetch_related(
                Prefetch(
                    'departments',
                    queryset=Department.objects.all()
                )
            )

            # üë• –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –±–µ–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è (–Ω–∞–ø—Ä—è–º—É—é –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏)
            org_employees = Employee.objects.filter(
                organization=org,
                subdivision__isnull=True
            ).select_related('position')

            # üè¢ –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
            org_data = {
                'id': org.id,
                'name': org.full_name_ru,
                'short_name': org.short_name_ru,
                'employees': list(org_employees),
                'subdivisions': []
            }

            # üè≠ –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –ø–æ–ª—É—á–∞–µ–º –æ—Ç–¥–µ–ª—ã –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
            for subdivision in subdivisions:
                # üë• –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –±–µ–∑ –æ—Ç–¥–µ–ª–∞
                sub_employees = Employee.objects.filter(
                    subdivision=subdivision,
                    department__isnull=True
                ).select_related('position')

                # üè≠ –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
                sub_data = {
                    'id': subdivision.id,
                    'name': subdivision.name,
                    'employees': list(sub_employees),
                    'departments': []
                }

                # üìÇ –î–ª—è –∫–∞–∂–¥–æ–≥–æ –æ—Ç–¥–µ–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
                for department in subdivision.departments.all():
                    # üë• –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –æ—Ç–¥–µ–ª–∞
                    dept_employees = Employee.objects.filter(
                        department=department
                    ).select_related('position')

                    # üìÇ –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–¥–µ–ª–∞
                    dept_data = {
                        'id': department.id,
                        'name': department.name,
                        'employees': list(dept_employees)
                    }

                    sub_data['departments'].append(dept_data)

                org_data['subdivisions'].append(sub_data)

            organizations.append(org_data)

        context['organizations'] = organizations
        return context