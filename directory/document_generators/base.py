# directory/document_generators/base.py
"""
üìÑ –ë–∞–∑–æ–≤—ã–π –º–æ–¥—É–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤

–°–æ–¥–µ—Ä–∂–∏—Ç –æ–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —à–∞–±–ª–æ–Ω–∞–º–∏ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º.
"""
import os
import io
import logging
from typing import Dict, Any, Optional
import datetime
import traceback
from docxtpl import DocxTemplate
from django.conf import settings
from django.core.files.base import ContentFile

from directory.models.document_template import DocumentTemplate, GeneratedDocument
from directory.utils.declension import decline_full_name, decline_phrase, get_initials_from_name

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)


def get_document_template(document_type, employee=None) -> Optional[DocumentTemplate]:
    """
    –ü–æ–ª—É—á–∞–µ—Ç —à–∞–±–ª–æ–Ω –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å —É—á–µ—Ç–æ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.

    –ü–æ—Ä—è–¥–æ–∫ –ø–æ–∏—Å–∫–∞:
    1. –ï—Å–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –∏—â–µ—Ç—Å—è —à–∞–±–ª–æ–Ω, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫ —ç—Ç–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏.
    2. –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—â–µ—Ç—Å—è —ç—Ç–∞–ª–æ–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω (is_default=True).
    3. –ï—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è None.

    Args:
        document_type (str): –¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞.
        employee (Employee, optional): –°–æ—Ç—Ä—É–¥–Ω–∏–∫, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è —à–∞–±–ª–æ–Ω.

    Returns:
        DocumentTemplate: –û–±—ä–µ–∫—Ç —à–∞–±–ª–æ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ None, –µ—Å–ª–∏ —à–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω.
    """
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞
    templates = DocumentTemplate.objects.filter(
        document_type=document_type,
        is_active=True
    )

    # –ï—Å–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –∏—â–µ–º —à–∞–±–ª–æ–Ω –¥–ª—è —ç—Ç–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    if employee and employee.organization:
        org_template = templates.filter(organization=employee.organization).first()
        if org_template:
            logger.info(f"–ù–∞–π–¥–µ–Ω —à–∞–±–ª–æ–Ω –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ {employee.organization.short_name_ru}: {org_template.name}")
            return org_template

    # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω —à–∞–±–ª–æ–Ω –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –∏—â–µ–º —ç—Ç–∞–ª–æ–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω
    default_template = templates.filter(is_default=True).first()
    if default_template:
        logger.info(f"–ù–∞–π–¥–µ–Ω —ç—Ç–∞–ª–æ–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω: {default_template.name}")
        return default_template

    logger.error(f"–®–∞–±–ª–æ–Ω –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Ç–∏–ø–∞ '{document_type}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
    return None


def prepare_employee_context(employee) -> Dict[str, Any]:
    """
    –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –¥–ª—è —à–∞–±–ª–æ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞.
    Args:
        employee: –û–±—ä–µ–∫—Ç –º–æ–¥–µ–ª–∏ Employee
    Returns:
        Dict[str, Any]: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
    """
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
    now = datetime.datetime.now()
    date_str = now.strftime("%d.%m.%Y")
    day = now.strftime("%d")
    month = now.strftime("%m")
    year = now.strftime("%Y")
    year_short = now.strftime("%y")

    # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    context = {
        # –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        'employee': employee, # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        # –§–ò–û –≤ —Ä–∞–∑–Ω—ã—Ö –ø–∞–¥–µ–∂–∞—Ö
        'fio_nominative': employee.full_name_nominative,
        'fio_genitive': decline_full_name(employee.full_name_nominative, 'gent'),
        'fio_dative': decline_full_name(employee.full_name_nominative, 'datv'),
        'fio_accusative': decline_full_name(employee.full_name_nominative, 'accs'),
        'fio_instrumental': decline_full_name(employee.full_name_nominative, 'ablt'),
        'fio_prepositional': decline_full_name(employee.full_name_nominative, 'loct'),
        # –°–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –§–ò–û (–§–∞–º–∏–ª–∏—è –ò.–û.)
        'fio_initials': get_initials_from_name(employee.full_name_nominative),
        # –î–æ–ª–∂–Ω–æ—Å—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö –ø–∞–¥–µ–∂–∞—Ö
        'position_nominative': employee.position.position_name if employee.position else "",
        'position_genitive': decline_phrase(employee.position.position_name, 'gent') if employee.position else "",
        'position_dative': decline_phrase(employee.position.position_name, 'datv') if employee.position else "",
        'position_accusative': decline_phrase(employee.position.position_name, 'accs') if employee.position else "",
        'position_instrumental': decline_phrase(employee.position.position_name, 'ablt') if employee.position else "",
        'position_prepositional': decline_phrase(employee.position.position_name, 'loct') if employee.position else "",
        # –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∏ –æ—Ç–¥–µ–ª
        'department': employee.department.name if employee.department else "",
        'department_genitive': decline_phrase(employee.department.name, 'gent') if employee.department else "",
        'department_dative': decline_phrase(employee.department.name, 'datv') if employee.department else "",
        'subdivision': employee.subdivision.name if employee.subdivision else "",
        'subdivision_genitive': decline_phrase(employee.subdivision.name, 'gent') if employee.subdivision else "",
        'subdivision_dative': decline_phrase(employee.subdivision.name, 'datv') if employee.subdivision else "",
        # –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è
        'organization_name': employee.organization.short_name_ru if employee.organization else "",  # –û—Å—Ç–∞–≤–ª—è–µ–º –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂
        'organization_name_genitive': decline_phrase(employee.organization.short_name_ru, 'gent') if employee.organization else "",
        'organization_name_dative': decline_phrase(employee.organization.short_name_ru, 'datv') if employee.organization else "",
        'organization_name_accusative': decline_phrase(employee.organization.short_name_ru, 'accs') if employee.organization else "",
        'organization_name_instrumental': decline_phrase(employee.organization.short_name_ru, 'ablt') if employee.organization else "",
        'organization_name_prepositional': decline_phrase(employee.organization.short_name_ru, 'loct') if employee.organization else "",

        'organization_full_name': employee.organization.full_name_ru if employee.organization else "",  # –û—Å—Ç–∞–≤–ª—è–µ–º –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂
        'organization_full_name_genitive': decline_phrase(employee.organization.full_name_ru, 'gent') if employee.organization else "",
        'organization_full_name_dative': decline_phrase(employee.organization.full_name_ru, 'datv') if employee.organization else "",
        'organization_full_name_accusative': decline_phrase(employee.organization.full_name_ru, 'accs') if employee.organization else "",
        'organization_full_name_instrumental': decline_phrase(employee.organization.full_name_ru, 'ablt') if employee.organization else "",
        'organization_full_name_prepositional': decline_phrase(employee.organization.full_name_ru, 'loct') if employee.organization else "",

        # –î–∞—Ç—ã –∏ –Ω–æ–º–µ—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        'current_date': date_str,
        'current_day': day,
        'current_month': month,
        'current_year': year,
        'current_year_short': year_short,
        # –ü–æ–ª—è –¥–ª—è –Ω–æ–º–µ—Ä–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ - –∑–∞–ø–æ–ª–Ω—è—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ
        'order_number': "",
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        'internship_duration': getattr(employee.position, 'internship_period_days', 2) if employee.position else "2",
        # –ú–µ—Å—Ç–æ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è (–∏–∑ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏)
        'location': employee.organization.location if employee.organization and hasattr(employee.organization, 'location') and employee.organization.location else "–≥. –ú–∏–Ω—Å–∫",
        # –ü–æ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —à–∞–±–ª–æ–Ω–µ
        'employee_name_initials': get_initials_from_name(employee.full_name_nominative),
    }

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∏—Å–∫ –ø–æ–¥–ø–∏—Å–∞–Ω—Ç–∞ —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–π
    # TODO: –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —ç—Ç—É –ª–æ–≥–∏–∫—É –≤–æ views –∏–ª–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    from directory.views.documents.utils import get_document_signer

    signer, level, found = get_document_signer(employee)
    if found and signer:
        context.update({
            'director_position': signer.position.position_name if signer.position else "–î–∏—Ä–µ–∫—Ç–æ—Ä",
            'director_name': signer.full_name_nominative,
            'director_name_initials': get_initials_from_name(signer.full_name_nominative),
            'director_level': level,  # –ú–æ–∂–µ—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        })
    else:
        # –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
        context.update({
            'director_position': "–î–∏—Ä–µ–∫—Ç–æ—Ä",
            'director_name': "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á",
            'director_name_initials': "–ò.–ò. –ò–≤–∞–Ω–æ–≤",
        })

    return context

def generate_docx_from_template(template: DocumentTemplate, context: Dict[str, Any],
                                employee, user=None) -> Optional[GeneratedDocument]:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç DOCX –Ω–∞ –æ—Å–Ω–æ–≤–µ —à–∞–±–ª–æ–Ω–∞ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∞–Ω–Ω—ã—Ö.
    Args:
        template (DocumentTemplate): –û–±—ä–µ–∫—Ç —à–∞–±–ª–æ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        context (Dict[str, Any]): –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
        employee: –û–±—ä–µ–∫—Ç –º–æ–¥–µ–ª–∏ Employee
        user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å–æ–∑–¥–∞—é—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    Returns:
        Optional[GeneratedDocument]: –û–±—ä–µ–∫—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
    """
    try:
        template_path = template.template_file.path
        logger.info(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —à–∞–±–ª–æ–Ω: {template.name} (ID: {template.id}), –ø—É—Ç—å: {template_path}")

        if not os.path.exists(template_path):
            logger.error(f"–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {template_path}")
            raise FileNotFoundError(f"–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {template_path}")

        file_size = os.path.getsize(template_path)
        if file_size == 0:
            logger.error(f"–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –ø—É—Å—Ç: {template_path}")
            raise ValueError(f"–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –∏–º–µ–µ—Ç –Ω—É–ª–µ–≤–æ–π —Ä–∞–∑–º–µ—Ä: {template_path}")

        logger.info(f"–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –≥–æ—Ç–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {template_path}, —Ä–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç")

        try:
            doc = DocxTemplate(template_path)
            logger.info("–®–∞–±–ª–æ–Ω —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ DocxTemplate")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —à–∞–±–ª–æ–Ω–∞ –≤ DocxTemplate: {str(e)}")
            raise ValueError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —à–∞–±–ª–æ–Ω–∞ –≤ DocxTemplate: {str(e)}")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–π –±–æ–ª—å—à–µ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –∑–¥–µ—Å—å, –Ω–æ –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        # common_keys = [...] # –°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π
        # missing_keys = [key for key in common_keys if key not in context]
        # if missing_keys:
        #     logger.warning(f"–í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∫–ª—é—á–∏: {missing_keys}")

        try:
            # –£–¥–∞–ª—è–µ–º –æ–±—ä–µ–∫—Ç employee –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º —Å —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
            context_to_render = context.copy()
            context_to_render.pop('employee', None)
            doc.render(context_to_render)
            logger.info("–®–∞–±–ª–æ–Ω —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω –¥–∞–Ω–Ω—ã–º–∏")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏: {str(e)}")
            logger.error(f"–ö–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ: {context_to_render.keys()}") # –õ–æ–≥ –∫–ª—é—á–µ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            raise ValueError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏: {str(e)}")

        filename = f"{template.document_type}_{employee.full_name_nominative.split()[0]}_{datetime.datetime.now().strftime('%Y%m%d_%H%M%S')}.docx"
        logger.info(f"–ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {filename}")

        docx_buffer = io.BytesIO()
        doc.save(docx_buffer)
        docx_buffer.seek(0)

        file_content = docx_buffer.getvalue()
        if len(file_content) == 0:
            logger.error(f"–°–æ–∑–¥–∞–Ω –ø—É—Å—Ç–æ–π DOCX —Ñ–∞–π–ª –¥–ª—è {filename}")
            raise ValueError("–°–æ–∑–¥–∞–Ω –ø—É—Å—Ç–æ–π DOCX —Ñ–∞–π–ª")
        else:
            logger.info(f"–°–æ–∑–¥–∞–Ω DOCX —Ñ–∞–π–ª {filename}, —Ä–∞–∑–º–µ—Ä: {len(file_content)} –±–∞–π—Ç")

        generated_doc = GeneratedDocument()
        generated_doc.template = template
        generated_doc.employee = employee
        generated_doc.created_by = user

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –±–µ–∑ –æ–±—ä–µ–∫—Ç–∞ employee
        generated_doc.document_data = context_to_render

        try:
            generated_doc.document_file.save(filename, ContentFile(file_content))
            generated_doc.save()
            logger.info(f"–î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å ID: {generated_doc.id}")

            file_path = os.path.join(settings.MEDIA_ROOT, str(generated_doc.document_file))
            if os.path.exists(file_path) and os.path.getsize(file_path) > 0:
                logger.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ –ø—É—Ç–∏ {file_path}, —Ä–∞–∑–º–µ—Ä: {os.path.getsize(file_path)} –±–∞–π—Ç")
            else:
                logger.warning(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç –ø–æ –ø—É—Ç–∏ {file_path}")

            return generated_doc
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {str(e)}")
            raise ValueError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {str(e)}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {str(e)}")
        logger.error(traceback.format_exc())
        return None
