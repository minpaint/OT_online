# directory/document_generators/journal_example_generator.py
"""
üìÑ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è –æ–±—Ä–∞–∑—Ü–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞
"""
import logging
import traceback
from typing import Dict, Any, Optional

from directory.models.document_template import GeneratedDocument
from directory.document_generators.base import (
    get_document_template, prepare_employee_context, generate_docx_from_template
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

def generate_journal_example(employee, user=None, custom_context: Optional[Dict[str, Any]] = None) -> Optional[GeneratedDocument]:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–∑–µ—Ü –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞.
    Args:
        employee: –û–±—ä–µ–∫—Ç –º–æ–¥–µ–ª–∏ Employee
        user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å–æ–∑–¥–∞—é—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        custom_context: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    Returns:
        Optional[GeneratedDocument]: –û–±—ä–µ–∫—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
    """
    try:
        template = get_document_template('journal_example', employee)
        if not template:
            logger.error("–ê–∫—Ç–∏–≤–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –æ–±—Ä–∞–∑—Ü–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            raise ValueError("–ê–∫—Ç–∏–≤–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –æ–±—Ä–∞–∑—Ü–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")

        context = prepare_employee_context(employee)

        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –æ–±—Ä–∞–∑—Ü–∞ –∂—É—Ä–Ω–∞–ª–∞ –ø–æ–ª—è
        context.setdefault('journal_name', "–ñ—É—Ä–Ω–∞–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂–µ–π –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞") # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        context.setdefault('journal_sample_date', context.get('current_date'))

        if custom_context:
            context.update(custom_context)
            logger.info(f"–ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–æ–ø–æ–ª–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏: {list(custom_context.keys())}")

        logger.info(f"–ò—Ç–æ–≥–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞–∑—Ü–∞ –∂—É—Ä–Ω–∞–ª–∞: {list(context.keys())}")

        result = generate_docx_from_template(template, context, employee, user)
        if result:
            logger.info(f"–û–±—Ä–∞–∑–µ—Ü –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: {result.id}")
            return result
        else:
            logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–∑—Ü–∞ –∂—É—Ä–Ω–∞–ª–∞: —Ñ—É–Ω–∫—Ü–∏—è generate_docx_from_template –≤–µ—Ä–Ω—É–ª–∞ None")
            return None

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–∑—Ü–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞: {str(e)}")
        logger.error(traceback.format_exc())
        return None
