# directory/document_generators/protocol_generator.py
"""
üìÑ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π
"""
import logging
import datetime
import traceback
from typing import Dict, Any, Optional

from directory.models.document_template import GeneratedDocument
from directory.document_generators.base import (
    get_document_template, prepare_employee_context, generate_docx_from_template
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

def generate_knowledge_protocol(employee, user=None, custom_context: Optional[Dict[str, Any]] = None) -> Optional[GeneratedDocument]:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ—Ç–æ–∫–æ–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.
    Args:
        employee: –û–±—ä–µ–∫—Ç –º–æ–¥–µ–ª–∏ Employee
        user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å–æ–∑–¥–∞—é—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        custom_context: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    Returns:
        Optional[GeneratedDocument]: –û–±—ä–µ–∫—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
    """
    try:
        template = get_document_template('knowledge_protocol', employee)
        if not template:
            logger.error("–ê–∫—Ç–∏–≤–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω")
            raise ValueError("–ê–∫—Ç–∏–≤–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω")

        context = prepare_employee_context(employee)

        now = datetime.datetime.now()
        context.setdefault('protocol_number', f"–ü–ó-{now.strftime('%Y%m%d')}-{employee.id}")
        context.setdefault('protocol_date', now.strftime("%d.%m.%Y"))

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é get_commission_formatted –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–∏—Å—Å–∏–∏
        # –ò–º–ø–æ—Ä—Ç –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        from directory.views.documents.utils import get_commission_formatted
        commission_data, commission_success = get_commission_formatted(employee)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–∏—Å—Å–∏–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã
        context.setdefault('commission_chairman', commission_data.get('chairman', '–ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å –∫–æ–º–∏—Å—Å–∏–∏'))
        context.setdefault('commission_members', commission_data.get('members', ['–ß–ª–µ–Ω –∫–æ–º–∏—Å—Å–∏–∏ 1', '–ß–ª–µ–Ω –∫–æ–º–∏—Å—Å–∏–∏ 2']))
        context.setdefault('commission_secretary', commission_data.get('secretary', '–°–µ–∫—Ä–µ—Ç–∞—Ä—å –∫–æ–º–∏—Å—Å–∏–∏'))

        context.setdefault('ticket_number', employee.id % 20 + 1 if employee.id else 1) # –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ employee.id
        context.setdefault('test_result', '–ø—Ä–æ—à–µ–ª')

        if custom_context:
            context.update(custom_context)
            logger.info(f"–ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–æ–ø–æ–ª–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏: {list(custom_context.keys())}")

        logger.info(f"–ò—Ç–æ–≥–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞: {list(context.keys())}")

        result = generate_docx_from_template(template, context, employee, user)
        if result:
            logger.info(f"–ü—Ä–æ—Ç–æ–∫–æ–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: {result.id}")
            return result
        else:
            logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞: —Ñ—É–Ω–∫—Ü–∏—è generate_docx_from_template –≤–µ—Ä–Ω—É–ª–∞ None")
            return None

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π: {str(e)}")
        logger.error(traceback.format_exc())
        return None
