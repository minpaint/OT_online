"""
üè¢ Resource –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞/—ç–∫—Å–ø–æ—Ä—Ç–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
Organization ‚Üí StructuralSubdivision ‚Üí Department ‚Üí Position
"""
from import_export import resources, fields, widgets
from directory.models import Organization, StructuralSubdivision, Department, Position
from django.core.exceptions import ValidationError


class BooleanRussianWidget(widgets.BooleanWidget):
    """–í–∏–¥–∂–µ—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±—É–ª–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ"""

    def clean(self, value, row=None, *args, **kwargs):
        if value in self.TRUE_VALUES:
            return True
        if value in self.FALSE_VALUES:
            return False

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä—É—Å—Å–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        if isinstance(value, str):
            value_lower = value.lower().strip()
            if value_lower in ['–¥–∞', 'yes', '1', 'true', '—Ç', 'y']:
                return True
            if value_lower in ['–Ω–µ—Ç', 'no', '0', 'false', '–Ω', 'n', '']:
                return False

        return False


class OrganizationStructureResource(resources.ModelResource):
    """
    üìä –†–µ—Å—É—Ä—Å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞/—ç–∫—Å–ø–æ—Ä—Ç–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.

    –ü—Ä–æ—Å—Ç–æ–π –ø–æ–¥—Ö–æ–¥: –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–ª—è Position,
    –∞ organization/subdivision/department —Å–æ–∑–¥–∞–µ–º –≤ before_import_row.
    """

    class Meta:
        model = Position
        fields = (
            'organization',
            'subdivision',
            'department',
            'position_name',
            'safety_instructions_numbers',
            'internship_period_days',
            'is_responsible_for_safety',
            'can_be_internship_leader',
            'can_sign_orders',
        )
        import_id_fields = []
        skip_unchanged = False

    def before_import_row(self, row, **kwargs):
        """–°–æ–∑–¥–∞–µ–º organization/subdivision/department –ø–µ—Ä–µ–¥ –∏–º–ø–æ—Ä—Ç–æ–º –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏"""

        # 1. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç—Ä–æ–∫–∏
        org_short_name = row.get('org_short_name_ru', '').strip() if row.get('org_short_name_ru') else ''
        subdivision_name = row.get('subdivision_name', '').strip() if row.get('subdivision_name') else ''
        department_name = row.get('department_name', '').strip() if row.get('department_name') else ''
        position_name = row.get('position_name', '').strip() if row.get('position_name') else ''

        # 2. –í–∞–ª–∏–¥–∞—Ü–∏—è
        if not org_short_name:
            raise ValidationError('–ù–µ —É–∫–∞–∑–∞–Ω–æ –∫—Ä–∞—Ç–∫–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏')
        if not position_name:
            raise ValidationError('–ù–µ —É–∫–∞–∑–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏')
        if department_name and not subdivision_name:
            raise ValidationError('–ù–µ–ª—å–∑—è —É–∫–∞–∑–∞—Ç—å –æ—Ç–¥–µ–ª –±–µ–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–≥–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è')

        # 3. –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é
        organization, _ = Organization.objects.get_or_create(
            short_name_ru=org_short_name,
            defaults={
                'full_name_ru': org_short_name,
                'short_name_by': org_short_name,
                'full_name_by': org_short_name,
                'location': '–≥. –ú–∏–Ω—Å–∫'
            }
        )

        # 4. –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ)
        subdivision = None
        if subdivision_name:
            subdivision, _ = StructuralSubdivision.objects.get_or_create(
                name=subdivision_name,
                organization=organization,
                defaults={'short_name': subdivision_name}
            )

        # 5. –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏–º –æ—Ç–¥–µ–ª (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω)
        department = None
        if department_name:
            department, _ = Department.objects.get_or_create(
                name=department_name,
                organization=organization,
                subdivision=subdivision,
                defaults={'short_name': department_name}
            )

        # 6. –î–æ–±–∞–≤–ª—è–µ–º ID –≤ row –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–≤—è–∑—ã–≤–∞–Ω–∏—è
        row['organization'] = organization.id
        row['subdivision'] = subdivision.id if subdivision else None
        row['department'] = department.id if department else None

        # 7. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        if row.get('internship_period_days') in (None, ''):
            row['internship_period_days'] = 0
        if row.get('is_responsible_for_safety') in (None, ''):
            row['is_responsible_for_safety'] = False
        if row.get('can_be_internship_leader') in (None, ''):
            row['can_be_internship_leader'] = False
        if row.get('can_sign_orders') in (None, ''):
            row['can_sign_orders'] = False

    def get_instance(self, instance_loader, row):
        """–ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –¥–æ–ª–∂–Ω–æ—Å—Ç—å –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é"""
        org_id = row.get('organization')
        subdivision_id = row.get('subdivision')
        department_id = row.get('department')
        position_name = row.get('position_name')

        try:
            return Position.objects.get(
                position_name=position_name,
                organization_id=org_id,
                subdivision_id=subdivision_id,
                department_id=department_id
            )
        except Position.DoesNotExist:
            return None

    def get_export_queryset(self, queryset=None):
        """–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞"""
        qs = super().get_export_queryset(queryset)
        return qs.select_related('organization', 'subdivision', 'department')
