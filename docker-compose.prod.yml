version: '3.8'

services:
  web:
    build: .
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    expose:
      - 8000
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/ot_online
      - DEBUG=0
      - SECRET_KEY=${DJANGO_SECRET_KEY}
    depends_on:
      - db
    networks:
      - ot_network

  db:
    image: postgres:15
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=ot_online
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - ot_network

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - ot_network

  redis:
    image: redis:7
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - ot_network

  celery:
    build: .
    command: celery -A config worker -l INFO
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/ot_online
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - web
      - db
      - redis
    networks:
      - ot_network

  celery-beat:
    build: .
    command: celery -A config beat -l INFO
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/ot_online
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - web
      - db
      - redis
    networks:
      - ot_network

volumes:
  postgres_data_prod:
  static_volume:
  media_volume:
  redis_data:

networks:
  ot_network:
    driver: bridge