/**
 * üîç –ö–ª–∞—Å—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –¥—Ä–µ–≤–æ–≤–∏–¥–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
 * –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π DOM
 */
class TreeSearch {
    constructor(treeElement) {
        // üå≥ –≠–ª–µ–º–µ–Ω—Ç –¥–µ—Ä–µ–≤–∞
        this.tree = treeElement || document.getElementById('employeeTree') || document.getElementById('result_list');
        // üíæ –ö—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
        this.searchCache = new Map();
        // ‚è≤Ô∏è –¢–∞–π–º–µ—Ä –¥–ª—è debounce
        this.debounceTimer = null;
        // üìù –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        this.lastSearchTerm = '';

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
        this.init();
    }

    /**
     * üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –º–æ–¥—É–ª—è
     */
    init() {
        if (!this.tree) {
            console.log('‚ùå –î–µ—Ä–µ–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
            return;
        }

        // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞ –∏ –∫–Ω–æ–ø–∫–∏
        const searchInput = document.getElementById('localSearchInput') || document.querySelector('.tree-search');
        const searchBtn = document.getElementById('localSearchBtn');
        const clearBtn = document.getElementById('clearSearchBtn');

        if (!searchInput) {
            console.log('‚ùå –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
            return;
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –≤ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞
        searchInput.addEventListener('input', (e) => {
            this.search(e.target.value);
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è Enter
        searchInput.addEventListener('keydown', (e) => {
            if (e.key === 'Enter') {
                e.preventDefault();
                this.search(searchInput.value);
            } else if (e.key === 'Escape') {
                e.preventDefault();
                searchInput.value = '';
                this.search('');
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞
        if (searchBtn) {
            searchBtn.addEventListener('click', (e) => {
                e.preventDefault();
                this.search(searchInput.value);
            });
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏
        if (clearBtn) {
            clearBtn.addEventListener('click', (e) => {
                e.preventDefault();
                searchInput.value = '';
                this.search('');
            });
        }

        console.log('‚úÖ TreeSearch –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    /**
     * üîé –ü–æ–∏—Å–∫ —Å debounce
     * @param {string} searchText - –¢–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞
     */
    search(searchText) {
        // –û—Ç–º–µ–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        if (this.debounceTimer) {
            clearTimeout(this.debounceTimer);
        }

        // –°—Ç–∞–≤–∏–º –Ω–æ–≤—ã–π —Ç–∞–π–º–µ—Ä
        this.debounceTimer = setTimeout(() => {
            this._performSearch(searchText.toLowerCase().trim());
        }, 300);
    }

    /**
     * üéØ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞
     * @param {string} searchText - –¢–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ (—É–∂–µ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ)
     */
    _performSearch(searchText) {
        if (!this.tree) return;

        // –ï—Å–ª–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –ø—É—Å—Ç–æ–π - —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–∏—Å–∫
        if (!searchText) {
            this._resetSearch();
            return;
        }

        // –ï—Å–ª–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        if (this.lastSearchTerm === searchText) {
            return;
        }

        console.log(`üîç –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–∏—Å–∫: "${searchText}"`);

        this.lastSearchTerm = searchText;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
        if (this.searchCache.has(searchText)) {
            const { foundRows } = this.searchCache.get(searchText);
            this._showResults(foundRows, searchText);
            return;
        }

        // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏
        this.tree.querySelectorAll('tr').forEach(row => {
            row.classList.add('hidden-by-search');
            row.classList.remove('highlight-search');
        });

        // –ú–∞—Å—Å–∏–≤ –¥–ª—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        const foundRows = [];

        // –ò—â–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å—Ä–µ–¥–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ (—Å—Ç—Ä–æ–∫–∏ —Å —á–µ–∫–±–æ–∫—Å–∞–º–∏)
        this.tree.querySelectorAll('tr').forEach(row => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —á–µ–∫–±–æ–∫—Å–∞ –≤ —Å—Ç—Ä–æ–∫–µ (–ø—Ä–∏–∑–Ω–∞–∫ —Å—Ç—Ä–æ–∫–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞)
            const hasCheckbox = row.querySelector('input[type="checkbox"]');
            if (!hasCheckbox) return;

            // –ù–µ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π
            if (row.classList.contains('organization-row') ||
                row.classList.contains('subdivision-row') ||
                row.classList.contains('department-row')) {
                return;
            }

            // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —è—á–µ–π–∫–∏ —Å –∏–º–µ–Ω–µ–º
            const nameCell = row.querySelector('.field-name');
            if (!nameCell) return;

            const text = nameCell.textContent.toLowerCase();
            if (text.includes(searchText)) {
                foundRows.push(row);
            }
        });

        // –ö—ç—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        this.searchCache.set(searchText, { foundRows });

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        this._showResults(foundRows, searchText);
    }

    /**
     * üîç –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
     * @param {Array} foundRows - –ú–∞—Å—Å–∏–≤ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫
     * @param {string} searchText - –¢–µ–∫—Å—Ç –ø–æ–∏—Å–∫–∞
     */
    _showResults(foundRows, searchText) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –∏—Ö —Ä–æ–¥–∏—Ç–µ–ª–µ–π
        foundRows.forEach(row => {
            row.classList.remove('hidden-by-search');
            row.classList.add('highlight-search');

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∏—Ö
            this._showParents(row);
        });

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø–æ–∏—Å–∫–∞
        this._updateNoResultsMessage(foundRows.length === 0, searchText);

        console.log(`üîç –ù–∞–π–¥–µ–Ω–æ ${foundRows.length} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π`);
    }

    /**
     * üîç –ü–æ–∫–∞–∑–∞—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
     * @param {HTMLElement} row - –°—Ç—Ä–æ–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
     */
    _showParents(row) {
        // –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ä–æ–¥–∏—Ç–µ–ª—è
        let parentId = row.getAttribute('data-parent');

        if (!parentId) return;

        // –ò—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ –ø–æ–¥–Ω–∏–º–∞–µ–º—Å—è –ø–æ –¥–µ—Ä–µ–≤—É, –ø–æ–∫–∞–∑—ã–≤–∞—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π
        while (parentId) {
            const parentRow = this.tree.querySelector(`tr[data-node-id="${parentId}"]`);
            if (!parentRow) break;

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—è
            parentRow.classList.remove('hidden-by-search');

            // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω —Å–≤—ë—Ä–Ω—É—Ç
            const toggle = parentRow.querySelector('.tree-toggle');
            if (toggle && toggle.textContent === '+') {
                // –ò–∑–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è
                toggle.textContent = '-';

                // –ù–∞—Ö–æ–¥–∏–º –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö
                const children = this.tree.querySelectorAll(`tr[data-parent="${parentId}"]`);
                children.forEach(child => {
                    child.classList.remove('tree-hidden');
                });
            }

            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ä–æ–¥–∏—Ç–µ–ª—é
            parentId = parentRow.getAttribute('data-parent');
        }
    }

    /**
     * üîç –û–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
     * @param {boolean} showMessage - –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
     * @param {string} searchText - –¢–µ–∫—Å—Ç –ø–æ–∏—Å–∫–∞
     */
    _updateNoResultsMessage(showMessage, searchText) {
        // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        const existingMsg = document.getElementById('no-search-results');
        if (existingMsg) {
            existingMsg.remove();
        }

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if (showMessage) {
            console.log(`üîç –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ: –ü–æ –∑–∞–ø—Ä–æ—Å—É "${searchText}" –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);

            const msgRow = document.createElement('div');
            msgRow.id = 'no-search-results';
            msgRow.className = 'alert alert-warning mt-3';
            msgRow.innerHTML = `–ü–æ –∑–∞–ø—Ä–æ—Å—É "${searchText}" –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`;

            // –ù–∞—Ö–æ–¥–∏–º –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
            const searchForm = document.querySelector('.search-form') || document.querySelector('form');
            if (searchForm) {
                // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ —Ñ–æ—Ä–º—ã –ø–æ–∏—Å–∫–∞
                if (searchForm.nextSibling) {
                    searchForm.parentNode.insertBefore(msgRow, searchForm.nextSibling);
                } else {
                    searchForm.parentNode.appendChild(msgRow);
                }
            } else if (this.tree.parentNode) {
                // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥ –¥–µ—Ä–µ–≤–æ–º
                this.tree.parentNode.insertBefore(msgRow, this.tree);
            }
        }
    }

    /**
     * üîÑ –°–±—Ä–æ—Å –ø–æ–∏—Å–∫–∞
     */
    _resetSearch() {
        if (!this.tree || this.lastSearchTerm === '') return;

        console.log('üîç –°–±—Ä–æ—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞');

        this.lastSearchTerm = '';

        // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        const noResultsMsg = document.getElementById('no-search-results');
        if (noResultsMsg) {
            noResultsMsg.remove();
        }

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –≤–∏–¥ –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–æ–∫
        this.tree.querySelectorAll('tr').forEach(row => {
            row.classList.remove('hidden-by-search', 'highlight-search');
        });

        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–µ—Ä–µ–≤–∞
        this._restoreTreeState();
    }

    /**
     * üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–µ—Ä–µ–≤–∞ –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞ –ø–æ–∏—Å–∫–∞
     */
    _restoreTreeState() {
        if (!this.tree) return;

        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ TreeCore
        if (window.treeCore) {
            // –ï—Å–ª–∏ –µ—Å—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π TreeCore, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
            window.treeCore._restoreState();
            return;
        }

        // –ò–Ω–∞—á–µ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Ä—É—á–Ω—É—é
        // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è–º
        this.tree.querySelectorAll('.tree-toggle').forEach(toggle => {
            const nodeId = toggle.getAttribute('data-node');
            if (!nodeId) return;

            const isExpanded = toggle.textContent === '-';

            // –ï—Å–ª–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Å–≤—ë—Ä–Ω—É—Ç, —Å–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –µ–≥–æ –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            if (!isExpanded) {
                const children = this.tree.querySelectorAll(`tr[data-parent="${nodeId}"]`);
                children.forEach(child => {
                    child.classList.add('tree-hidden');
                });
            }
        });
    }
}

// –ê–≤—Ç–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    console.log('üîÑ DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º TreeSearch');

    // –ù–∞—Ö–æ–¥–∏–º –¥–µ—Ä–µ–≤–æ
    const treeElement = document.getElementById('employeeTree') || document.getElementById('result_list');

    if (treeElement) {
        // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä TreeSearch –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
        window.treeSearch = new TreeSearch(treeElement);
    }
});