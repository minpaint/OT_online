/**
 * üå≥ –Ø–¥—Ä–æ –¥—Ä–µ–≤–æ–≤–∏–¥–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
 * –£–ø—Ä–∞–≤–ª—è–µ—Ç –¥–µ—Ä–µ–≤–æ–º –∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º—ã–º–∏ –º–æ–¥—É–ª—è–º–∏ (—Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ, —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ, —á–µ–∫–±–æ–∫—Å—ã)
 * –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ: –¥–æ–±–∞–≤–ª–µ–Ω –≤—ã–±–æ—Ä —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
 */
class TreeCore {
    constructor() {
        // üéØ –û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        this.tree = document.getElementById('employeeTree') || document.getElementById('result_list');
        this.expandAllBtn = document.querySelector('.expand-all') || document.querySelector('#btnExpandAll');
        this.collapseAllBtn = document.querySelector('.collapse-all') || document.querySelector('#btnCollapseAll');
        this.searchInput = document.querySelector('.tree-search') || document.querySelector('#localSearchInput');
        this.selectAllCheckbox = document.getElementById('select-all'); // –ì–ª–∞–≤–Ω—ã–π —á–µ–∫–±–æ–∫—Å "–≤—ã–±—Ä–∞—Ç—å –≤—Å–µ"

        // üíæ –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–¥–ª—è —Ä–µ–∂–∏–º–∞ –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ - —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç)
        this.selectedItems = [];

        // üõ†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        this.singleSelectMode = true; // –†–µ–∂–∏–º –≤—ã–±–æ—Ä–∞ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        if (this.tree) {
            this.init();
            console.log('‚úÖ TreeCore –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } else {
            console.log('‚ùå –î–µ—Ä–µ–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ');
        }
    }

    /**
     * üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
     */
    init() {
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–∂–∏–º–∞ –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
        if (this.singleSelectMode && this.tree) {
            this.tree.classList.add('single-select-mode');
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
        this._bindEvents();

        // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–µ—Ä–µ–≤–∞
        this._restoreState();

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–µ–∫–±–æ–∫—Å–æ–≤
        if (this.singleSelectMode) {
            this._initSingleSelectCheckboxes();
        } else {
            this._initCheckboxes();
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
        this._initActionButtons();
    }

    /**
     * üîÑ –ü—Ä–∏–≤—è–∑–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    _bindEvents() {
        // –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–∫–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π
        if (this.tree) {
            this.tree.addEventListener('click', (e) => {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è–º
                const toggle = e.target.closest('.tree-toggle');
                if (toggle) {
                    this._handleToggleClick(toggle);
                }
            });
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ" –∏ "–°–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ"
        if (this.expandAllBtn) {
            this.expandAllBtn.addEventListener('click', (e) => {
                e.preventDefault();
                this.expandAll();
            });
        }

        if (this.collapseAllBtn) {
            this.collapseAllBtn.addEventListener('click', (e) => {
                e.preventDefault();
                this.collapseAll();
            });
        }
    }

    /**
     * üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—é
     * @param {HTMLElement} toggle - –≠–ª–µ–º–µ–Ω—Ç –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è
     */
    _handleToggleClick(toggle) {
        const nodeId = toggle.getAttribute('data-node');
        if (!nodeId) return;

        console.log(`üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —É–∑–ª–∞: ${nodeId}`);

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        const isExpanded = toggle.textContent === '-';

        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        this.toggleNode(nodeId, !isExpanded);
    }

    /**
     * üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —É–∑–ª–∞ (—Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ/—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ)
     * @param {string} nodeId - ID —É–∑–ª–∞
     * @param {boolean} expand - true –¥–ª—è —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è, false –¥–ª—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
     */
    toggleNode(nodeId, expand = true) {
        if (!this.tree) return;

        const toggle = this.tree.querySelector(`.tree-toggle[data-node="${nodeId}"]`);
        if (!toggle) return;

        // –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è
        toggle.textContent = expand ? '-' : '+';

        // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        const children = this.tree.querySelectorAll(`[data-parent="${nodeId}"]`);

        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∏—Ö –≤–∏–¥–∏–º–æ—Å—Ç—å
        children.forEach(child => {
            child.classList.toggle('tree-hidden', !expand);

            // –ï—Å–ª–∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—è, —Å–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∏ –¥–æ—á–µ—Ä–Ω–∏–µ —É–∑–ª—ã
            if (!expand) {
                const childNodeId = child.getAttribute('data-node-id');
                if (childNodeId) {
                    const childToggle = child.querySelector('.tree-toggle');
                    if (childToggle && childToggle.textContent === '-') {
                        this.toggleNode(childNodeId, false);
                    }
                }
            }
        });

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ localStorage
        this._saveState();
    }

    /**
     * üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–µ–∫–±–æ–∫—Å–æ–≤ —Å –≤—ã–±–æ—Ä–æ–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
     */
    _initSingleSelectCheckboxes() {
        if (!this.tree) return;

        // –û—á–∏—â–∞–µ–º –º–∞—Å—Å–∏–≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        this.selectedItems = [];

        // –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —á–µ–∫–±–æ–∫—Å–æ–≤
        this.tree.addEventListener('change', (e) => {
            const checkbox = e.target;
            if (checkbox.type !== 'checkbox') return;

            // –ü–æ–ª—É—á–∞–µ–º ID —ç–ª–µ–º–µ–Ω—Ç–∞
            const itemId = checkbox.getAttribute('data-id');
            if (!itemId) return;

            // –ï—Å–ª–∏ —á–µ–∫–±–æ–∫—Å –≤—ã–±—Ä–∞–Ω, —Å–Ω–∏–º–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏—Ö —á–µ–∫–±–æ–∫—Å–æ–≤
            if (checkbox.checked) {
                // –°–Ω–∏–º–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –¥—Ä—É–≥–∏—Ö —á–µ–∫–±–æ–∫—Å–æ–≤
                this.tree.querySelectorAll('input[type="checkbox"]').forEach(otherCheckbox => {
                    if (otherCheckbox !== checkbox && otherCheckbox.checked) {
                        otherCheckbox.checked = false;
                    }
                });

                // –û–±–Ω–æ–≤–ª—è–µ–º –º–∞—Å—Å–∏–≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
                this.selectedItems = [itemId];

                // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –≤—ã–¥–µ–ª–µ–Ω–∏—è –¥–ª—è —Å—Ç—Ä–æ–∫–∏
                const row = checkbox.closest('tr');
                if (row) {
                    // –£–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö —Å—Ç—Ä–æ–∫
                    this.tree.querySelectorAll('tr.selected').forEach(r => {
                        r.classList.remove('selected');
                    });

                    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
                    row.classList.add('selected');
                }
            } else {
                // –ï—Å–ª–∏ —á–µ–∫–±–æ–∫—Å —Å–Ω—è—Ç, —É–¥–∞–ª—è–µ–º ID –∏–∑ –º–∞—Å—Å–∏–≤–∞
                this.selectedItems = this.selectedItems.filter(id => id !== itemId);

                // –£–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å –≤—ã–¥–µ–ª–µ–Ω–∏—è –¥–ª—è —Å—Ç—Ä–æ–∫–∏
                const row = checkbox.closest('tr');
                if (row) {
                    row.classList.remove('selected');
                }
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            this._updateSelectedCounter();

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
            this._updateActionsState();
        });

        console.log('üìå –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —á–µ–∫–±–æ–∫—Å—ã —Å —Ä–µ–∂–∏–º–æ–º –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞');
    }

    /**
     * üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–µ–∫–±–æ–∫—Å–æ–≤ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º)
     */
    _initCheckboxes() {
        if (!this.tree || !this.selectAllCheckbox) return;

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ —á–µ–∫–±–æ–∫—Å–∞ "–í—ã–±—Ä–∞—Ç—å –≤—Å–µ"
        this.selectAllCheckbox.addEventListener('change', () => {
            const checkboxes = this.tree.querySelectorAll('input[type="checkbox"]:not(#select-all)');
            checkboxes.forEach(ch => {
                ch.checked = this.selectAllCheckbox.checked;

                // –û–±–Ω–æ–≤–ª—è–µ–º –º–∞—Å—Å–∏–≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
                const itemId = ch.getAttribute('data-id');
                if (itemId) {
                    const index = this.selectedItems.indexOf(itemId);
                    if (ch.checked && index === -1) {
                        this.selectedItems.push(itemId);
                    } else if (!ch.checked && index !== -1) {
                        this.selectedItems.splice(index, 1);
                    }
                }
            });

            this._updateSelectedCounter();
        });

        // –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —á–µ–∫–±–æ–∫—Å–æ–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        this.tree.addEventListener('change', (e) => {
            const checkbox = e.target;
            if (checkbox.type !== 'checkbox' || checkbox === this.selectAllCheckbox) return;

            // –ü–æ–ª—É—á–∞–µ–º ID —ç–ª–µ–º–µ–Ω—Ç–∞
            const itemId = checkbox.getAttribute('data-id');
            if (itemId) {
                const index = this.selectedItems.indexOf(itemId);
                if (checkbox.checked && index === -1) {
                    this.selectedItems.push(itemId);
                } else if (!checkbox.checked && index !== -1) {
                    this.selectedItems.splice(index, 1);
                }
            }

            this._updateSelectAllState();
            this._updateSelectedCounter();
        });
    }

    /**
     * üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ —á–µ–∫–±–æ–∫—Å–∞ "–í—ã–±—Ä–∞—Ç—å –≤—Å–µ"
     */
    _updateSelectAllState() {
        if (!this.tree || !this.selectAllCheckbox) return;

        const checkboxes = this.tree.querySelectorAll('input[type="checkbox"]:not(#select-all)');
        const checkedBoxes = this.tree.querySelectorAll('input[type="checkbox"]:checked:not(#select-all)');

        this.selectAllCheckbox.checked = checkboxes.length > 0 && checkboxes.length === checkedBoxes.length;
        this.selectAllCheckbox.indeterminate = checkedBoxes.length > 0 && checkedBoxes.length < checkboxes.length;
    }

    /**
     * üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
     */
    _updateSelectedCounter() {
        const count = this.selectedItems.length;

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –≤ –±–ª–æ–∫–µ "–í—ã–±—Ä–∞–Ω–æ: X"
        const counterValue = document.getElementById('counterValue');
        if (counterValue) {
            counterValue.textContent = count;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –±–ª–æ–∫–∞ —Å—á–µ—Ç—á–∏–∫–∞
        const selectedCounter = document.getElementById('selectedCounter');
        if (selectedCounter) {
            selectedCounter.style.display = count > 0 ? 'inline-block' : 'none';
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –≤ –¥—Ä–æ–ø–¥–∞—É–Ω–µ
        const selectedCountBadge = document.getElementById('selectedCount');
        if (selectedCountBadge) {
            selectedCountBadge.textContent = count;
        }

        console.log(`üîÑ –í—ã–±—Ä–∞–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${count}`);
    }

    /**
     * üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
     */
    _updateActionsState() {
        const count = this.selectedItems.length;

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        const actionsDropdown = document.getElementById('actionsDropdown');
        if (actionsDropdown) {
            actionsDropdown.disabled = count === 0;
        }
    }

    /**
     * üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
     */
    _initActionButtons() {
        // –ö–Ω–æ–ø–∫–∞ "–ö–∞—Ä—Ç–æ—á–∫–∞ —É—á–µ—Ç–∞"
        const btnIssueCard = document.getElementById('btnIssueCard');
        if (btnIssueCard) {
            btnIssueCard.addEventListener('click', (e) => {
                e.preventDefault();
                if (this._validateSingleSelection()) {
                    const employeeId = this.selectedItems[0];
                    const urlElement = document.querySelector('[data-siz-personal-card-url]');
                    if (urlElement) {
                        const url = urlElement.getAttribute('data-siz-personal-card-url');
                        window.location.href = url.replace('0', employeeId);
                    }
                }
            });
        }

        // –ö–Ω–æ–ø–∫–∞ "–í—ã–¥–∞—Ç—å –°–ò–ó"
        const btnIssueSIZ = document.getElementById('btnIssueSIZ');
        if (btnIssueSIZ) {
            btnIssueSIZ.addEventListener('click', (e) => {
                e.preventDefault();
                if (this._validateSingleSelection()) {
                    const employeeId = this.selectedItems[0];
                    const urlElement = document.querySelector('[data-siz-issue-url]');
                    if (urlElement) {
                        const url = urlElement.getAttribute('data-siz-issue-url');
                        window.location.href = url.replace('0', employeeId);
                    }
                }
            });
        }

        // –ö–Ω–æ–ø–∫–∞ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
        const btnEditEmployee = document.getElementById('btnEditEmployee');
        if (btnEditEmployee) {
            btnEditEmployee.addEventListener('click', (e) => {
                e.preventDefault();
                if (this._validateSingleSelection()) {
                    const employeeId = this.selectedItems[0];
                    const urlElement = document.querySelector('[data-employee-update-url]');
                    if (urlElement) {
                        const url = urlElement.getAttribute('data-employee-update-url');
                        window.location.href = url.replace('0', employeeId);
                    }
                }
            });
        }
    }

    /**
     * üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—ã–±—Ä–∞–Ω –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç
     * @returns {boolean} true, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç
     */
    _validateSingleSelection() {
        if (this.selectedItems.length === 0) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.');
            return false;
        }

        return true;
    }

    /**
     * üîÑ –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ —É–∑–ª—ã
     */
    expandAll() {
        if (!this.tree) return;

        console.log('üîÑ –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –≤—Å–µ —É–∑–ª—ã');

        // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Å–≤–µ—Ä–Ω—É—Ç—ã–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏ –∏ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∏—Ö
        const collapsedToggles = this.tree.querySelectorAll('.tree-toggle');
        collapsedToggles.forEach(toggle => {
            if (toggle.textContent === '+') {
                const nodeId = toggle.getAttribute('data-node');
                if (nodeId) {
                    this.toggleNode(nodeId, true);
                }
            }
        });
    }

    /**
     * üîÑ –°–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ —É–∑–ª—ã
     */
    collapseAll() {
        if (!this.tree) return;

        console.log('üîÑ –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –≤—Å–µ —É–∑–ª—ã');

        // –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è (–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏) –∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∏—Ö
        const orgToggles = this.tree.querySelectorAll('.tree-toggle[data-node^="org-"]');

        if (orgToggles.length === 0) {
            // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π, –∏—â–µ–º –ª—é–±—ã–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏
            const expandedToggles = this.tree.querySelectorAll('.tree-toggle');
            expandedToggles.forEach(toggle => {
                if (toggle.textContent === '-') {
                    const nodeId = toggle.getAttribute('data-node');
                    if (nodeId) {
                        this.toggleNode(nodeId, false);
                    }
                }
            });
        } else {
            // –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
            orgToggles.forEach(toggle => {
                if (toggle.textContent === '-') {
                    const nodeId = toggle.getAttribute('data-node');
                    if (nodeId) {
                        this.toggleNode(nodeId, false);
                    }
                }
            });
        }
    }

    /**
     * üîÑ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–µ—Ä–µ–≤–∞ –≤ localStorage
     */
    _saveState() {
        try {
            if (!this.tree) return;

            const state = {};

            this.tree.querySelectorAll('.tree-toggle').forEach(toggle => {
                const nodeId = toggle.getAttribute('data-node');
                if (nodeId) {
                    state[nodeId] = toggle.textContent === '-';
                }
            });

            localStorage.setItem('treeViewState', JSON.stringify(state));
        } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–µ—Ä–µ–≤–∞:', err);
        }
    }

    /**
     * üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–µ—Ä–µ–≤–∞ –∏–∑ localStorage
     */
    _restoreState() {
        try {
            if (!this.tree) return;

            const stateJson = localStorage.getItem('treeViewState');
            if (!stateJson) return;

            const state = JSON.parse(stateJson);

            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —É–∑–ª–∞
            Object.entries(state).forEach(([nodeId, isExpanded]) => {
                this.toggleNode(nodeId, isExpanded);
            });
        } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–µ—Ä–µ–≤–∞:', err);
        }
    }

    /**
     * üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
     * @returns {Array} –ú–∞—Å—Å–∏–≤ ID –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
     */
    getSelectedItems() {
        return [...this.selectedItems];
    }
}

// –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é initEmployeeTree –∏–∑ main.js
window.initEmployeeTree = function() {
    console.log('üîÑ –§—É–Ω–∫—Ü–∏—è initEmployeeTree –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞');
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—à –∫–ª–∞—Å—Å
    window.treeCore = new TreeCore();
};

// –ê–≤—Ç–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    console.log('üîÑ DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º TreeCore');
    window.treeCore = new TreeCore();
});