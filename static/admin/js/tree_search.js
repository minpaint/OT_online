/**
 * üîç –ö–ª–∞—Å—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –¥—Ä–µ–≤–æ–≤–∏–¥–Ω–æ–º—É —Å–ø–∏—Å–∫—É
 * –†–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –≤ –∞–¥–º–∏–Ω–∫–µ, —Ç–∞–∫ –∏ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–∞–π—Ç–µ
 */
class TreeSearch {
    constructor(treeElement) {
        // üå≥ –≠–ª–µ–º–µ–Ω—Ç –¥–µ—Ä–µ–≤–∞
        this.tree = treeElement;
        // üíæ –ö—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
        this.searchCache = new Map();
        // ‚è≤Ô∏è –¢–∞–π–º–µ—Ä –¥–ª—è debounce
        this.debounceTimer = null;
        // üìù –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        this.lastSearchTerm = '';
        // üîÑ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ (–∞–¥–º–∏–Ω–∫–∞ –∏–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç)
        this.isAdminMode = this.tree.id === 'result_list';
    }

    /**
     * üîé –ü–æ–∏—Å–∫ —Å debounce
     */
    search(searchText) {
        if (this.debounceTimer) {
            clearTimeout(this.debounceTimer);
        }

        this.debounceTimer = setTimeout(() => {
            this._performSearch(searchText.toLowerCase().trim());
        }, 300);
    }

    /**
     * üéØ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞
     */
    _performSearch(searchText) {
        // –ï—Å–ª–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –ø—É—Å—Ç–æ–π - —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–∏—Å–∫
        if (!searchText) {
            this._resetSearch();
            return;
        }

        // –ï—Å–ª–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        if (this.lastSearchTerm === searchText) {
            return;
        }

        this.lastSearchTerm = searchText;

        // –°–∫—Ä—ã–≤–∞–µ–º –í–°–ï —Å—Ç—Ä–æ–∫–∏ —Å–Ω–∞—á–∞–ª–∞
        this.tree.querySelectorAll('tr').forEach(row => {
            row.classList.add('hidden-by-search');
            row.classList.remove('highlight-search');
        });

        // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        const foundEmployees = [];

        // –ò—â–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ —Å—Ä–µ–¥–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        this.tree.querySelectorAll('tr').forEach(row => {
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º
            let isEmployee = false;

            if (this.isAdminMode) {
                // –í –∞–¥–º–∏–Ω–∫–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∏–º–µ—é—Ç —á–µ–∫–±–æ–∫—Å .action-select
                isEmployee = row.querySelector('.action-select') !== null;
            } else {
                // –ù–∞ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–∞–π—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∏–º–µ—é—Ç —á–µ–∫–±–æ–∫—Å .employee-checkbox
                isEmployee = row.querySelector('.employee-checkbox') !== null;

                // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —Å—Ç—Ä–æ–∫–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏/–ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è/–æ—Ç–¥–µ–ª–∞
                if (row.classList.contains('organization-row') ||
                    row.classList.contains('subdivision-row') ||
                    row.classList.contains('department-row')) {
                    isEmployee = false;
                }
            }

            if (!isEmployee) return;

            const nameCell = row.querySelector('.field-name') || row.querySelector('td:first-child');
            if (!nameCell) return;

            const text = nameCell.textContent.toLowerCase();

            if (text.includes(searchText)) {
                // –≠—Ç–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–∏—Å–∫—É
                foundEmployees.push(row);
            }
        });

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        foundEmployees.forEach(row => {
            row.classList.remove('hidden-by-search');
            row.classList.add('highlight-search');

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            this._showParents(row);
        });

        // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        if (foundEmployees.length === 0) {
            const noResultsMsg = document.getElementById('no-search-results');
            if (noResultsMsg) {
                noResultsMsg.classList.remove('hidden-by-search');
            } else {
                // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
                const msgRow = document.createElement('tr');
                msgRow.id = 'no-search-results';
                msgRow.innerHTML = `<td colspan="5" class="text-center p-3">–ü–æ –∑–∞–ø—Ä–æ—Å—É "${searchText}" –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</td>`;
                this.tree.querySelector('tbody').appendChild(msgRow);
            }
        } else if (document.getElementById('no-search-results')) {
            document.getElementById('no-search-results').classList.add('hidden-by-search');
        }

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
        setTimeout(() => {
            document.querySelector('.expand-all')?.click();
        }, 100);
    }

    /**
     * üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ü–æ–∫–∞–∑–∞—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
     */
    _showParents(row) {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç —Ä–æ–¥–∏—Ç–µ–ª—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
        let parentAttr = this.isAdminMode ? 'parentId' : 'parent';
        let parentId = row.dataset[parentAttr];

        while (parentId) {
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è
            const parentSelector = this.isAdminMode
                ? `tr[data-node-id="${parentId}"]`
                : `tr[data-node-id="${parentId}"]`;

            const parentRow = this.tree.querySelector(parentSelector);
            if (!parentRow) break;

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—è
            parentRow.classList.remove('hidden-by-search');

            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è
            parentId = this.isAdminMode
                ? parentRow.dataset.parentId
                : parentRow.dataset.parent;
        }
    }

    /**
     * üîÑ –°–±—Ä–æ—Å –ø–æ–∏—Å–∫–∞
     */
    _resetSearch() {
        if (this.lastSearchTerm === '') return;

        this.lastSearchTerm = '';
        this.searchCache.clear();

        // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        const noResultsMsg = document.getElementById('no-search-results');
        if (noResultsMsg) {
            noResultsMsg.remove();
        }

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –≤–∏–¥ –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–æ–∫
        this.tree.querySelectorAll('tr').forEach(row => {
            // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å—ã –ø–æ–∏—Å–∫–∞
            row.classList.remove('hidden-by-search', 'highlight-search');

            // –£–¥–∞–ª—è–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π –ø—É—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
            const structurePath = row.querySelector('.structure-path');
            if (structurePath) {
                structurePath.remove();
            }
        });

        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–µ—Ä–µ–≤–∞ (–ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ —É–∑–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ —Ä–∞—Å–∫—Ä—ã—Ç—ã)
        this._restoreTreeState();
    }

    /**
     * üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–µ—Ä–µ–≤–∞ –ø–æ—Å–ª–µ –ø–æ–∏—Å–∫–∞
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–µ —É–∑–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ —Ä–∞—Å–∫—Ä—ã—Ç—ã –¥–æ –ø–æ–∏—Å–∫–∞
     */
    _restoreTreeState() {
        // –í —Ä–∞–∑–Ω—ã—Ö —Ä–µ–∂–∏–º–∞—Ö –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ä–∞–∑–Ω—ã–µ –∫–ª–∞—Å—Å—ã
        if (this.isAdminMode) {
            // –î–ª—è –∞–¥–º–∏–Ω–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è .tree-row-hidden –¥–ª—è —Å–∫—Ä—ã—Ç—ã—Ö —É–∑–ª–æ–≤
            // –°–Ω–∞—á–∞–ª–∞ —Å–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —É–∑–ª—ã —Å data-parent-id
            this.tree.querySelectorAll('tr[data-parent-id]').forEach(row => {
                const parentId = row.dataset.parentId;
                const parentRow = this.tree.querySelector(`tr[data-node-id="${parentId}"]`);

                if (parentRow) {
                    const toggleBtn = parentRow.querySelector('.toggle-btn');
                    if (toggleBtn && toggleBtn.getAttribute('data-state') === 'collapsed') {
                        row.classList.add('tree-row-hidden');
                    } else {
                        row.classList.remove('tree-row-hidden');
                    }
                }
            });
        } else {
            // –î–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∞–π—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è .tree-hidden –¥–ª—è —Å–∫—Ä—ã—Ç—ã—Ö —É–∑–ª–æ–≤
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É–∑–ª—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
            this.tree.querySelectorAll('tr[data-node-id^="org-"]').forEach(orgRow => {
                const toggleEl = orgRow.querySelector('.tree-toggle');
                if (!toggleEl) return;

                const isExpanded = toggleEl.textContent === '-';
                const orgId = orgRow.dataset.nodeId;

                // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –∏ –æ—Ç–¥–µ–ª—ã
                this.tree.querySelectorAll(`tr[data-parent="${orgId}"]`).forEach(subRow => {
                    if (!isExpanded) {
                        subRow.classList.add('tree-hidden');
                    } else {
                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ä–∞—Å–∫—Ä—ã—Ç—ã–º
                        const subToggleEl = subRow.querySelector('.tree-toggle');
                        if (subToggleEl) {
                            const subIsExpanded = subToggleEl.textContent === '-';
                            const subId = subRow.dataset.nodeId;

                            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–¥–µ–ª—ã –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
                            this.tree.querySelectorAll(`tr[data-parent="${subId}"]`).forEach(deptRow => {
                                if (!subIsExpanded) {
                                    deptRow.classList.add('tree-hidden');
                                } else {
                                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—Ç–¥–µ–ª —Ä–∞—Å–∫—Ä—ã—Ç—ã–º
                                    const deptToggleEl = deptRow.querySelector('.tree-toggle');
                                    if (deptToggleEl) {
                                        const deptIsExpanded = deptToggleEl.textContent === '-';
                                        const deptId = deptRow.dataset.nodeId;

                                        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –æ—Ç–¥–µ–ª–∞
                                        this.tree.querySelectorAll(`tr[data-parent="${deptId}"]`).forEach(empRow => {
                                            if (!deptIsExpanded) {
                                                empRow.classList.add('tree-hidden');
                                            }
                                        });
                                    }
                                }
                            });
                        }
                    }
                });
            });
        }
    }
}

// üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', () => {
    // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Ç–∞–±–ª–∏—Ü—É –¥–µ—Ä–µ–≤–∞ (—Å–Ω–∞—á–∞–ª–∞ –≤ –∞–¥–º–∏–Ω–∫–µ, –ø–æ—Ç–æ–º –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–∞–π—Ç–µ)
    const treeTable = document.getElementById('result_list') || document.getElementById('employeeTree');

    // –ò—â–µ–º –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞
    const searchInput = document.querySelector('.tree-search') || document.getElementById('localSearchInput');

    if (treeTable && searchInput) {
        const treeSearch = new TreeSearch(treeTable);

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≤ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞
        searchInput.addEventListener('input', (e) => {
            treeSearch.search(e.target.value);
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏—à –≤ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞
        searchInput.addEventListener('keydown', (e) => {
            if (e.key === 'Enter') {
                treeSearch.search(searchInput.value);
            } else if (e.key === 'Escape') {
                searchInput.value = '';
                treeSearch.search('');
            }
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        const searchButton = document.getElementById('localSearchBtn');
        if (searchButton) {
            searchButton.addEventListener('click', () => {
                treeSearch.search(searchInput.value);
            });
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        const clearButton = document.getElementById('clearSearchBtn');
        if (clearButton) {
            clearButton.addEventListener('click', () => {
                searchInput.value = '';
                treeSearch.search('');
            });
        }

        // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ —Å—Ä–∞–∑—É, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–æ–∏—Å–∫–∞ —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ
        if (searchInput.value.trim()) {
            treeSearch.search(searchInput.value);
        }
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä—è–º—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –∫—Ä–µ—Å—Ç–∏–∫–æ–≤
    setTimeout(() => {
        fixTreeToggles();
    }, 500);
});

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫—Ä–µ—Å—Ç–∏–∫–æ–≤ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è/—Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
 */
function fixTreeToggles() {
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∫—Ä–µ—Å—Ç–∏–∫–∏ –≤–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ
    const toggles = document.querySelectorAll('.tree-toggle');

    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    toggles.forEach(toggle => {
        const clone = toggle.cloneNode(true);
        toggle.parentNode.replaceChild(clone, toggle);
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    document.querySelectorAll('.tree-toggle').forEach(toggle => {
        toggle.addEventListener('click', function(e) {
            const nodeId = this.getAttribute('data-node');
            if (!nodeId) return;

            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            const isExpanded = this.textContent === '-';

            // –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç
            this.textContent = isExpanded ? '+' : '-';

            // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            const children = document.querySelectorAll(`tr[data-parent="${nodeId}"]`);
            children.forEach(child => {
                if (isExpanded) {
                    // –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º
                    child.classList.add('tree-hidden');

                    // –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ —É–∑–ª—ã —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ
                    const childNodeId = child.dataset.nodeId;
                    if (childNodeId) {
                        const childToggle = child.querySelector('.tree-toggle');
                        if (childToggle && childToggle.textContent === '-') {
                            childToggle.textContent = '+';
                            document.querySelectorAll(`tr[data-parent="${childNodeId}"]`).forEach(grandchild => {
                                grandchild.classList.add('tree-hidden');
                            });
                        }
                    }
                } else {
                    // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º
                    child.classList.remove('tree-hidden');
                }
            });

            // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è
            e.stopPropagation();
        });
    });
}