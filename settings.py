import os
import sys
from pathlib import Path
from dotenv import load_dotenv
from django.contrib.messages import constants as messages

# üìå –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()

# üìÇ –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π –∫–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–µ–∫—Ç–∞
BASE_DIR = Path(__file__).resolve().parent

# üß™ –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∑–∞–ø—É—â–µ–Ω—ã –ª–∏ —Ç–µ—Å—Ç—ã
TESTING = len(sys.argv) > 1 and sys.argv[1] == 'test'

# üîê –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY')
DEBUG = os.getenv('DJANGO_DEBUG', 'False') == 'True' and not TESTING
ALLOWED_HOSTS = os.getenv('DJANGO_ALLOWED_HOSTS', '127.0.0.1,localhost').split(',')

# üì± –ë–∞–∑–æ–≤—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
DJANGO_APPS = [
    'django.contrib.admin',      # –ê–¥–º–∏–Ω–∫–∞ Django üë®‚Äçüíº
    'django.contrib.auth',         # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è üîë
    'django.contrib.contenttypes', # –¢–∏–ø—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞ üìÑ
    'django.contrib.sessions',     # –°–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üïë
    'django.contrib.messages',     # –°–æ–æ–±—â–µ–Ω–∏—è üì®
    'django.contrib.staticfiles',  # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã üñºÔ∏è
]

# üîå –°—Ç–æ—Ä–æ–Ω–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
THIRD_PARTY_APPS = [
    'corsheaders',              # CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ üåê
    'django_extensions',        # –†–∞—Å—à–∏—Ä–µ–Ω–∏—è Django ‚öôÔ∏è
    'mptt',                     # –î–ª—è –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä üìä
    'dal',                      # Django Autocomplete Light üîç
    'dal_select2',              # –í–∏–¥–∂–µ—Ç—ã Select2 –¥–ª—è DAL üéØ
    'crispy_forms',             # –ö—Ä–∞—Å–∏–≤—ã–µ —Ñ–æ—Ä–º—ã ‚ú®
    'crispy_bootstrap4',        # Bootstrap 4 –¥–ª—è crispy-forms üé®
]

# üè† –õ–æ–∫–∞–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
LOCAL_APPS = [
    'directory.apps.DirectoryConfig',  # –ù–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ "directory" üì¶
]

# –î–æ–±–∞–≤–ª—è–µ–º debug_toolbar —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –≤ —Ä–µ–∂–∏–º–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if not TESTING and DEBUG:
    THIRD_PARTY_APPS.append('debug_toolbar')

# –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS

# üõ†Ô∏è –ë–∞–∑–æ–≤—ã–π middleware
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',     # –ó–∞—â–∏—Ç–∞ üîí
    'django.contrib.sessions.middleware.SessionMiddleware',# –°–µ—Å—Å–∏–∏ üïë
    'corsheaders.middleware.CorsMiddleware',               # CORS üåê
    'django.middleware.common.CommonMiddleware',           # –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ üîß
    'django.middleware.csrf.CsrfViewMiddleware',           # CSRF –∑–∞—â–∏—Ç–∞ üö´
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è üîë
    'django.contrib.messages.middleware.MessageMiddleware',     # –°–æ–æ–±—â–µ–Ω–∏—è üì®
    'django.middleware.clickjacking.XFrameOptionsMiddleware',   # –ó–∞—â–∏—Ç–∞ –æ—Ç clickjacking üñ±Ô∏è
]

# –î–æ–±–∞–≤–ª—è–µ–º debug_toolbar middleware —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –≤ —Ä–µ–∂–∏–º–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if not TESTING and DEBUG:
    MIDDLEWARE.insert(0, 'debug_toolbar.middleware.DebugToolbarMiddleware')

# üåê URL-–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
ROOT_URLCONF = 'urls'

# üìÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —à–∞–±–ª–æ–Ω–æ–≤
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ö—Ä–∞–Ω–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –≤ BASE_DIR / 'templates'
        'DIRS': [
            BASE_DIR / 'templates',
            # –ï—Å–ª–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ directory/templates –µ—Å—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã, –æ—Å—Ç–∞–≤—å—Ç–µ, –∏–Ω–∞—á–µ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å
            BASE_DIR / 'directory' / 'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

# üåç WSGI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
WSGI_APPLICATION = 'wsgi.application'

# üíæ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é SQLite)
if os.getenv('DATABASE_URL', '').startswith('sqlite'):
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
            'TEST': {
                'NAME': BASE_DIR / 'test_db.sqlite3',
            },
        }
    }

# üîí –í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã –ø–∞—Ä–æ–ª–µ–π
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# üåç –ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è
LANGUAGE_CODE = os.getenv('LANGUAGE_CODE', 'ru-ru')
TIME_ZONE = os.getenv('TIME_ZONE', 'Europe/Moscow')
USE_I18N = True
USE_TZ = True

# üìÅ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
STATIC_URL = os.getenv('STATIC_URL', '/static/')
STATICFILES_DIRS = [
    BASE_DIR / 'static',
    BASE_DIR / 'directory' / 'static',
]
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'

# üì∏ –ú–µ–¥–∏–∞ —Ñ–∞–π–ª—ã
MEDIA_URL = os.getenv('MEDIA_URL', '/media/')
MEDIA_ROOT = BASE_DIR / 'media'

# üîë –¢–∏–ø –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞
DEFAULT_AUTO_FIELD = os.getenv('DEFAULT_AUTO_FIELD', 'django.db.models.BigAutoField')

# üîó CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

# üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
LOGIN_URL = 'directory:auth:login'
LOGIN_REDIRECT_URL = 'directory:home'
LOGOUT_REDIRECT_URL = 'directory:auth:login'
AUTH_USER_MODEL = 'auth.User'

# üç™ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Å—Å–∏–π
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_AGE = 3600  # 1 —á–∞—Å
SESSION_COOKIE_NAME = 'sessionid'
SESSION_COOKIE_SECURE = False
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_SAVE_EVERY_REQUEST = True

# üîí CSRF –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
CSRF_COOKIE_NAME = 'csrftoken'
CSRF_COOKIE_SECURE = False
CSRF_TRUSTED_ORIGINS = ['http://localhost:8000', 'http://127.0.0.1:8000']

# üé® –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–æ—Ä–º (crispy-forms)
CRISPY_TEMPLATE_PACK = 'bootstrap4'
CRISPY_ALLOWED_TEMPLATE_PACKS = 'bootstrap4'
CRISPY_FAIL_SILENTLY = not DEBUG

# üí¨ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'
MESSAGE_TAGS = {
    messages.DEBUG: 'alert-secondary',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

# üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Select2 (–µ—Å–ª–∏ –≤—ã —Ä–µ—à–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã, –Ω–æ —Å–µ–π—á–∞—Å —á–µ—Ä–µ–∑ CDN)
SELECT2_JS = 'vendor/select2/dist/js/select2.min.js'
SELECT2_CSS = 'vendor/select2/dist/css/select2.min.css'
SELECT2_I18N_PATH = 'vendor/select2/dist/js/i18n'

# üîç –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è django-autocomplete-light
DAL_MAX_RESULTS = 10
DAL_FORWARD_FIELDS = True
DAL_DELETE_ON_AJAX = True

# üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è MPTT
MPTT_ADMIN_LEVEL_INDENT = 20
MPTT_DEFAULT_LEVEL_INDICATOR = '---'

# üìß Email –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
EMAIL_BACKEND = os.getenv('EMAIL_BACKEND', 'django.core.mail.backends.console.EmailBackend')
EMAIL_HOST = os.getenv('EMAIL_HOST', 'smtp.gmail.com')
EMAIL_PORT = int(os.getenv('EMAIL_PORT', 587))
EMAIL_USE_TLS = os.getenv('EMAIL_USE_TLS', 'True') == 'True'
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')

# üîí –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'
SECURE_REFERRER_POLICY = 'same-origin'

# üêû Debug Toolbar –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
if DEBUG and not TESTING:
    INTERNAL_IPS = ['127.0.0.1', 'localhost']
    DEBUG_TOOLBAR_CONFIG = {
        'SHOW_TOOLBAR_CALLBACK': lambda request: DEBUG,
        'SHOW_TEMPLATE_CONTEXT': True,
        'INTERCEPT_REDIRECTS': False,
        'IS_RUNNING_TESTS': False,
    }
    DEBUG_TOOLBAR_PANELS = [
        'debug_toolbar.panels.versions.VersionsPanel',
        'debug_toolbar.panels.timer.TimerPanel',
        'debug_toolbar.panels.settings.SettingsPanel',
        'debug_toolbar.panels.headers.HeadersPanel',
        'debug_toolbar.panels.request.RequestPanel',
        'debug_toolbar.panels.sql.SQLPanel',
        'debug_toolbar.panels.staticfiles.StaticFilesPanel',
        'debug_toolbar.panels.templates.TemplatesPanel',
        'debug_toolbar.panels.cache.CachePanel',
        'debug_toolbar.panels.signals.SignalsPanel',
        'debug_toolbar.panels.logging.LoggingPanel',
        'debug_toolbar.panels.redirects.RedirectsPanel',
    ]

# üìù –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'django.log',
            'level': 'DEBUG',
        },
    },
    'root': {
        'handlers': ['console', 'file'],
        'level': 'INFO',
    },
    'loggers': {
        'directory': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

# üíæ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}
